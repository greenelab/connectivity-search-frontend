{"version":3,"sources":["util.js","logo-animated.svg","header.js","arrow-icon-both.svg","arrow-icon-forward.svg","arrow-icon-backward.svg","chip-gene.svg","chip-compound.svg","chip-anatomy.svg","chip-disease.svg","chip-symptom.svg","chip-side-effect.svg","chip-biological-process.svg","chip-cellular-component.svg","chip-molecular-function.svg","chip-pathway.svg","chip-pharmacologic-class.svg","chips.js","tooltip.js","buttons.js","backend-query.js","actions.js","node-search.js","dynamic-field.js","collapsible-section.js","node-results.js","metapath-results.js","path-results.js","number-box.js","path-graph.js","app.js","index.js","reducers.js"],"names":["toExponential","number","parseFloat","mantissa","split","toFixed","exponent","parseInt","react_default","a","createElement","toGradient","gradient","map","color","join","r","g","b","percent","Math","log10","min","max","gradientIndex","length","lowerColor","floor","higherColor","ceil","percentBetween","downloadCsv","data","filename","fileContent","cell","blob","Blob","type","url","window","URL","createObjectURL","link","document","body","appendChild","href","download","click","revokeObjectURL","remove","makeFilenameFriendly","string","trim","replace","substring","sortCustom","array","order","key","sort","indexOf","transferObjectProps","oldArray","newArray","compareKeys","transferKeys","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","newElement","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","oldElement","matches","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","compareKey","err","return","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","transferKey","compareArrays","array1","array2","checkReverse","every","index","slice","reverse","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","_ref3","id","stroke","strokeWidth","fill","d","_ref4","_ref5","transform","cx","cy","_ref6","_ref7","_ref8","logo_animated_SvgLogoAnimated","_ref","svgRef","props","viewBox","ref","ForwardRef","forwardRef","Header","__webpack_require__","p","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","showLogo","setTimeout","setState","inherits","createClass","logo","className","Component","arrow_icon_both_extends","arrow_icon_both_objectWithoutProperties","arrow_icon_both_objectWithoutPropertiesLoose","arrow_icon_both_ref2","arrow_icon_both_SvgArrowIconBoth","arrow_icon_both_ForwardRef","arrow_icon_forward_extends","arrow_icon_forward_objectWithoutProperties","arrow_icon_forward_objectWithoutPropertiesLoose","arrow_icon_forward_ref2","arrow_icon_forward_SvgArrowIconForward","arrow_icon_forward_ForwardRef","arrow_icon_backward_extends","arrow_icon_backward_objectWithoutProperties","arrow_icon_backward_objectWithoutPropertiesLoose","arrow_icon_backward_ref2","arrow_icon_backward_SvgArrowIconBackward","arrow_icon_backward_ForwardRef","chip_gene_extends","chip_gene_objectWithoutProperties","chip_gene_objectWithoutPropertiesLoose","chip_gene_ref2","chip_gene_SvgChipGene","chip_gene_ForwardRef","chip_compound_extends","chip_compound_objectWithoutProperties","chip_compound_objectWithoutPropertiesLoose","chip_compound_ref2","chip_compound_SvgChipCompound","chip_compound_ForwardRef","chip_anatomy_extends","chip_anatomy_objectWithoutProperties","chip_anatomy_objectWithoutPropertiesLoose","chip_anatomy_ref2","x","y","width","height","chip_anatomy_ref3","strokeLinecap","clipPath","chip_anatomy_SvgChipAnatomy","chip_anatomy_ForwardRef","chip_disease_extends","chip_disease_objectWithoutProperties","chip_disease_objectWithoutPropertiesLoose","chip_disease_ref2","chip_disease_SvgChipDisease","chip_disease_ForwardRef","chip_symptom_extends","chip_symptom_objectWithoutProperties","chip_symptom_objectWithoutPropertiesLoose","chip_symptom_ref2","chip_symptom_ref3","chip_symptom_SvgChipSymptom","chip_symptom_ForwardRef","chip_side_effect_extends","chip_side_effect_objectWithoutProperties","chip_side_effect_objectWithoutPropertiesLoose","chip_side_effect_ref2","chip_side_effect_ref3","chip_side_effect_SvgChipSideEffect","chip_side_effect_ForwardRef","chip_biological_process_extends","chip_biological_process_objectWithoutProperties","chip_biological_process_objectWithoutPropertiesLoose","chip_biological_process_ref2","chip_biological_process_ref3","chip_biological_process_SvgChipBiologicalProcess","chip_biological_process_ForwardRef","chip_cellular_component_extends","chip_cellular_component_objectWithoutProperties","chip_cellular_component_objectWithoutPropertiesLoose","chip_cellular_component_ref2","chip_cellular_component_ref3","chip_cellular_component_SvgChipCellularComponent","chip_cellular_component_ForwardRef","chip_molecular_function_extends","chip_molecular_function_objectWithoutProperties","chip_molecular_function_objectWithoutPropertiesLoose","chip_molecular_function_ref2","chip_molecular_function_ref3","strokeLinejoin","chip_molecular_function_ref4","chip_molecular_function_SvgChipMolecularFunction","chip_molecular_function_ForwardRef","chip_pathway_extends","chip_pathway_objectWithoutProperties","chip_pathway_objectWithoutPropertiesLoose","chip_pathway_ref2","chip_pathway_ref3","chip_pathway_ref4","chip_pathway_SvgChipPathway","chip_pathway_ForwardRef","chip_pharmacologic_class_extends","chip_pharmacologic_class_objectWithoutProperties","chip_pharmacologic_class_objectWithoutPropertiesLoose","chip_pharmacologic_class_ref2","chip_pharmacologic_class_ref3","chip_pharmacologic_class_SvgChipPharmacologicClass","chip_pharmacologic_class_ForwardRef","MetanodeChip","icon","fillColor","textColor","style","hetioStyles","fill_color","text_color","connect","MetaedgeChip","_Component2","direction","abbreviation","metagraph","kind_to_abbrev","data-name","data-abbreviation","pathChips","path","expanded","entry","element","chips_NodeChip","name","chips_MetaedgeChip","NodeChip","_Component3","background","data-expanded","Tooltip","open","opacity","onMouseEnter","bind","assertThisInitialized","openTooltip","onMouseLeave","event","_this2","hover","left","getBoundingClientRect","documentElement","scrollLeft","top","scrollTop","clientWidth","text","Fragment","children","React","Children","isValidElement","cloneElement","tooltip_Popup","Popup","ReactDOM","createPortal","Fade_default","in","Button","tooltip_Tooltip","tooltipText","onClick","ctrlKey","onCtrlClick","shiftKey","onShiftClick","TextButton","buttons_Button","index_es","Checkbox","checked","faCheck","EyeCheckbox","_Component4","faEye","HighlighterCheckbox","_Component5","faHighlighter","metagraphUrl","hetioDefinitions","nodeSearchServer","metapathSearchServer","pathSearchServer","fetchJson","fetch","then","response","json","results","catch","error","console","log","lookupNodeById","searchPaths","sourceId","targetId","metapath","params","URLSearchParams","set","toString","updateSourceTargetNodes","payload","sourceNode","targetNode","updateMetapaths","metapaths","updatePathQueries","pathQueries","NodeSearch","filters","filterString","updateFilters","NodeSearchContext","Provider","node_search_Filters","node_search_SourceNodeSearch","node_search_SwapButton","node_search_TargetNodeSearch","createContext","Filters","toggle","solo","prevProps","metanode_kinds","filter","push","active","allOthersOff","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","allOn","list","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_this3","buttons","node_search_FilterButton","metanodes","FilterButton","_this4","chips_MetanodeChip","SourceNodeSearch","_this5","onChange","dispatch","node_search_SearchBox","label","node","TargetNodeSearch","_this6","activeElement","blur","SearchBox","_this7","searchResults","inputRef","createRef","formRef","onInput","searchString","_this8","metatypes","searchNodes","context","item","_this9","downshift_esm","onInputValueChange","itemToString","selectedItem","getInputProps","getItemProps","getMenuProps","isOpen","highlightedIndex","clearSelection","node_search_TextBox","node_search_Dropdown","contextType","TextBox","_this10","focused","onFocus","onBlur","overlay","showOverlay","metanode","TextField_default","placeholder","classes","root","InputProps","input","faSearch","Dropdown","_this11","Popper_default","anchorEl","current","placement","container","disablePortal","Paper_default","result","MenuItem_default","identifier","SwapButton","_this12","faExchangeAlt","DynamicField","field","tagName","toLowerCase","focus","deselectAll","selectAll","getSelection","empty","selectAllChildren","displayValue","fullValue","tabIndex","CollapsibleSection","collapsed","loadState","saveState","localStorage","getItem","setItem","String","data-collapsed","faAngleUp","faAngleDown","NodeResults","node_results_NodeCard","NodeCard","collapsible_section_CollapsibleSection","node_results_TableFull","node_results_TableEmpty","TableFull","showMore","toggleShowMore","properties","objectSpread","common","nodes","hetmechDefinitions","primaryFields","specialSecondCol","linkUrl","linkText","_i","_regexes","regex","RegExp","shortenUrl","firstCol","secondCol","splice","findIndex","extraFields","fields","concat","dynamic_field_DynamicField","rows","colSpan","buttons_TextButton","TableEmpty","MetapathResults","metapath_results_TableFull","metapath_results_TableEmpty","allChecked","sortColumn","sortUp","toggleAllChecked","checkAll","uncheckAll","allOthersUnchecked","toggleChecked","soloChecked","changeSort","updateAllChecked","preventDefault","newState","comparison","Number","isNaN","headers","_Object$keys","table","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","row","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","header","makeMetapathsTable","sortedMetapaths","compareMetapaths","compareNumbers","metapathCount","metapathSelectedCount","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","TableContext","faDownload","faAngleLeft","faAngleRight","metapath_results_TableHead","metapath_results_TableBody","TableHead","extraRow","cols","buttons_Checkbox","metapath_results_TableHeadCell","buttonClass","fieldName","extraCols","TableHeadCell","metapath_results_SortButton","SortButton","faSortUp","faSortDown","faSort","TableBody","metapath_results_TableBodyRow","TableBodyRow","edges","path_count","metapath_results_TableBodyCell","fieldClass","metapath_metaedges","metapath_name","backgroundColor","adjusted_p_value","p_value","dwpc","dgp_source_degree","dgp_target_degree","dgp_n_dwpcs","dgp_n_nonzero_dwpcs","dgp_nonzero_mean","dgp_nonzero_sd","TableBodyCell","PathResults","path_results_TableFull","path_results_TableEmpty","allHighlighted","toggleAllHighlighted","highlightAll","unhighlightAll","allOthersUnhighlighted","toggleHighlighted","soloHighlighted","updateAllHighlighted","pathQuery","paths","thePath","comparePaths","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","highlighted","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_iterator24","path1","path2","node_ids","rel_ids","_iteratorNormalCompletion31","_didIteratorError31","_iteratorError31","_step31","_iterator31","_iteratorNormalCompletion32","_didIteratorError32","_iteratorError32","_step32","_iterator32","relationships","_iteratorNormalCompletion33","_didIteratorError33","_iteratorError33","_step33","_iterator33","toConsumableArray","_i2","_paths","description","textDescription","assemblePath","_i3","_i4","_paths2","_iteratorNormalCompletion34","_didIteratorError34","_iteratorError34","_step34","_iterator34","makePathsTable","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","_iteratorNormalCompletion26","_didIteratorError26","_iteratorError26","_step26","_iterator26","sortedPaths","_iteratorNormalCompletion27","_didIteratorError27","_iteratorError27","_step27","_iterator27","chipDescription","pathCount","pathSelectedCount","_iteratorNormalCompletion28","_didIteratorError28","_iteratorError28","_step28","_iterator28","pathHighlightedCount","_iteratorNormalCompletion29","_didIteratorError29","_iteratorError29","_step29","_iterator29","path_results_TableContext","path_results_TableHead","path_results_TableBody","buttons_EyeCheckbox","buttons_HighlighterCheckbox","path_results_TableHeadCell","path_results_SortButton","path_results_TableBodyRow","path_results_TableBodyCell","score","percent_of_DWPC","pathNodes","_iteratorNormalCompletion30","_didIteratorError30","_iteratorError30","_step30","_iterator30","pathEdges","edge","prevNode","directed","source_neo4j_id","neo4j_id","kind","assembledPath","_pathNodes","shift","arrow","NumberBox","onKeyPress","nativeEvent","onArrows","onType","onSubmit","step","maxWidth","maxHeight","edgeSpreadAngle","PI","PathGraph","nodeCount","edgeCount","selectedElement","graph","expandContainer","collapseContainer","updateSectionWidth","setWidth","setHeight","setGraphCounts","setSelectedElement","addEventListener","prevState","round","sectionWidth","findDOMNode","XMLSerializer","serializeToString","downloadSvg","getElementById","info","elementType","path_graph_SelectedInfo","faPowerOff","restartGraph","faMapMarkerAlt","unpinAll","faMapMarker","pinAll","faExpand","fitView","number_box_NumberBox","faExpandArrowsAlt","faCompressArrowsAlt","path_graph_Graph","Graph","assembleGraph","resetView","onSimulationTick","onNodeEdgeClick","onNodeDragStart","onNodeDragEnd","onViewClick","createGraph","updateGraph","simulation","alpha","restart","svg","d3","force","distance","radius","strength","on","viewZoomHandler","scaleExtent","onViewZoom","nodeDragHandler","onNodeDrag","each","positionEdge","positionEdgeLabel","positionNode","s","attr","x1","y1","x2","y2","angle","atan2","targetRadius","nodeRadius","edgeArrowSize","coincidentOffset","cos","sin","angleOffset","sqrt","pow","sag","textX","textY","dy","edgeLabel","contents","getBBox","midX","midY","scale","translateX","translateY","translate","forEach","fx","fy","stopPropagation","selected","updateNodeCircles","updateEdgeLines","alphaTarget","links","edgeLineHighlights","enter","append","merge","exit","edgeLines","edgeThickness","edgeLabels","nodeCircleHighlights","nodeCircles","getNodeFillColor","layer","nodeLabels","select","nodeFontSize","getNodeTextColor","html","substr","nodeCharLimit","updateEdgeLineHighlights","updateEdgeLabels","updateNodeCircleHighlights","updateNodeLabels","pinSourceAndTargetNodes","updateSimulation","target_neo4j_id","nodeDistance","firstPath","_loop","nodeId","existingNode","find","existing","_loop2","relId","existingEdge","edgeBins","_loop3","edgeA","matched","_edgeBins2","edgeBin","edgeB","_edgeBins","firstSource","offset","sourceNodeIndex","targetNodeIndex","minLeft","title","location","xmlns","refX","refY","orient","markerUnits","markerWidth","markerHeight","SelectedInfo","Array","col","App","fetchDefinitions","updateNodesFromUrl","updateHistory","updateTitle","updatePaths","onNodeChange","onMetapathChange","promises","Promise","all","search","sourceNodeId","get","targetNodeId","path_counts","searchMetapaths","oldParams","newParams","origin","pathname","history","pushState","metapath_abbreviation","header_Header","node_search_NodeSearch","node_results_NodeResults","metapath_results_MetapathResults","path_results_PathResults","path_graph_PathGraph","store","createStore","action","oldQueries","newQueries","subKey","element1","element2","newQuery","oldQuery","isArray","transferQueryProps","applyMiddleware","thunk","render","react_redux_es","app_App"],"mappings":"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","file":"static/js/main.133cfab6.chunk.js","sourcesContent":["import React from 'react';\n\n// get html of number in exponential form\nexport function toExponential(number) {\n  number = parseFloat(number).toExponential(1);\n  const mantissa = parseFloat(number.split('e')[0]).toFixed(1);\n  const exponent = parseInt(number.split('e')[1]);\n  return (\n    <span>\n      {mantissa} &times; 10<sup>{exponent}</sup>\n    </span>\n  );\n}\n\n// get html of number in regular form, rounded to 1 decimal digit\nexport function toFixed(number) {\n  return <span>{parseFloat(number).toFixed(1)}</span>;\n}\n\n// map number to css color (rgba or hex) based on specified gradient\nexport function toGradient(number) {\n  // pretty gradient\n  let gradient = [\n    'rgba(255, 255, 255, 0)',\n    'rgba(255, 249, 196, 1)',\n    'rgba(255, 236, 179, 1)',\n    'rgba(255, 224, 178, 1)',\n    'rgba(255, 204, 188, 1)',\n    'rgba(248, 187, 208, 1)'\n  ];\n\n  // split each gradient color into component rgba values\n  gradient = gradient.map((color) => {\n    color = color.split(/[^0-9,]/).join('');\n    color = {\n      r: parseInt(color.split(',')[0]),\n      g: parseInt(color.split(',')[1]),\n      b: parseInt(color.split(',')[2]),\n      a: parseFloat(color.split(',')[3])\n    };\n    return color;\n  });\n\n  // take log of number\n  // (equivalent of getting exponent of number in exponential notation)\n  number = Math.log10(number);\n\n  // start/end cutoffs for exponent\n  const rangeStart = 0;\n  const rangeEnd = -8;\n\n  // get percent that number is through range\n  let percent = (number - rangeStart) / (rangeEnd - rangeStart);\n  percent = Math.min(Math.max(0, percent), 1);\n\n  // map percent to float gradient index\n  const gradientIndex = (gradient.length - 1) * percent;\n  // get integer indices below/above float index\n  const lowerColor = gradient[Math.floor(gradientIndex)];\n  const higherColor = gradient[Math.ceil(gradientIndex)];\n  // get percent that float index is between nearest integer indices\n  const percentBetween = gradientIndex % 1;\n\n  // interpolate color between gradient colors below/above float index\n  let color = {\n    r: lowerColor.r + (higherColor.r - lowerColor.r) * percentBetween,\n    g: lowerColor.g + (higherColor.g - lowerColor.g) * percentBetween,\n    b: lowerColor.b + (higherColor.b - lowerColor.b) * percentBetween,\n    a: lowerColor.a + (higherColor.a - lowerColor.a) * percentBetween\n  };\n\n  // clean rgba values\n  color.r = Math.floor(color.r);\n  color.g = Math.floor(color.g);\n  color.b = Math.floor(color.b);\n  color.a = color.a.toFixed(3);\n\n  // convert color in rgba format to css color string\n  color =\n    'rgba(' + color.r + ', ' + color.g + ', ' + color.b + ', ' + color.a + ')';\n\n  // return color\n  return color || '#ffffff';\n}\n\n// downloads provided data as csv file\n// data in format [ [A1, B1] , [A2, B2] ]\nexport function downloadCsv(data, filename) {\n  const fileContent = data.map((cell) => cell.join(',')).join('\\n');\n  const blob = new Blob([fileContent], { type: 'text/csv' });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  document.body.appendChild(link);\n  link.href = url;\n  link.download = (filename || 'data') + '.csv';\n  link.click();\n  window.URL.revokeObjectURL(url);\n  link.remove();\n}\n\n// make OS-friendly filename\nexport function makeFilenameFriendly(string) {\n  // remove leading and trailing whitespace\n  string = string.trim();\n  // replace special characters with dashes\n  string = string.replace(/[^0-9A-Za-z]/gi, '-');\n  // shorten if too long\n  string = string.substring(0, 15);\n  return string;\n}\n\n// downloads provided data as svg file\nexport function downloadSvg(data, filename) {\n  const fileContent = new XMLSerializer().serializeToString(data);\n  const blob = new Blob([fileContent], { type: 'image/svg+xml' });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  document.body.appendChild(link);\n  link.href = url;\n  link.download = (filename || 'data') + '.svg';\n  link.click();\n  window.URL.revokeObjectURL(url);\n  link.remove();\n}\n\n// show debug message on screen\n// useful for mobile debugging where no dev console available\nexport function debug(...args) {\n  let div = document.getElementById('_debug');\n  if (!div) {\n    div = document.createElement('div');\n    div.id = '_debug';\n    div.style.position = 'fixed';\n    div.style.left = 0;\n    div.style.top = 0;\n    div.style.background = 'rgba(255, 255, 255, 0.75)';\n    div.style.fontFamily = 'monospace';\n    div.style.fontSize = '10px';\n    div.style.color = '#ff00ff';\n    div.style.zIndex = 99999;\n    document.body.appendChild(div);\n  }\n  div.innerHTML += args.join(' | ');\n  div.innerHTML += '<br>';\n}\n\n// sort array in custom order\nexport function sortCustom(array, order, key) {\n  return array.sort((a, b) => {\n    if (key) {\n      a = a[key];\n      b = b[key];\n    }\n\n    a = order.indexOf(a);\n    b = order.indexOf(b);\n\n    if (a !== -1 && b !== -1)\n      return a - b;\n    else if (a !== -1)\n      return -1;\n    else if (b !== -1)\n      return 1;\n    else\n      return b - a;\n  });\n}\n\n// remove unnecessary preceding 'www.' and etc from url\nexport function shortenUrl(url) {\n  const regexes = ['^http://', '^https://', '^www.'];\n  for (const regex of regexes)\n    url = url.replace(new RegExp(regex), '');\n\n  return url;\n}\n\n// loop through new array of objects. for each object, find object in old\n// array that matches all compare keys, and transfer specified keys from\n// old object to new\nexport function transferObjectProps(\n  oldArray,\n  newArray,\n  compareKeys,\n  transferKeys\n) {\n  for (const newElement of newArray) {\n    for (const oldElement of oldArray) {\n      let matches = true;\n      for (const compareKey of compareKeys) {\n        if (oldElement[compareKey] !== newElement[compareKey]) {\n          matches = false;\n          break;\n        }\n      }\n      if (matches) {\n        for (const transferKey of transferKeys)\n          newElement[transferKey] = oldElement[transferKey];\n      }\n    }\n  }\n\n  return newArray;\n}\n\n// same as transferObjectProps, except arrays are now assumed to contain\n// objects with subKey that contains another array that contains the objects\n// to be transferred\nexport function transferQueryProps(\n  oldQueries,\n  newQueries,\n  subKey,\n  compareKeys,\n  transferKeys\n) {\n  for (const newQuery of newQueries) {\n    for (const newElement of newQuery[subKey]) {\n      for (const oldQuery of oldQueries) {\n        for (const oldElement of oldQuery[subKey]) {\n          let matches = true;\n          for (const compareKey of compareKeys) {\n            if (\n              !compareElements(oldElement[compareKey], newElement[compareKey])\n            ) {\n              matches = false;\n              break;\n            }\n          }\n          if (matches) {\n            for (const transferKey of transferKeys)\n              newElement[transferKey] = oldElement[transferKey];\n          }\n        }\n      }\n    }\n  }\n\n  return newQueries;\n}\n\n// compare two elements as primitives (eg number === number or string ===\n// string) or as arrays if both are arrays\nexport function compareElements(element1, element2) {\n  if (Array.isArray(element1) && Array.isArray(element2))\n    return compareArrays(element1, element2, true);\n  else\n    return element1 === element2;\n}\n\n// checks if arrays of primitives (strings, numbers, etc) are equal.\n// if specified, also check if arrays are equal in reverse\nexport function compareArrays(array1, array2, checkReverse) {\n  if (array1.length !== array2.length)\n    return false;\n\n  if (!checkReverse) {\n    // check forwards\n    return array1.every((value, index) => value === array2[index]);\n  } else {\n    // check forwards and backwards\n    return (\n      array1.every((value, index) => value === array2[index]) ||\n      array1\n        .slice()\n        .reverse()\n        .every((value, index) => value === array2[index])\n    );\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"style\", null, \"\\n    #back_line,\\n    #front_line,\\n    #circle_1,\\n    #circle_2,\\n    #circle_3,\\n    #circle_4 {\\n      animation-duration: 1.5s;\\n      animation-timing-function: ease;\\n      animation-fill-mode: forwards;\\n    }\\n    #back_line {\\n      animation-name: draw_back_line;\\n    }\\n    @keyframes draw_back_line {\\n      0% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 60;\\n      }\\n      60% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 60;\\n      }\\n      100% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 0;\\n      }\\n    }\\n    #front_line {\\n      animation-name: draw_front_line;\\n    }\\n    @keyframes draw_front_line {\\n      0% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 158;\\n      }\\n      60% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 0;\\n      }\\n      100% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 0;\\n      }\\n    }\\n    #circle_1 {\\n      animation-name: draw_circle_1;\\n    }\\n    #circle_2 {\\n      animation-name: draw_circle_2;\\n    }\\n    #circle_3 {\\n      animation-name: draw_circle_3;\\n    }\\n    #circle_4 {\\n      animation-name: draw_circle_4;\\n    }\\n    @keyframes draw_circle_1 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      20% {\\n        transform: scale(0);\\n      }\\n      40% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_2 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      30% {\\n        transform: scale(0);\\n      }\\n      50% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_3 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      40% {\\n        transform: scale(0);\\n      }\\n      60% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_4 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      50% {\\n        transform: scale(0);\\n      }\\n      70% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n  \");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"back_line\",\n  stroke: \"#bdbdbd\",\n  strokeWidth: 5,\n  fill: \"none\",\n  d: \"       M 20 50       L 80 50     \"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"front_line\",\n  stroke: \"#424242\",\n  strokeWidth: 7.5,\n  fill: \"none\",\n  d: \"       M 0 50       L 20 50       L 40 75       L 60 25       L 80 50       L 100 50     \"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(20,50)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_1\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#02b3e4\"\n}));\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(40,75)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_2\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#c341d8\"\n}));\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(60,25)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_3\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#fa750f\"\n}));\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(80,50)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_4\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#e91e63\"\n}));\n\nvar SvgLogoAnimated = function SvgLogoAnimated(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogoAnimated, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo-animated.94624129.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Component } from 'react';\n\nimport { ReactComponent as Logo } from './logo-animated.svg';\n\n// page header display component\nexport class Header extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.showLogo = false;\n\n    // wait a bit for page to load before starting logo animation\n    window.setTimeout(() => this.setState({ showLogo: true }), 1000);\n  }\n\n  // display component\n  render() {\n    let logo;\n\n    if (this.state.showLogo)\n      logo = <Logo className='logo' />;\n    else\n      logo = <svg className='logo' />;\n    return (\n      <header>\n        {logo}\n        <h1>HETMECH</h1>\n        <h2>\n          A project of the{' '}\n          <a href='http://www.greenelab.com/'>Greene Laboratory</a>\n        </h2>\n      </header>\n    );\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50     \"\n});\n\nvar SvgArrowIconBoth = function SvgArrowIconBoth(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconBoth, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-both.5f01d574.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50       M 70 35       L 90 50       L 70 65     \"\n});\n\nvar SvgArrowIconForward = function SvgArrowIconForward(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconForward, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-forward.43aa27a1.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50       M 30 35       L 10 50       L 30 65     \"\n});\n\nvar SvgArrowIconBackward = function SvgArrowIconBackward(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconBackward, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-backward.c6a85500.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746       L 78.2842755245486 50       L 50 50     \"\n});\n\nvar SvgChipGene = function SvgChipGene(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipGene, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-gene.6afa0a5b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipCompound = function SvgChipCompound(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipCompound, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-compound.90909a37.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  clipPath: \"url(#clip)\",\n  d: \"         M 10 110         L 50 0         L 90 110         M 30 70         L 70 70       \"\n}));\n\nvar SvgChipAnatomy = function SvgChipAnatomy(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipAnatomy, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-anatomy.b055d214.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 25 10       L 50 10       A 40 40 0 0 1 50 90       L 25 90       Z     \"\n});\n\nvar SvgChipDisease = function SvgChipDisease(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipDisease, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-disease.1a26261b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 80 18       C 70 14 62 10 50 10       C 42 10 22 14 22 30       C 22 46 38 48.4 50 50       C 62 51.6 78 54 78 70       C 78 86 59 90 50 90       C 38 90 30 86 20 82     \"\n});\n\nvar SvgChipSymptom = function SvgChipSymptom(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipSymptom, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-symptom.2689ac77.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-42,0)\",\n  d: \"       M 80 18       C 70 14 62 10 50 10       C 42 10 22 14 22 30       C 22 46 38 48.4 50 50       C 62 51.6 78 54 78 70       C 78 86 59 90 50 90       C 38 90 30 86 20 82     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(42,0)\",\n  d: \"       M 75 10       L 25 10       L 25 90       L 75 90       M 30 50       L 65 50     \"\n});\n\nvar SvgChipSideEffect = function SvgChipSideEffect(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipSideEffect, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-side-effect.dbe94434.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-44,0)\",\n  d: \"       M 25 10       L 60 10       A 20 20 0 0 1 60 50       A 20 20 0 0 1 60 90       L 25 90       Z       M 30 50       L 60 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(44,0)\",\n  d: \"       M 25 90       L 25 10       L 60 10       A 20 20 0 0 1 60 50       L 30 50     \"\n});\n\nvar SvgChipBiologicalProcess = function SvgChipBiologicalProcess(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipBiologicalProcess, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-biological-process.979f4ab8.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-43,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(48,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipCellularComponent = function SvgChipCellularComponent(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipCellularComponent, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-cellular-component.b874e365.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  strokeLinejoin: \"bevel\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-40,0)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 10 90       L 10 -10       L 50 65       L 90 -10       L 90 90     \"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(60,0)\",\n  d: \"       M 75 10       L 25 10       L 25 90       M 30 50       L 65 50     \"\n});\n\nvar SvgChipMolecularFunction = function SvgChipMolecularFunction(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipMolecularFunction, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-molecular-function.787806a8.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-52,0)\",\n  d: \"     M 25 90     L 25 10     L 60 10     A 20 20 0 0 1 60 50     L 30 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  strokeLinejoin: \"bevel\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(45,0)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 10 -10       L 25 100       L 50 35       L 75 100       L 90 -10     \"\n});\n\nvar SvgChipPathway = function SvgChipPathway(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipPathway, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-pathway.543f179a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-50,0)\",\n  d: \"       M 25 90       L 25 10       L 60 10       A 20 20 0 0 1 60 50       L 30 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(48,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipPharmacologicClass = function SvgChipPharmacologicClass(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipPharmacologicClass, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-pharmacologic-class.b1fbdc49.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './chips.css';\n\nimport { ReactComponent as ArrowBoth } from './arrow-icon-both.svg';\nimport { ReactComponent as ArrowForward } from './arrow-icon-forward.svg';\nimport { ReactComponent as ArrowBackward } from './arrow-icon-backward.svg';\n\nimport { ReactComponent as Gene } from './chip-gene.svg';\nimport { ReactComponent as Compound } from './chip-compound.svg';\nimport { ReactComponent as Anatomy } from './chip-anatomy.svg';\nimport { ReactComponent as Disease } from './chip-disease.svg';\nimport { ReactComponent as Symptom } from './chip-symptom.svg';\nimport { ReactComponent as SideEffect } from './chip-side-effect.svg';\nimport { ReactComponent as BiologicalProcess } from './chip-biological-process.svg';\nimport { ReactComponent as CellularComponent } from './chip-cellular-component.svg';\nimport { ReactComponent as MolecularFunction } from './chip-molecular-function.svg';\nimport { ReactComponent as Pathway } from './chip-pathway.svg';\nimport { ReactComponent as PharmacologicClass } from './chip-pharmacologic-class.svg';\n\n// metanode 'chip' component\n// colored circle with abbreviation text in middle\n// eg (G) for 'gene'\nexport class MetanodeChip extends Component {\n  // display component\n  render() {\n    // get icon\n    let icon;\n    switch (this.props.type) {\n      case 'Gene':\n        icon = <Gene />;\n        break;\n      case 'Compound':\n        icon = <Compound />;\n        break;\n      case 'Anatomy':\n        icon = <Anatomy />;\n        break;\n      case 'Disease':\n        icon = <Disease />;\n        break;\n      case 'Symptom':\n        icon = <Symptom />;\n        break;\n      case 'Side Effect':\n        icon = <SideEffect />;\n        break;\n      case 'Biological Process':\n        icon = <BiologicalProcess />;\n        break;\n      case 'Cellular Component':\n        icon = <CellularComponent />;\n        break;\n      case 'Molecular Function':\n        icon = <MolecularFunction />;\n        break;\n      case 'Pathway':\n        icon = <Pathway />;\n        break;\n      case 'Pharmacologic Class':\n        icon = <PharmacologicClass />;\n        break;\n      default:\n        break;\n    }\n\n    let fillColor = '#424242';\n    let textColor = '#fafafa';\n    const style = this.props.hetioStyles[this.props.type];\n    if (style && style.fill_color)\n      fillColor = style.fill_color;\n    if (style && style.text_color)\n      textColor = style.text_color;\n\n    return (\n      <div className='metanode_chip' style={{ color: textColor }}>\n        <svg viewBox='0 0 100 100'>\n          <circle cx='50' cy='50' r='49' fill={fillColor} />\n        </svg>\n        {icon}\n      </div>\n    );\n  }\n}\n// connect component to global state\nMetanodeChip = connect((state) => ({\n  hetioStyles: state.hetioStyles\n}))(MetanodeChip);\n\n// metaedge 'chip' component\n// svg arrow with abbreviation text above\nexport class MetaedgeChip extends Component {\n  // display component\n  render() {\n    // get edge direction icon\n    let icon;\n    switch (this.props.direction) {\n      case 'backward':\n        icon = <ArrowBackward />;\n        break;\n      case 'forward':\n        icon = <ArrowForward />;\n        break;\n      default:\n        icon = <ArrowBoth />;\n        break;\n    }\n\n    let abbreviation = '';\n    if (this.props.metagraph.kind_to_abbrev)\n      abbreviation = this.props.metagraph.kind_to_abbrev[this.props.type];\n\n    return (\n      <div\n        className='metaedge_chip'\n        data-name={this.props.type}\n        data-abbreviation={abbreviation}\n      >\n        {icon}\n      </div>\n    );\n  }\n}\n// connect component to global state\nMetaedgeChip = connect((state) => ({\n  metagraph: state.metagraph\n}))(MetaedgeChip);\n\n// get html of metapath in form of visualization chips\nexport function metapathChips(edges) {\n  const path = edges.map((entry, index) => {\n    return (\n      <React.Fragment key={index}>\n        <MetanodeChip type={entry[0]} />\n        <MetaedgeChip type={entry[2]} direction={entry[3]} />\n        {index === edges.length - 1 && <MetanodeChip type={entry[1]} />}\n      </React.Fragment>\n    );\n  });\n\n  return path;\n}\n\n// get html of path in form of visualization chips\nexport function pathChips(path, expanded) {\n  return path.map((entry, index) => {\n    if (entry.element === 'node') {\n      return (\n        <NodeChip\n          key={index}\n          type={entry.type}\n          name={entry.name}\n          expanded={expanded}\n        />\n      );\n    }\n    if (entry.element === 'edge') {\n      return (\n        <MetaedgeChip\n          key={index}\n          type={entry.type}\n          direction={entry.direction}\n        />\n      );\n    }\n    return '';\n  });\n}\n\n// node 'chip' component\nexport class NodeChip extends Component {\n  // display component\n  render() {\n    let fillColor = '#424242';\n    let textColor = '#fafafa';\n    const style = this.props.hetioStyles[this.props.type];\n    if (style && style.fill_color)\n      fillColor = style.fill_color;\n    if (style && style.text_color)\n      textColor = style.text_color;\n\n    return (\n      <span\n        className='node_chip'\n        style={{ background: fillColor, color: textColor }}\n        data-expanded={this.props.expanded}\n      >\n        {this.props.name}\n      </span>\n    );\n  }\n}\n// connect component to global state\nNodeChip = connect((state) => ({\n  hetioStyles: state.hetioStyles\n}))(NodeChip);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Component } from 'react';\nimport Fade from '@material-ui/core/Fade';\n\nimport './tooltip.css';\n\n// open delay in ms\nconst delay = 1000;\n\n// tooltip (helper text) popup component\nexport class Tooltip extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.open = false;\n    this.state.x = 0;\n    this.state.y = 0;\n    this.state.opacity = 0;\n\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.openTooltip = this.openTooltip.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n  }\n\n  // when mouse enters target\n  onMouseEnter(event) {\n    const target = event.target;\n    // delay opening tooltip\n    window.setTimeout(() => this.openTooltip(target), delay);\n    // track hover state\n    this.setState({ hover: true });\n  }\n\n  // open tooltip\n  openTooltip(target) {\n    // if target not being hovered anymore, cancel open\n    // if target not specified, exit\n    if (!this.state.hover || !target) {\n      this.setState({ open: false });\n      return;\n    }\n\n    // get x/y position of target to pass to tooltip popup\n    const left =\n      target.getBoundingClientRect().left + document.documentElement.scrollLeft;\n    const top =\n      target.getBoundingClientRect().top + document.documentElement.scrollTop;\n\n    // avoid scrunching tooltip too skinny when close to right side of view\n    const x = Math.min(left, document.body.clientWidth - 200);\n    const y = top;\n\n    // open tooltip and update x/y position\n    this.setState({ open: true, x: x, y: y });\n  }\n\n  // when mouse leaves target\n  onMouseLeave() {\n    this.setState({ hover: false, open: false });\n  }\n\n  // display component\n  render() {\n    // if no specified text, skip attaching events and render\n    if (!this.props.text)\n      return <>{this.props.children}</>;\n\n    // mouse handler props to attach to children\n    const props = {\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave\n    };\n\n    // attach handler props to children\n    const children = React.Children.map(this.props.children, (element) => {\n      // if element is react element, create clone with attached props\n      if (React.isValidElement(element))\n        return React.cloneElement(element, props);\n      // if element is text node, wrap in span and attach props\n      else if (typeof element === 'string')\n        return <span {...props}>{element}</span>;\n      // otherwise, pass element through untouched\n      else\n        return element;\n    });\n\n    return (\n      <>\n        {children}\n        {this.state.open && (\n          <Popup\n            text={this.props.text}\n            open={this.state.open}\n            x={this.state.x}\n            y={this.state.y}\n          />\n        )}\n      </>\n    );\n  }\n}\n\n// popup component to display tooltip and text\n// make React 'portal' to append tooltip to body instead of parent\n// (allows tooltip to pop out of containing elements like tables)\nclass Popup extends Component {\n  render() {\n    return ReactDOM.createPortal(\n      <Fade in={this.props.open}>\n        <div\n          className='tooltip'\n          style={{\n            left: this.props.x + 'px',\n            top: this.props.y + 'px'\n          }}\n        >\n          {this.props.text}\n        </div>\n      </Fade>,\n      document.body\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faHighlighter } from '@fortawesome/free-solid-svg-icons';\n\nimport { Tooltip } from './tooltip.js';\nimport './buttons.css';\n\n// button component\nexport class Button extends Component {\n  // display component\n  render() {\n    return (\n      <Tooltip text={this.props.tooltipText}>\n        <button\n          className={this.props.className}\n          onClick={(event) => {\n            if (event.ctrlKey) {\n              if (this.props.onCtrlClick)\n                this.props.onCtrlClick();\n            } else if (event.shiftKey) {\n              if (this.props.onShiftClick)\n                this.props.onShiftClick();\n            } else if (this.props.onClick)\n              this.props.onClick();\n          }}\n        >\n          {this.props.children}\n        </button>\n      </Tooltip>\n    );\n  }\n}\n\n// text button component\n// link colored button with text and icon to right\nexport class TextButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className={this.props.className + ' text_button small'}\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.text && <span>{this.props.text}</span>}\n        <FontAwesomeIcon icon={this.props.icon} className='text_button_icon' />\n      </Button>\n    );\n  }\n}\n\n// checkbox button component\nexport class Checkbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faCheck} />\n        )}\n      </Button>\n    );\n  }\n}\n\n// eye checkbox button component\nexport class EyeCheckbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faEye} />\n        )}\n      </Button>\n    );\n  }\n}\n\n// highlighter checkbox button component\nexport class HighlighterCheckbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faHighlighter} />\n        )}\n      </Button>\n    );\n  }\n}\n","// url for hetmech specific definitions (path count, p value, dwpc, etc)\nimport hetmechDefinitions from './definitions.json';\n// url for metagraph (node and edge metatypes and abbreviations)\nconst metagraphUrl =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/hetnet/json/hetionet-v1.0-metagraph.json';\n// url for hetio definitions (metanodes, properties, etc)\nconst hetioDefinitions =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/describe/definitions.json';\n// url for hetio styles (metanode fill/text color, etc)\nconst hetioStyles =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/describe/styles.json';\n// url for node search\nconst nodeSearchServer = 'https://search-api.het.io/v1/nodes/';\n// url for metapaths search\nconst metapathSearchServer = 'https://search-api.het.io/v1/query-metapaths/';\n// url for paths search\nconst pathSearchServer = 'https://search-api.het.io/v1/query-paths/';\n\n// get resource at url and parse as json\nexport function fetchJson(url) {\n  return fetch(url)\n    .then((response) => response.json())\n    .then((results) => {\n      return results || {};\n    })\n    .catch((error) => {\n      console.log(error);\n      return {};\n    });\n}\n\n// get metagraph\nexport function getMetagraph() {\n  return fetchJson(metagraphUrl);\n}\n\n// get hetio definitions\nexport function getHetioDefinitions() {\n  return fetchJson(hetioDefinitions);\n}\n\n// get hetio styles\nexport function getHetioStyles() {\n  return fetchJson(hetioStyles);\n}\n\n// get hetmech definitions\nexport function getHetmechDefinitions() {\n  return hetmechDefinitions;\n}\n\n// lookup node by id\nexport function lookupNodeById(id) {\n  if (!id)\n    return null;\n  const query = nodeSearchServer + id;\n  return fetchJson(query);\n}\n\n// search for nodes by string, and with metatype filter list\n// accepts comma-separated list of abbreviations of metatypes to include\nexport function searchNodes(searchString, metatypes) {\n  const params = new URLSearchParams();\n  params.set('search', searchString);\n  params.set('limit', '100');\n  if (metatypes)\n    params.set('metanodes', metatypes);\n  const query = nodeSearchServer + '?' + params.toString();\n  return fetchJson(query).then((data) => {\n    return data.results;\n  });\n}\n\n// search for metapaths by source/target id\nexport function searchMetapaths(sourceId, targetId) {\n  const params = new URLSearchParams();\n  params.set('source', sourceId);\n  params.set('target', targetId);\n  const query = metapathSearchServer + '?' + params.toString();\n  return fetchJson(query).then((results) => {\n    return results.path_counts;\n  });\n}\n\n// search for paths by metapaths\nexport function searchPaths(sourceId, targetId, metapath) {\n  const params = new URLSearchParams();\n  params.set('source', sourceId);\n  params.set('target', targetId);\n  params.set('metapath', metapath);\n  const query = pathSearchServer + '?' + params.toString();\n  return fetchJson(query).then((results) => {\n    return results;\n  });\n}\n","// actions to update global state variables\n\n// set definitions\nexport function setDefinitions({\n  metagraph,\n  hetioDefinitions,\n  hetioStyles,\n  hetmechDefinitions\n}) {\n  return {\n    type: 'set_definitions',\n    payload: {\n      metagraph: metagraph,\n      hetioDefinitions: hetioDefinitions,\n      hetioStyles: hetioStyles,\n      hetmechDefinitions: hetmechDefinitions\n    }\n  };\n}\n\n// update source and/or target node\nexport function updateSourceTargetNodes({ sourceNode, targetNode }) {\n  return {\n    type: 'update_source_target_nodes',\n    payload: { sourceNode: sourceNode, targetNode: targetNode }\n  };\n}\n\n// swap source/target node\nexport function swapSourceTargetNodes() {\n  return {\n    type: 'swap_source_target_nodes'\n  };\n}\n\n// update metapaths\nexport function updateMetapaths({ metapaths }) {\n  return {\n    type: 'update_metapaths',\n    payload: { metapaths: metapaths }\n  };\n}\n\n// update path queries\nexport function updatePathQueries({ pathQueries }) {\n  return {\n    type: 'update_path_queries',\n    payload: { pathQueries: pathQueries }\n  };\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Downshift from 'downshift';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport { MetanodeChip } from './chips.js';\nimport { Tooltip } from './tooltip.js';\nimport { Button } from './buttons.js';\nimport { searchNodes } from './backend-query.js';\nimport { updateSourceTargetNodes } from './actions.js';\nimport { swapSourceTargetNodes } from './actions.js';\nimport { sortCustom } from './util.js';\nimport './node-search.css';\n\n// node search section component\n// target and source node search boxes and swap button\nexport class NodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.filters = [];\n    this.state.filterString = '';\n\n    this.updateFilters = this.updateFilters.bind(this);\n  }\n\n  // get filter state from filter child component\n  updateFilters(filters, filterString) {\n    this.setState({ filters: filters, filterString: filterString });\n  }\n\n  // display component\n  render() {\n    return (\n      <section className='center'>\n        <NodeSearchContext.Provider\n          value={{\n            filterString: this.state.filterString\n          }}\n        >\n          <Filters\n            filters={this.state.filters}\n            filterString={this.state.filterString}\n            updateFilters={this.updateFilters}\n          />\n          <SourceNodeSearch />\n          <SwapButton />\n          <TargetNodeSearch />\n        </NodeSearchContext.Provider>\n      </section>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst NodeSearchContext = React.createContext({});\n\n// filter filter component\n// toggle buttons to specify which types of nodes to limit search to\nclass Filters extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.solo = this.solo.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.metagraph.metanode_kinds === this.props.metagraph.metanode_kinds\n    )\n      return;\n\n    // initialize filters\n    let filters = [];\n    const filterString = '';\n\n    for (const filter of this.props.metagraph.metanode_kinds)\n      filters.push({ name: filter, active: true });\n\n    // display filters in custom order\n    const order = [\n      'Gene',\n      'Compound',\n      'Anatomy',\n      'Disease',\n      'Symptom',\n      'Side Effect',\n      'Biological Process',\n      'Cellular Component',\n      'Molecular Function',\n      'Pathway',\n      'Pharmacolocic Class'\n    ];\n    filters = sortCustom(filters, order, 'name');\n\n    this.props.updateFilters(filters, filterString);\n  }\n\n  // checks whether all filters are active\n  allOn(filters) {\n    for (const filter of filters) {\n      if (!filter.active)\n        return false;\n    }\n\n    return true;\n  }\n\n  // checks whether all filters besides the specified filter are off\n  allOthersOff(filters, type) {\n    for (const filter of filters) {\n      if (type !== filter.name && filter.active)\n        return false;\n    }\n\n    return true;\n  }\n\n  // toggles the specified filters on/off\n  toggle(type) {\n    const filters = this.props.filters.slice();\n\n    for (const filter of filters) {\n      if (filter.name === type)\n        filter.active = !filter.active;\n    }\n\n    this.props.updateFilters(filters, this.toString(filters));\n  }\n\n  // solo filter (turn all others off)\n  solo(type) {\n    const filters = this.props.filters.slice();\n    const allOthersOff = this.allOthersOff(filters, type);\n\n    for (const filter of filters) {\n      if (allOthersOff)\n        filter.active = true;\n      else {\n        if (type === filter.name)\n          filter.active = true;\n        else\n          filter.active = false;\n      }\n    }\n\n    this.props.updateFilters(filters, this.toString(filters));\n  }\n\n  // turn state of filters into string query list of metanode metagraph\n  toString(filters) {\n    if (this.allOn(filters))\n      return '';\n\n    const list = [];\n    for (const filter of filters) {\n      if (filter.active)\n        list.push(this.props.metagraph.kind_to_abbrev[filter.name]);\n    }\n\n    return list.join(',');\n  }\n\n  // display component\n  render() {\n    // make list of filter buttons\n    const buttons = this.props.filters.map((filter, index) => (\n      <FilterButton\n        key={index}\n        name={filter.name}\n        tooltipText={this.props.hetioDefinitions.metanodes[filter.name]}\n        active={filter.active}\n        toggle={this.toggle}\n        solo={this.solo}\n      />\n    ));\n\n    return <>{buttons}</>;\n  }\n}\n// connect component to global state\nFilters = connect((state) => ({\n  metagraph: state.metagraph,\n  hetioDefinitions: state.hetioDefinitions\n}))(Filters);\n\n// filter button component\nclass FilterButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className={\n          'node_search_filter_button' +\n          (this.props.active ? '' : ' node_search_filter_button_off')\n        }\n        tooltipText={this.props.tooltipText}\n        onClick={() => this.props.toggle(this.props.name)}\n        onCtrlClick={() => this.props.solo(this.props.name)}\n      >\n        <MetanodeChip type={this.props.name} />\n        {this.props.name}\n      </Button>\n    );\n  }\n}\n\n// source node search box component\nclass SourceNodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  // when user makes a new node selection\n  onChange(value) {\n    this.props.dispatch(updateSourceTargetNodes({ sourceNode: value }));\n  }\n\n  // display component\n  render() {\n    return (\n      <SearchBox\n        label='Source Node'\n        tooltipText='The starting node of the paths'\n        value={this.props.node}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n// connect component to global state\nSourceNodeSearch = connect((state) => ({\n  node: state.sourceNode\n}))(SourceNodeSearch);\n\n// source node search box component\nclass TargetNodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  // when user makes a new node selection\n  onChange(value) {\n    this.props.dispatch(updateSourceTargetNodes({ targetNode: value }));\n    if (value)\n      document.activeElement.blur();\n  }\n\n  // display component\n  render() {\n    return (\n      <SearchBox\n        label='Target Node'\n        tooltipText='The ending node of the paths'\n        value={this.props.node}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n// connect component to global state\nTargetNodeSearch = connect((state) => ({\n  node: state.targetNode\n}))(TargetNodeSearch);\n\n// search box component with dropdown autocomplete/autosuggest\nclass SearchBox extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.searchResults = [];\n\n    this.inputRef = React.createRef();\n    this.formRef = React.createRef();\n\n    this.onInput = this.onInput.bind(this);\n  }\n\n  // when user types into or modifies text in text box\n  onInput(searchString) {\n    searchNodes(searchString, this.context.filterString).then((results) =>\n      this.setState({ searchResults: results || [] })\n    );\n  }\n\n  // convert result/selection item to string to display in text box\n  itemToString(item) {\n    if (item && item.name)\n      return item.name;\n    else\n      return '';\n  }\n\n  // display component\n  render() {\n    return (\n      <Downshift\n        onChange={this.props.onChange}\n        onInputValueChange={this.onInput}\n        itemToString={this.itemToString}\n        selectedItem={this.props.value}\n      >\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          isOpen,\n          selectedItem,\n          highlightedIndex,\n          clearSelection\n        }) => (\n          <div className='node_search_form' ref={this.formRef}>\n            <span className='small light node_search_form_label'>\n              <Tooltip text={this.props.tooltipText}>\n                {this.props.label}\n              </Tooltip>\n            </span>\n            <TextBox\n              inputRef={this.inputRef}\n              getInputProps={getInputProps}\n              clearSelection={clearSelection}\n              selectedItem={selectedItem}\n            />\n            <Dropdown\n              isOpen={isOpen}\n              inputRef={this.inputRef}\n              formRef={this.formRef}\n              getMenuProps={getMenuProps}\n              searchResults={this.state.searchResults}\n              selectedItem={selectedItem}\n              highlightedIndex={highlightedIndex}\n              getItemProps={getItemProps}\n            />\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n// connect component to context component\nSearchBox.contextType = NodeSearchContext;\n\n// text box sub-component of search box component\nclass TextBox extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.focused = false;\n\n    this.onInput = this.onInput.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  // when user types into text box\n  onInput(event) {\n    if (event.target.value === '')\n      this.props.clearSelection();\n  }\n\n  // when user focuses text box\n  onFocus() {\n    this.setState({ focused: true });\n  }\n\n  // when user unfocuses text box\n  onBlur() {\n    this.setState({ focused: false });\n  }\n\n  // display component\n  render() {\n    let overlay = <></>;\n\n    const showOverlay =\n      !this.state.focused &&\n      this.props.selectedItem.metanode &&\n      this.props.selectedItem.name;\n\n    if (showOverlay) {\n      overlay = (\n        <div className='node_search_field_overlay'>\n          <MetanodeChip type={this.props.selectedItem.metanode} />\n          <span className='node_search_results_item_name nowrap'>\n            {this.props.selectedItem.name}\n          </span>\n        </div>\n      );\n    }\n    return (\n      <>\n        <TextField\n          {...this.props.getInputProps({\n            onChange: this.onInput\n          })}\n          inputRef={this.props.inputRef}\n          placeholder='id, name, or metanode'\n          classes={{ root: 'node_search_field_container' }}\n          InputProps={{\n            classes: {\n              root: 'node_search_field',\n              focused: 'node_search_field_focused',\n              input: showOverlay\n                ? 'node_search_input_blank'\n                : 'node_search_input'\n            }\n          }}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n        />\n        {overlay}\n        <div className='node_search_icon'>\n          <FontAwesomeIcon icon={faSearch} />\n        </div>\n      </>\n    );\n  }\n}\n\n// dropdown sub-component of search box component\nclass Dropdown extends Component {\n  // display component\n  render() {\n    return (\n      <Popper\n        open={this.props.isOpen}\n        anchorEl={this.props.inputRef.current}\n        placement='bottom-start'\n        className='node_search_results_popper'\n        container={this.props.formRef.current}\n        disablePortal={true}\n        {...this.props.getMenuProps()}\n      >\n        <Paper className='node_search_results_paper'>\n          {this.props.searchResults.map((result, index) => (\n            <MenuItem\n              className={\n                'node_search_results_item' +\n                (this.props.selectedItem.id === result.id\n                  ? ' node_search_results_item_selected'\n                  : '') +\n                (this.props.highlightedIndex === index\n                  ? ' node_search_results_item_selected'\n                  : '')\n              }\n              {...this.props.getItemProps({\n                item: result,\n                key: index\n              })}\n            >\n              <MetanodeChip type={result.metanode} />\n              <span className='node_search_results_item_name'>\n                {result.name}\n              </span>\n              <span className='node_search_results_item_identifier'>\n                {result.identifier}\n              </span>\n            </MenuItem>\n          ))}\n        </Paper>\n      </Popper>\n    );\n  }\n}\n\n// swap button component\n// switches source/target node\nclass SwapButton extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  // when user clicks button\n  onClick() {\n    this.props.dispatch(swapSourceTargetNodes());\n  }\n\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText='Swap source and target node'\n        className='node_search_swap_button'\n        onClick={this.onClick}\n      >\n        <FontAwesomeIcon icon={faExchangeAlt} />\n      </Button>\n    );\n  }\n}\n// connect component to global state\nSwapButton = connect()(SwapButton);\n","import React from 'react';\nimport { Component } from 'react';\n\nimport './dynamic-field.css';\n\n// expandable textbox-like component, similar to excel spreadsheet cell\n// when focused, field expands and prop 'fullValue' displayed,\n// otherwise, prop 'value' displayed (often 'fullValue' rounded off)\nexport class DynamicField extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.focused = false;\n    this.field = React.createRef();\n\n    this.onClick = this.onClick.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n  }\n\n  // when field is clicked or touched\n  onClick(event) {\n    // force click on link in field if link was target of click\n    if (event && event.target && event.target.tagName.toLowerCase() === 'a')\n      event.target.click();\n    // force focus on field\n    this.field.current.focus();\n  }\n\n  // when field loses focus\n  onBlur() {\n    this.setState({ focused: false }, this.deselectAll);\n  }\n\n  // when field is focused (tabbed to, clicked, etc)\n  onFocus() {\n    this.setState({ focused: true }, this.selectAll);\n  }\n\n  // deselect any selected text in window\n  deselectAll() {\n    window.getSelection().empty();\n  }\n\n  // select contents of field\n  selectAll() {\n    // set delay for select to make sure component has rendered\n    window.setTimeout(function() {\n      window.getSelection().empty();\n      window.getSelection().selectAllChildren(document.activeElement);\n    }, 10);\n  }\n\n  // display component\n  render() {\n    let displayValue;\n\n    // show full value if focused, or short value if not\n    if (this.state.focused)\n      displayValue = this.props.fullValue || this.props.value;\n    else\n      displayValue = this.props.value;\n\n    // if value just text, set 'nowrap' to truncate with ellipsis\n    if (typeof displayValue === 'string')\n      displayValue = <span className='nowrap'>{displayValue}</span>;\n\n    return (\n      <div\n        ref={this.field}\n        tabIndex='0'\n        onClick={this.onClick}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        className={'dynamic_field ' + (this.props.className || '')}\n        data-expanded={this.state.focused}\n      >\n        {displayValue}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { Button } from './buttons.js';\nimport './collapsible-section.css';\n\n// accordion (collapse/expand) section component\nexport class CollapsibleSection extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.collapsed = false;\n\n    this.loadState = this.loadState.bind(this);\n    this.saveState = this.saveState.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  // when component mounts\n  componentDidMount() {\n    if (this.loadState())\n      this.setState({ collapsed: true });\n  }\n\n  // load collapsed state from local storage if exists\n  loadState() {\n    const key = this.props.label;\n    return key && window.localStorage.getItem(key) === 'true';\n  }\n\n  // save collapse state to local storage\n  saveState(collapsed) {\n    const key = this.props.label;\n    if (key)\n      window.localStorage.setItem(key, String(String(collapsed) === 'true'));\n  }\n\n  // toggle collapse/expand\n  toggle() {\n    this.setState({ collapsed: !this.state.collapsed });\n    this.saveState(!this.state.collapsed);\n  }\n\n  // display component\n  render() {\n    return (\n      <div\n        className='collapsible_section'\n        data-collapsed={this.state.collapsed}\n      >\n        <Button\n          tooltipText={this.props.tooltipText}\n          className='collapsible_section_header'\n          onClick={this.toggle}\n        >\n          <div>{this.props.label}</div>\n          <FontAwesomeIcon\n            icon={this.state.collapsed ? faAngleUp : faAngleDown}\n          />\n        </Button>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { MetanodeChip } from './chips.js';\nimport { Tooltip } from './tooltip.js';\nimport { TextButton } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { shortenUrl } from './util.js';\nimport { sortCustom } from './util.js';\n\n// node results section component\n// details about source/target nodes\nexport class NodeResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <NodeCard label='Source Node' node={this.props.sourceNode} />\n        <NodeCard label='Target Node' node={this.props.targetNode} />\n      </section>\n    );\n  }\n}\n// connect component to global state\nNodeResults = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode\n}))(NodeResults);\n\n// node 'card' component\n// displays details about source/target node\nclass NodeCard extends Component {\n  // display component\n  render() {\n    return (\n      <CollapsibleSection\n        label={this.props.label}\n        tooltipText={'Details about the ' + this.props.label.toLowerCase()}\n      >\n        {this.props.node.name ? (\n          <TableFull node={this.props.node} />\n        ) : (\n          <TableEmpty label={this.props.label} />\n        )}\n      </CollapsibleSection>\n    );\n  }\n}\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.showMore = false;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n  }\n\n  // toggle show/hide extra fields\n  toggleShowMore() {\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // display row entries\n  rows() {\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.nodes\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n    // get primary fields from top level of node\n    let primaryFields = ['name', 'metanode', 'source', 'identifier', 'id'];\n    // get first/second column text (key/value) for each field\n    primaryFields = primaryFields.map((field) => {\n      // handle special field cases\n      let specialSecondCol;\n      if (field === 'metanode') {\n        // make text with metanode chip\n        specialSecondCol = (\n          <>\n            <MetanodeChip type={this.props.node[field]} />\n            <span className='nowrap'>{this.props.node[field]}</span>\n          </>\n        );\n      } else if (field === 'source') {\n        // make link\n        const linkUrl = this.props.node.url || this.props.node.data.url || '';\n        let linkText = this.props.node.data.source || linkUrl;\n        linkText = shortenUrl(linkText);\n        specialSecondCol = (\n          <a className='nowrap' href={linkUrl}>\n            {linkText}\n          </a>\n        );\n      }\n      // get first/second column text (key/value) for each field\n      return {\n        firstCol: field,\n        secondCol: specialSecondCol || String(this.props.node[field]),\n        tooltipText: tooltipText[field]\n      };\n    });\n    // remove id and identifier if table not expanded\n    if (!this.state.showMore) {\n      primaryFields.splice(\n        primaryFields.findIndex((field) => field.firstCol === 'id'),\n        1\n      );\n      primaryFields.splice(\n        primaryFields.findIndex((field) => field.firstCol === 'identifier'),\n        1\n      );\n    }\n\n    // get 'extra fields' from node 'data' field\n    let extraFields = [];\n    if (this.state.showMore) {\n      extraFields = Object.keys(this.props.node.data);\n      // remove source and url, since they are combined and added to\n      // primary fields above\n      extraFields.splice(extraFields.indexOf('source'), 1);\n      extraFields.splice(extraFields.indexOf('url'), 1);\n      // get first/second column text (key/value) for each field\n      extraFields = extraFields.map((field) => ({\n        firstCol: field,\n        secondCol: String(this.props.node.data[field]),\n        tooltipText: tooltipText[field]\n      }));\n    }\n\n    // combine primary and extra fields\n    let fields = primaryFields.concat(extraFields);\n\n    // display fields in custom order\n    const order = [\n      'name',\n      'metanode',\n      'source',\n      'description',\n      'identifier',\n      'id'\n    ];\n    fields = sortCustom(fields, order, 'firstCol');\n\n    // make rows from fields\n    return fields.map((field, index) => {\n      return (\n        <tr key={index}>\n          <td className='col_s small light'>\n            <Tooltip text={field.tooltipText}>{field.firstCol}</Tooltip>\n          </td>\n          <td>\n            <DynamicField value={field.secondCol} className='left' />\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  // display component\n  render() {\n    return (\n      <table className='node_results_table'>\n        <tbody>\n          {this.rows()}\n          <tr>\n            <td className='center' colSpan='2'>\n              <TextButton\n                text={this.state.showMore ? 'show less ' : 'show more '}\n                icon={this.state.showMore ? faAngleUp : faAngleDown}\n                className='link_button small'\n                onClick={this.toggleShowMore}\n                tooltipText='Show more information about the node'\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n// connect component to global state\nTableFull = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableFull);\n\n// table with no results component\nclass TableEmpty extends Component {\n  render() {\n    return (\n      <table className='node_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>\n              select a {this.props.label.toLowerCase()}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { metapathChips } from './chips.js';\nimport { Button } from './buttons.js';\nimport { TextButton } from './buttons.js';\nimport { Checkbox } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { makeFilenameFriendly } from './util.js';\nimport { downloadCsv } from './util.js';\nimport { toFixed } from './util.js';\nimport { toExponential } from './util.js';\nimport { toGradient } from './util.js';\nimport { sortCustom } from './util.js';\nimport { updateMetapaths } from './actions.js';\nimport './metapath-results.css';\n\n// path results section component\nexport class MetapathResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <CollapsibleSection\n          label='Metapaths'\n          tooltipText='Metapaths of length <= 3 between the source and target node'\n        >\n          {this.props.metapaths.length > 0 ? <TableFull /> : <TableEmpty />}\n        </CollapsibleSection>\n      </section>\n    );\n  }\n}\n// connect component to global state\nMetapathResults = connect((state) => ({\n  metapaths: state.metapaths\n}))(MetapathResults);\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.showMore = false;\n    this.state.allChecked = false;\n    this.state.sortColumn = 'adjusted_p_value';\n    this.state.sortUp = false;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n    this.toggleAllChecked = this.toggleAllChecked.bind(this);\n    this.allChecked = this.allChecked.bind(this);\n    this.checkAll = this.checkAll.bind(this);\n    this.uncheckAll = this.uncheckAll.bind(this);\n    this.allOthersUnchecked = this.allOthersUnchecked.bind(this);\n    this.toggleChecked = this.toggleChecked.bind(this);\n    this.soloChecked = this.soloChecked.bind(this);\n    this.changeSort = this.changeSort.bind(this);\n    this.downloadCsv = this.downloadCsv.bind(this);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (this.props.metapaths !== prevProps.metapaths)\n      this.updateAllChecked();\n  }\n\n  // checks if all rows checked and updates state\n  updateAllChecked() {\n    if (this.allChecked())\n      this.setState({ allChecked: true });\n    else\n      this.setState({ allChecked: false });\n  }\n\n  // toggle show more/less\n  toggleShowMore(event) {\n    if (event)\n      event.preventDefault();\n\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // toggle check/uncheck all\n  toggleAllChecked() {\n    if (this.allChecked())\n      this.uncheckAll();\n    else\n      this.checkAll();\n  }\n\n  // checks whether all metapaths are checked\n  allChecked() {\n    for (const metapath of this.props.metapaths) {\n      if (!metapath.checked)\n        return false;\n    }\n\n    return true;\n  }\n\n  // makes all metapaths checked\n  checkAll() {\n    const metapaths = this.props.metapaths.slice();\n\n    for (const metapath of this.props.metapaths)\n      metapath.checked = true;\n\n    this.props.dispatch(updateMetapaths({ metapaths: metapaths }));\n  }\n\n  // makes all metapaths unchecked\n  uncheckAll() {\n    const metapaths = this.props.metapaths.slice();\n\n    for (const metapath of this.props.metapaths)\n      metapath.checked = false;\n\n    this.props.dispatch(updateMetapaths({ metapaths: metapaths }));\n  }\n\n  // checks whether all metapaths besides the specified are unchecked\n  allOthersUnchecked(id) {\n    for (const metapath of this.props.metapaths) {\n      if (id !== metapath.id && metapath.checked)\n        return false;\n    }\n\n    return true;\n  }\n\n  // toggles the specified metapaths on/off\n  toggleChecked(id) {\n    const metapaths = this.props.metapaths.slice();\n\n    for (const metapath of metapaths) {\n      if (metapath.id === id)\n        metapath.checked = !metapath.checked;\n    }\n\n    this.props.dispatch(updateMetapaths({ metapaths: metapaths }));\n  }\n\n  // solo metapath (turn all others off)\n  soloChecked(id) {\n    const metapaths = this.props.metapaths.slice();\n    const allOthersUnchecked = this.allOthersUnchecked(id);\n\n    for (const metapath of metapaths) {\n      if (allOthersUnchecked || id === metapath.id)\n        metapath.checked = true;\n      else\n        metapath.checked = false;\n    }\n\n    this.props.dispatch(updateMetapaths({ metapaths: metapaths }));\n  }\n\n  // change which column table is sorted by\n  changeSort(sortColumn) {\n    const newState = {};\n    newState.sortColumn = sortColumn;\n\n    if (sortColumn === this.state.sortColumn)\n      newState.sortUp = !this.state.sortUp;\n    else\n      newState.sortUp = true;\n\n    this.setState(newState);\n  }\n\n  // compare numbers (for sorting)\n  compareNumbers(a, b, key) {\n    // parse as numbers\n    const comparison = Number(a[key]) - Number(b[key]);\n    if (!Number.isNaN(comparison))\n      return comparison;\n\n    // otherwise parse as strings and compare alphabetically\n    if (a[key] < b[key])\n      return -1;\n    else if (a[key] > b[key])\n      return 1;\n    else\n      return 0;\n  }\n\n  // compare metapaths (for sorting)\n  compareMetapaths(a, b, key) {\n    a = a[key];\n    b = b[key];\n    // first by length\n    if (a.length < b.length)\n      return -1;\n    else if (a.length > b.length)\n      return 1;\n    else {\n      // then alphabetically\n      if (a < b)\n        return -1;\n      else if (a > b)\n        return 1;\n      else\n        return 0;\n    }\n  }\n\n  // download table data as .csv file\n  downloadCsv() {\n    if (\n      !this.props.metapaths.length ||\n      !this.props.sourceNode.name ||\n      !this.props.targetNode.name\n    )\n      return;\n\n    const tableData = makeMetapathsTable(this.props.metapaths);\n    const filename = [\n      'metapaths',\n      makeFilenameFriendly(this.props.sourceNode.name),\n      makeFilenameFriendly(this.props.targetNode.name)\n    ].join('_');\n    downloadCsv(tableData, filename);\n  }\n\n  // display component\n  render() {\n    // sort metapaths by specified column\n    const sortedMetapaths = this.props.metapaths;\n    const sortColumn = this.state.sortColumn;\n\n    // sort by appropriate field\n    if (sortColumn === 'metapath_metaedges')\n      sortedMetapaths.sort((a, b) => this.compareMetapaths(a, b, sortColumn));\n    else\n      sortedMetapaths.sort((a, b) => this.compareNumbers(a, b, sortColumn));\n\n    // reverse sort direction\n    if (this.state.sortUp)\n      sortedMetapaths.reverse();\n\n    // count metapaths\n    const metapathCount = sortedMetapaths.length;\n    let metapathSelectedCount = 0;\n    for (const metapath of sortedMetapaths) {\n      if (metapath.checked)\n        metapathSelectedCount++;\n    }\n\n    return (\n      <TableContext.Provider\n        value={{\n          sortedMetapaths: sortedMetapaths,\n          showMore: this.state.showMore,\n          allChecked: this.state.allChecked,\n          toggleAllChecked: this.toggleAllChecked,\n          toggleChecked: this.toggleChecked,\n          soloChecked: this.soloChecked,\n          sortColumn: this.state.sortColumn,\n          sortUp: this.state.sortUp,\n          changeSort: this.changeSort\n        }}\n      >\n        <div className='table_attic'>\n          <TextButton\n            text='.csv'\n            icon={faDownload}\n            className='link_button small'\n            onClick={this.downloadCsv}\n            tooltipText='Download table as .csv file'\n          />\n          <TextButton\n            text={this.state.showMore ? 'show less ' : 'show more '}\n            icon={this.state.showMore ? faAngleLeft : faAngleRight}\n            className='link_button small'\n            onClick={this.toggleShowMore}\n            tooltipText='Expand table and show more columns'\n          />\n          <div className='small light right'>\n            {metapathCount} results, {metapathSelectedCount} selected\n          </div>\n        </div>\n        <div className='table_container' data-expanded={this.state.showMore}>\n          <table className='metapath_results_table'>\n            <TableHead />\n            <TableBody />\n          </table>\n        </div>\n      </TableContext.Provider>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst TableContext = React.createContext({});\n// connect component to global state\nTableFull = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metapaths: state.metapaths\n}))(TableFull);\n\n// table header component\n// contains column labels and sort buttons\nclass TableHead extends Component {\n  // display component\n  render() {\n    // extra 'super-grouping' row at top of table\n    const extraRow = (\n      <tr>\n        <td className='col_xs' />\n        <td className='col_l' />\n        <td className='col_s' />\n        <td className='col_m' />\n        <td className='col_m' />\n        <td className='col_s' />\n        <td className='col_xxl center' colSpan='6'>\n          <div className='divider'>Null DWPC distribution information</div>\n        </td>\n      </tr>\n    );\n\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.nodes\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n    // primary columns\n    const cols = (\n      <>\n        <td className='col_xs'>\n          <Checkbox\n            checked={this.context.allChecked}\n            onClick={() => this.context.toggleAllChecked()}\n            onCtrlClick={() => this.context.toggleAllChecked()}\n            tooltipText='Show all paths'\n          />\n        </td>\n        <TableHeadCell\n          className='col_l'\n          buttonClass='left'\n          fieldName='metapath_metaedges'\n          tooltipText={tooltipText['metapath']}\n          text='metapath'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='path_count'\n          tooltipText={tooltipText['path_count']}\n          text='path count'\n        />\n        <TableHeadCell\n          className='col_m'\n          fieldName='adjusted_p_value'\n          tooltipText={tooltipText['adjusted_p_value']}\n          text={\n            <span>\n              adjusted\n              <br />\n              <i>p</i>-value\n            </span>\n          }\n        />\n      </>\n    );\n\n    // extra columns\n    const extraCols = (\n      <>\n        <TableHeadCell\n          className='col_m'\n          fieldName='p_value'\n          tooltipText={tooltipText['p_value']}\n          text={\n            <>\n              <i>p</i>-value\n            </>\n          }\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='dwpc'\n          tooltipText={tooltipText['dwpc']}\n          text='DWPC'\n        />\n        <TableHeadCell\n          fieldName='dgp_source_degree'\n          tooltipText={tooltipText['dgp_source_degree']}\n          text='source degree'\n        />\n        <TableHeadCell\n          fieldName='dgp_target_degree'\n          tooltipText={tooltipText['dgp_target_degree']}\n          text='target degree'\n        />\n        <TableHeadCell\n          fieldName='dgp_n_dwpcs'\n          tooltipText={tooltipText['dgp_n_dwpcs']}\n          text=\"# DWPC's\"\n        />\n        <TableHeadCell\n          fieldName='dgp_n_nonzero_dwpcs'\n          tooltipText={tooltipText['dgp_n_nonzero_dwpcs']}\n          text=\"# non-0 DWPC's\"\n        />\n        <TableHeadCell\n          fieldName='dgp_nonzero_mean'\n          tooltipText={tooltipText['dgp_nonzero_mean']}\n          text='non-0 mean'\n        />\n        <TableHeadCell\n          fieldName='dgp_nonzero_sd'\n          tooltipText={tooltipText['dgp_nonzero_sd']}\n          text={<>non-0 &sigma;</>}\n        />\n      </>\n    );\n\n    return (\n      <thead className='small light'>\n        {this.context.showMore && extraRow}\n        <tr>\n          {cols}\n          {this.context.showMore && extraCols}\n        </tr>\n      </thead>\n    );\n  }\n}\n// connect component to context component\nTableHead.contextType = TableContext;\n// connect component to global state\nTableHead = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableHead);\n\n// table header cell component\nclass TableHeadCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className}>\n        <SortButton\n          text={this.props.text}\n          tooltipText={this.props.tooltipText}\n          fieldName={this.props.fieldName}\n          className={this.props.buttonClass}\n        />\n      </td>\n    );\n  }\n}\n\n// column sort button component\nclass SortButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText={this.props.tooltipText}\n        className={'sort_button ' + (this.props.className || '')}\n        onClick={() => this.context.changeSort(this.props.fieldName)}\n      >\n        {this.props.text}\n        <FontAwesomeIcon\n          icon={\n            this.props.fieldName === this.context.sortColumn\n              ? this.context.sortUp\n                ? faSortUp\n                : faSortDown\n              : faSort\n          }\n        />\n      </Button>\n    );\n  }\n}\n// connect component to context component\nSortButton.contextType = TableContext;\n\n// table body component\n// contains actual data\nclass TableBody extends Component {\n  // display component\n  render() {\n    return (\n      <tbody>\n        {this.context.sortedMetapaths.map((metapath, index) => (\n          <TableBodyRow\n            key={index}\n            metapath={metapath}\n            checked={metapath.checked}\n            showMore={this.props.showMore}\n          />\n        ))}\n      </tbody>\n    );\n  }\n}\n// connect component to context component\nTableBody.contextType = TableContext;\n\n// table body row component\n// contains column data for one metapath\nclass TableBodyRow extends Component {\n  // display component\n  render() {\n    const metapath = this.props.metapath;\n\n    // primary columns\n    const cols = (\n      <>\n        <td>\n          <Checkbox\n            checked={this.props.checked}\n            onClick={() => this.context.toggleChecked(this.props.metapath.id)}\n            onCtrlClick={() => this.context.soloChecked(this.props.metapath.id)}\n            tooltipText={\n              'Show these ' +\n              (this.props.metapath.path_count || '') +\n              ' paths in the paths table'\n            }\n          />\n        </td>\n        <TableBodyCell\n          fieldClass='left'\n          value={metapathChips(metapath.metapath_metaedges)}\n          fullValue={metapath.metapath_name}\n        />\n        <TableBodyCell value={metapath.path_count} />\n        <TableBodyCell\n          style={{ backgroundColor: toGradient(metapath.adjusted_p_value) }}\n          value={toExponential(metapath.adjusted_p_value)}\n          fullValue={metapath.adjusted_p_value}\n        />\n      </>\n    );\n\n    // extra columns\n    const extraCols = (\n      <>\n        <TableBodyCell\n          style={{ backgroundColor: toGradient(metapath.p_value) }}\n          value={toExponential(metapath.p_value)}\n          fullValue={metapath.p_value}\n        />\n        <TableBodyCell\n          value={toFixed(metapath.dwpc)}\n          fullValue={metapath.dwpc}\n        />\n        <TableBodyCell value={metapath.dgp_source_degree} />\n        <TableBodyCell value={metapath.dgp_target_degree} />\n        <TableBodyCell value={metapath.dgp_n_dwpcs} />\n        <TableBodyCell value={metapath.dgp_n_nonzero_dwpcs} />\n        <TableBodyCell\n          value={toFixed(metapath.dgp_nonzero_mean)}\n          fullValue={metapath.dgp_nonzero_mean}\n        />\n        <TableBodyCell\n          value={toFixed(metapath.dgp_nonzero_sd)}\n          fullValue={metapath.dgp_nonzero_sd}\n        />\n      </>\n    );\n\n    return (\n      <tr>\n        {cols}\n        {this.context.showMore && extraCols}\n      </tr>\n    );\n  }\n}\n// connect component to context component\nTableBodyRow.contextType = TableContext;\n\n// table body cell component\nclass TableBodyCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className} style={this.props.style}>\n        <DynamicField\n          value={this.props.value}\n          fullValue={this.props.fullValue}\n          className={this.props.fieldClass}\n        />\n      </td>\n    );\n  }\n}\n\n// table with no results component\nclass TableEmpty extends Component {\n  // display component\n  render() {\n    return (\n      <table className='metapath_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>no results to show</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// make table array out of metapaths results object\nfunction makeMetapathsTable(metapaths) {\n  let headers = [];\n  for (const field of Object.keys(metapaths[0])) {\n    if (\n      typeof metapaths[0][field] === 'number' ||\n      typeof metapaths[0][field] === 'string'\n    )\n      headers.push(field);\n  }\n\n  // sort headers in custom order\n  const order = [\n    'id',\n    'metapath_name',\n    'metapath_abbreviation',\n    'path_count',\n    'adjusted_p_value',\n    'p_value',\n    'dwpc',\n    'dgp_source_degree',\n    'dgp_target_degree',\n    'dgp_n_dwpcs',\n    'dgp_n_nonzero_dwpcs',\n    'dgp_nonzero_mean',\n    'dgp_nonzero_sd'\n  ];\n  headers = sortCustom(headers, order);\n\n  const table = [];\n  table.push(headers);\n  for (const result of metapaths) {\n    const row = [];\n    for (const header of headers)\n      row.push(result[header]);\n    table.push(row);\n  }\n\n  return table;\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { Button } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { TextButton } from './buttons.js';\nimport { EyeCheckbox } from './buttons.js';\nimport { HighlighterCheckbox } from './buttons.js';\nimport { downloadCsv } from './util.js';\nimport { makeFilenameFriendly } from './util.js';\nimport { pathChips } from './chips.js';\nimport { updatePathQueries } from './actions.js';\nimport { toFixed } from './util.js';\nimport { sortCustom } from './util.js';\nimport { compareArrays } from './util.js';\nimport './path-results.css';\n\n// path results section component\nexport class PathResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <CollapsibleSection\n          label='Paths'\n          tooltipText='Paths of the selected metapaths'\n        >\n          {this.props.pathQueries.length > 0 ? <TableFull /> : <TableEmpty />}\n        </CollapsibleSection>\n      </section>\n    );\n  }\n}\n// connect component to global state\nPathResults = connect((state) => ({\n  pathQueries: state.pathQueries\n}))(PathResults);\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.showMore = false;\n    this.state.allChecked = false;\n    this.state.allHighlighted = false;\n    this.state.sortColumn = 'score';\n    this.state.sortUp = true;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n    this.toggleAllChecked = this.toggleAllChecked.bind(this);\n    this.allChecked = this.allChecked.bind(this);\n    this.checkAll = this.checkAll.bind(this);\n    this.uncheckAll = this.uncheckAll.bind(this);\n    this.allOthersUnchecked = this.allOthersUnchecked.bind(this);\n    this.toggleChecked = this.toggleChecked.bind(this);\n    this.soloChecked = this.soloChecked.bind(this);\n    this.toggleAllHighlighted = this.toggleAllHighlighted.bind(this);\n    this.allHighlighted = this.allHighlighted.bind(this);\n    this.highlightAll = this.highlightAll.bind(this);\n    this.unhighlightAll = this.unhighlightAll.bind(this);\n    this.allOthersUnhighlighted = this.allOthersUnhighlighted.bind(this);\n    this.toggleHighlighted = this.toggleHighlighted.bind(this);\n    this.soloHighlighted = this.soloHighlighted.bind(this);\n    this.changeSort = this.changeSort.bind(this);\n    this.downloadCsv = this.downloadCsv.bind(this);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (this.props.pathQueries !== prevProps.pathQueries) {\n      this.updateAllChecked();\n      this.updateAllHighlighted();\n    }\n  }\n\n  // toggle show more/less\n  toggleShowMore(event) {\n    if (event)\n      event.preventDefault();\n\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // checks if all rows checked and updates state\n  updateAllChecked() {\n    if (this.allChecked())\n      this.setState({ allChecked: true });\n    else\n      this.setState({ allChecked: false });\n  }\n\n  // toggle check/uncheck all\n  toggleAllChecked() {\n    if (this.allChecked())\n      this.uncheckAll();\n    else\n      this.checkAll();\n  }\n\n  // checks whether all paths are checked\n  allChecked() {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!path.checked)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // makes all paths checked\n  checkAll() {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths)\n        path.checked = true;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // makes all paths unchecked\n  uncheckAll() {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths)\n        path.checked = false;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // checks whether all paths besides the specified are unchecked\n  allOthersUnchecked(thePath) {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!this.comparePaths(path, thePath) && path.checked)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // toggles the specified paths on/off\n  toggleChecked(thePath) {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (this.comparePaths(path, thePath))\n          path.checked = !path.checked;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // solo path (turn all others off)\n  soloChecked(thePath) {\n    const pathQueries = this.props.pathQueries.slice();\n    const allOthersUnchecked = this.allOthersUnchecked(thePath);\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (allOthersUnchecked || this.comparePaths(path, thePath))\n          path.checked = true;\n        else\n          path.checked = false;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // checks if all rows highlighted and updates state\n  updateAllHighlighted() {\n    if (this.allHighlighted())\n      this.setState({ allHighlighted: true });\n    else\n      this.setState({ allHighlighted: false });\n  }\n\n  // toggle highlight/unhighlight all\n  toggleAllHighlighted() {\n    if (this.allHighlighted())\n      this.unhighlightAll();\n    else\n      this.highlightAll();\n  }\n\n  // checks whether all paths are highlighted\n  allHighlighted() {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!path.highlighted)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // makes all paths highlighted\n  highlightAll() {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths)\n        path.highlighted = true;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // makes all paths unhighlighted\n  unhighlightAll() {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths)\n        path.highlighted = false;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // checks whether all paths besides the specified are unhighlighted\n  allOthersUnhighlighted(thePath) {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!this.comparePaths(path, thePath) && path.highlighted)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // toggles the specified paths on/off\n  toggleHighlighted(thePath) {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (this.comparePaths(path, thePath))\n          path.highlighted = !path.highlighted;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // solo path (turn all others off)\n  soloHighlighted(thePath) {\n    const pathQueries = this.props.pathQueries.slice();\n    const allOthersUnhighlighted = this.allOthersUnhighlighted(thePath);\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (allOthersUnhighlighted)\n          path.highlighted = true;\n        else {\n          if (this.comparePaths(path, thePath))\n            path.highlighted = true;\n          else\n            path.highlighted = false;\n        }\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // checks if paths are equal\n  comparePaths(path1, path2) {\n    return (\n      compareArrays(path1.node_ids, path2.node_ids) &&\n      compareArrays(path1.rel_ids, path2.rel_ids)\n    );\n  }\n\n  // change which column table is sorted by\n  changeSort(sortColumn) {\n    const newState = {};\n    newState.sortColumn = sortColumn;\n\n    if (sortColumn === this.state.sortColumn)\n      newState.sortUp = !this.state.sortUp;\n    else\n      newState.sortUp = true;\n\n    this.setState(newState);\n  }\n\n  // compare numbers (for sorting)\n  compareNumbers(a, b, key) {\n    // parse as numbers\n    const comparison = Number(a[key]) - Number(b[key]);\n    if (!Number.isNaN(comparison))\n      return comparison;\n\n    // otherwise parse as strings and compare alphabetically\n    if (a[key] < b[key])\n      return -1;\n    else if (a[key] > b[key])\n      return 1;\n    else\n      return 0;\n  }\n\n  // download table data as .csv file\n  downloadCsv() {\n    if (\n      !this.props.pathQueries.length ||\n      !this.props.sourceNode.name ||\n      !this.props.targetNode.name\n    )\n      return;\n\n    const tableData = makePathsTable(this.props.pathQueries);\n    const filename = [\n      'paths',\n      makeFilenameFriendly(this.props.sourceNode.name),\n      makeFilenameFriendly(this.props.targetNode.name)\n    ].join('_');\n    downloadCsv(tableData, filename);\n  }\n\n  // display component\n  render() {\n    let nodes = {};\n    for (const pathQuery of this.props.pathQueries)\n      nodes = { ...nodes, ...pathQuery.nodes };\n\n    let edges = {};\n    for (const pathQuery of this.props.pathQueries)\n      edges = { ...edges, ...pathQuery.relationships };\n\n    let sortedPaths = [];\n    for (const pathQuery of this.props.pathQueries)\n      sortedPaths = [...sortedPaths, ...pathQuery.paths];\n\n    // construct full path description/name\n    sortedPaths = sortedPaths.map((path) => ({\n      ...path,\n      chipDescription: pathChips(\n        assemblePath(path, nodes, edges),\n        this.state.showMore\n      ),\n      textDescription: textDescription(assemblePath(path, nodes, edges))\n    }));\n\n    // sort paths by specified column\n    const sortColumn = this.state.sortColumn;\n\n    // sort by appropriate field\n    sortedPaths.sort((a, b) => this.compareNumbers(a, b, sortColumn));\n\n    // reverse sort direction\n    if (this.state.sortUp)\n      sortedPaths.reverse();\n\n    // count paths\n    const pathCount = sortedPaths.length;\n    let pathSelectedCount = 0;\n    for (const path of sortedPaths) {\n      if (path.checked)\n        pathSelectedCount++;\n    }\n\n    let pathHighlightedCount = 0;\n    for (const path of sortedPaths) {\n      if (path.highlighted)\n        pathHighlightedCount++;\n    }\n\n    return (\n      <TableContext.Provider\n        value={{\n          sortedPaths: sortedPaths,\n          showMore: this.state.showMore,\n          allChecked: this.state.allChecked,\n          toggleAllChecked: this.toggleAllChecked,\n          toggleChecked: this.toggleChecked,\n          soloChecked: this.soloChecked,\n          allHighlighted: this.state.allHighlighted,\n          toggleAllHighlighted: this.toggleAllHighlighted,\n          toggleHighlighted: this.toggleHighlighted,\n          soloHighlighted: this.soloHighlighted,\n          sortColumn: this.state.sortColumn,\n          sortUp: this.state.sortUp,\n          changeSort: this.changeSort\n        }}\n      >\n        <div className='table_attic'>\n          <TextButton\n            text='.csv'\n            icon={faDownload}\n            className='link_button small'\n            onClick={this.downloadCsv}\n            tooltipText='Download table as .csv file'\n          />\n          <TextButton\n            text={this.state.showMore ? 'show less ' : 'show more '}\n            icon={this.state.showMore ? faAngleLeft : faAngleRight}\n            className='link_button small'\n            onClick={this.toggleShowMore}\n            tooltipText='Expand table'\n          />\n          <div className='small light right'>\n            {pathCount} results, {pathSelectedCount} selected,{' '}\n            {pathHighlightedCount} highlighted\n          </div>\n        </div>\n        <div className='table_container' data-expanded={this.state.showMore}>\n          <table\n            className='path_results_table'\n            data-expanded={this.state.showMore}\n          >\n            <TableHead />\n            <TableBody />\n          </table>\n        </div>\n      </TableContext.Provider>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst TableContext = React.createContext({});\n// connect component to global state\nTableFull = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metagraph: state.metagraph,\n  pathQueries: state.pathQueries\n}))(TableFull);\n\n// table header component\n// contains column labels and sort buttons\nclass TableHead extends Component {\n  // display component\n  render() {\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.nodes\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n    // primary columns\n    const cols = (\n      <>\n        <td className='col_xs'>\n          <EyeCheckbox\n            checked={this.context.allChecked}\n            onClick={() => this.context.toggleAllChecked()}\n            onCtrlClick={() => this.context.toggleAllChecked()}\n            tooltipText='Show all paths'\n          />\n        </td>\n        <td className='col_xs'>\n          <HighlighterCheckbox\n            checked={this.context.allHighlighted}\n            onClick={() => this.context.toggleAllHighlighted()}\n            onCtrlClick={() => this.context.toggleAllHighlighted()}\n            tooltipText='Highlight all paths'\n          />\n        </td>\n        <TableHeadCell\n          className='col_s left'\n          buttonClass='left'\n          fieldName='metapath'\n          tooltipText={tooltipText['metapath']}\n          text='metapath'\n        />\n        <TableHeadCell\n          className='col_xl left'\n          buttonClass='left'\n          fieldName='textDescription'\n          tooltipText={tooltipText['path']}\n          text='path'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='score'\n          tooltipText={tooltipText['score']}\n          text='path score'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='percent_of_DWPC'\n          tooltipText={tooltipText['percent_of_DWPC']}\n          text='% of DWPC'\n        />\n      </>\n    );\n\n    return (\n      <thead className='small light'>\n        <tr>{cols}</tr>\n      </thead>\n    );\n  }\n}\n// connect component to context component\nTableHead.contextType = TableContext;\n// connect component to global state\nTableHead = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableHead);\n\n// table header cell component\nclass TableHeadCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className}>\n        <SortButton\n          text={this.props.text}\n          tooltipText={this.props.tooltipText}\n          fieldName={this.props.fieldName}\n          className={this.props.buttonClass}\n        />\n      </td>\n    );\n  }\n}\n\n// column sort button component\nclass SortButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText={this.props.tooltipText}\n        className={'sort_button ' + (this.props.className || '')}\n        onClick={() => this.context.changeSort(this.props.fieldName)}\n      >\n        {this.props.text}\n        <FontAwesomeIcon\n          icon={\n            this.props.fieldName === this.context.sortColumn\n              ? this.context.sortUp\n                ? faSortUp\n                : faSortDown\n              : faSort\n          }\n        />\n      </Button>\n    );\n  }\n}\n// connect component to context component\nSortButton.contextType = TableContext;\n\n// table body component\n// contains actual data\nclass TableBody extends Component {\n  // display component\n  render() {\n    return (\n      <tbody>\n        {this.context.sortedPaths.map((path, index) => (\n          <TableBodyRow\n            key={index}\n            path={path}\n            checked={path.checked}\n            highlighted={path.highlighted}\n          />\n        ))}\n      </tbody>\n    );\n  }\n}\n// connect component to context component\nTableBody.contextType = TableContext;\n// connect component to global state\nTableBody = connect((state) => ({\n  pathQueries: state.pathQueries\n}))(TableBody);\n\n// table body row component\n// contains column data for one path\nclass TableBodyRow extends Component {\n  // display component\n  render() {\n    const path = this.props.path;\n\n    // primary columns\n    const cols = (\n      <>\n        <td>\n          <EyeCheckbox\n            checked={this.props.checked}\n            onClick={() => this.context.toggleChecked(this.props.path)}\n            onCtrlClick={() => this.context.soloChecked(this.props.path)}\n            tooltipText='Show this path in the graph display'\n          />\n        </td>\n        <td>\n          <HighlighterCheckbox\n            checked={this.props.highlighted}\n            onClick={() => this.context.toggleHighlighted(this.props.path)}\n            onCtrlClick={() => this.context.soloHighlighted(this.props.path)}\n            tooltipText='Highlight this path in the graph display'\n          />\n        </td>\n        <TableBodyCell\n          className='left small'\n          fieldClass='left'\n          value={path.metapath}\n          fullValue={path.metapath}\n        />\n        <TableBodyCell\n          className='left small'\n          fieldClass='left'\n          value={path.chipDescription}\n          fullValue={path.textDescription}\n        />\n        <TableBodyCell\n          value={path.score ? toFixed(path.score) : '-'}\n          fullValue={path.score || '-'}\n        />\n        <TableBodyCell\n          value={toFixed(path.percent_of_DWPC)}\n          fullValue={path.percent_of_DWPC}\n        />\n      </>\n    );\n\n    return <tr>{cols}</tr>;\n  }\n}\n// connect component to context component\nTableBodyRow.contextType = TableContext;\n\n// table body cell component\nclass TableBodyCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className} style={this.props.style}>\n        <DynamicField\n          value={this.props.value}\n          fullValue={this.props.fullValue}\n          className={this.props.fieldClass}\n        />\n      </td>\n    );\n  }\n}\n\n// table with no results component\nclass TableEmpty extends Component {\n  // display component\n  render() {\n    return (\n      <table className='metapath_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>no results to show</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// construct path object with relevant properties for each node/edge entry\nfunction assemblePath(path, nodes, edges) {\n  const pathNodes = [];\n  for (const nodeId of path.node_ids) {\n    const node = nodes[nodeId];\n    if (!node)\n      continue;\n\n    pathNodes.push({\n      element: 'node',\n      type: node.metanode,\n      name: node.data.name\n    });\n  }\n\n  const pathEdges = [];\n  for (let index = 0; index < path.rel_ids.length; index++) {\n    const edge = edges[path.rel_ids[index]];\n    const prevNode = nodes[path.node_ids[index]];\n    if (!edge || !prevNode)\n      continue;\n\n    let direction = '';\n    if (edge.directed) {\n      if (edge.source_neo4j_id === prevNode.neo4j_id)\n        direction = 'forward';\n      else\n        direction = 'backward';\n    }\n\n    pathEdges.push({\n      element: 'edge',\n      type: edge.kind,\n      direction: direction\n    });\n  }\n\n  const assembledPath = [];\n  for (const node of pathNodes) {\n    assembledPath.push(node);\n    if (pathEdges.length > 0)\n      assembledPath.push(pathEdges.shift());\n  }\n\n  return assembledPath;\n}\n\n// produce text path description from assembled path\nfunction textDescription(path) {\n  return path.map((entry) => {\n    if (entry.element === 'node')\n      return entry.name;\n    if (entry.element === 'edge') {\n      let arrow = '–';\n      if (entry.direction === 'forward')\n        arrow = '→';\n      else if (entry.direction === 'backward')\n        arrow = '←';\n      return ['', arrow, entry.type, arrow, ''].join(' ');\n    }\n    return '';\n  });\n}\n\n// make table array out of path queries results object\nfunction makePathsTable(pathQueries) {\n  let nodes = {};\n  for (const pathQuery of pathQueries)\n    nodes = { ...nodes, ...pathQuery.nodes };\n\n  let edges = {};\n  for (const pathQuery of pathQueries)\n    edges = { ...edges, ...pathQuery.relationships };\n\n  let paths = [];\n  for (const pathQuery of pathQueries)\n    paths = [...paths, ...pathQuery.paths];\n\n  for (const path of paths) {\n    path.description = textDescription(assemblePath(path, nodes, edges)).join(\n      ''\n    );\n  }\n\n  let headers = [];\n  for (const field of Object.keys(paths[0])) {\n    if (\n      typeof paths[0][field] === 'number' ||\n      typeof paths[0][field] === 'string'\n    )\n      headers.push(field);\n  }\n\n  // sort headers in custom order\n  const order = [\n    'description',\n    'metapath',\n    'score',\n    'percent_of_DWPC'\n  ];\n  headers = sortCustom(headers, order);\n\n  const table = [];\n  table.push(headers);\n  for (const result of paths) {\n    const row = [];\n    for (const header of headers)\n      row.push(result[header]);\n    table.push(row);\n  }\n\n  return table;\n}\n","import React from 'react';\nimport { Component } from 'react';\n\nimport { Tooltip } from './tooltip.js';\nimport './number-box.css';\n\n// number input box component\nexport class NumberBox extends Component {\n  // intialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.value = this.props.value;\n\n    this.onChange = this.onChange.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== prevProps.value)\n      this.setState({ value: this.props.value });\n  }\n\n  // when user changes field\n  onChange(event) {\n    this.setState({ value: event.target.value });\n    if (event.nativeEvent.data === undefined)\n      this.onArrows(event.target.value);\n    else\n      this.onType(event.target.value);\n  }\n\n  // when user presses key in box\n  onKeyPress(event) {\n    if (event.key.toLowerCase() === 'enter')\n      event.target.blur();\n  }\n\n  // when user un-focuses field\n  onBlur(event) {\n    this.onSubmit(event.target.value);\n  }\n\n  // when box changed via arrow buttons or arrow keys\n  onArrows(value) {\n    if (this.props.onArrows)\n      this.props.onArrows(value);\n  }\n\n  // when box changed via typing or copy/paste\n  onType(value) {\n    if (this.props.onType)\n      this.props.onType(value);\n  }\n\n  // when box change submitted\n  onSubmit(value) {\n    if (this.props.onSubmit)\n      this.props.onSubmit(value);\n  }\n\n  // display component\n  render() {\n    return (\n      <Tooltip text={this.props.tooltipText}>\n        <input\n          type='number'\n          className='number_box'\n          onChange={this.onChange}\n          onKeyPress={this.onKeyPress}\n          onBlur={this.onBlur}\n          min={this.props.min}\n          step={this.props.step}\n          max={this.props.max}\n          value={this.state.value}\n        />\n      </Tooltip>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport { faPowerOff } from '@fortawesome/free-solid-svg-icons';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faMapMarker } from '@fortawesome/free-solid-svg-icons';\nimport { faExpand } from '@fortawesome/free-solid-svg-icons';\nimport { faExpandArrowsAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faCompressArrowsAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\n\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { NumberBox } from './number-box.js';\nimport { TextButton } from './buttons.js';\nimport { downloadSvg } from './util.js';\nimport { transferObjectProps } from './util.js';\nimport { Tooltip } from './tooltip.js';\nimport { sortCustom } from './util.js';\nimport './path-graph.css';\n\n// graph settings\nconst minWidth = 240;\nconst minHeight = 240;\nconst maxWidth = 3840;\nconst maxHeight = 2160;\nconst minZoom = 0.25;\nconst maxZoom = 4;\nconst nodeRadius = 25;\nconst nodeDistance = 100;\nconst nodeCharLimit = 25;\nconst nodeFontSize = 8;\nconst nodeRepulsion = 200;\nconst edgeFontSize = 8;\nconst edgeThickness = 2;\nconst edgeArrowSize = 10;\nconst edgeSpreadDistance = 20;\nconst edgeSpreadAngle = (45 / 360) * 2 * Math.PI;\nconst inkColor = '#424242';\nconst backgroundColor = '#fafafa';\nconst highlightColor = '#B3E8F7';\n\n// path graph section component\nexport class PathGraph extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.width = maxWidth;\n    this.state.height = maxHeight;\n    this.state.nodeCount = 0;\n    this.state.edgeCount = 0;\n    this.state.selectedElement = null;\n\n    this.graph = React.createRef();\n\n    this.expandContainer = this.expandContainer.bind(this);\n    this.collapseContainer = this.collapseContainer.bind(this);\n    this.updateSectionWidth = this.updateSectionWidth.bind(this);\n    this.setWidth = this.setWidth.bind(this);\n    this.setHeight = this.setHeight.bind(this);\n    this.setGraphCounts = this.setGraphCounts.bind(this);\n    this.setSelectedElement = this.setSelectedElement.bind(this);\n  }\n\n  // when component mounts\n  componentDidMount() {\n    this.updateSectionWidth();\n    this.collapseContainer();\n    window.addEventListener('resize', this.updateSectionWidth);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.width !== prevState.width) {\n      let width = this.state.width;\n      if (Math.round(width) !== width)\n        width = Math.round(width);\n      if (width > maxWidth)\n        width = maxWidth;\n      if (width < minWidth)\n        width = minWidth;\n      this.setState({ width: width });\n    }\n    if (this.state.height !== prevState.height) {\n      let height = this.state.height;\n      if (Math.round(height) !== height)\n        height = Math.round(height);\n      if (height > maxHeight)\n        height = maxHeight;\n      if (height < minHeight)\n        height = minHeight;\n      this.setState({ height: height });\n    }\n  }\n\n  // get current width of <section> element\n  updateSectionWidth() {\n    this.setState({ sectionWidth: ReactDOM.findDOMNode(this).clientWidth });\n  }\n\n  // expand graph container to width of window\n  expandContainer() {\n    const width = document.body.clientWidth - 20 - 20;\n    const height = (width * 3) / 4;\n    this.setState({\n      width: width,\n      height: height\n    });\n  }\n\n  // collapse graph container to width of <section> element\n  collapseContainer() {\n    const width = ReactDOM.findDOMNode(this).clientWidth;\n    const height = (width * 3) / 4;\n    this.setState({\n      width: width,\n      height: height\n    });\n  }\n\n  // set width of graph container\n  setWidth(value) {\n    this.setState({ width: value });\n  }\n\n  // set height of graph container\n  setHeight(value) {\n    this.setState({ height: value });\n  }\n\n  // download graph as svg\n  downloadSvg() {\n    const svg = document.getElementById('graph');\n    downloadSvg(svg);\n  }\n\n  // set counts of nodes, edges, etc\n  setGraphCounts(nodeCount, edgeCount) {\n    this.setState({\n      nodeCount: nodeCount,\n      edgeCount: edgeCount\n    });\n  }\n\n  // sets the selected node/edge\n  setSelectedElement(element) {\n    this.setState({ selectedElement: element });\n  }\n\n  // display component\n  render() {\n    let info = '';\n    if (this.state.selectedElement) {\n      if (this.state.selectedElement.elementType === 'node') {\n        info = (\n          <>\n            <div className='graph_info_header small light'>Selected Node</div>\n            <SelectedInfo\n              node={this.state.selectedElement}\n              primaryFields={['metanode', 'neo4j_id']}\n              order={[\n                'name',\n                'metanode',\n                'source',\n                'url',\n                'description',\n                'identifier',\n                'neo4j_id'\n              ]}\n            />\n          </>\n        );\n      }\n      if (this.state.selectedElement.elementType === 'edge') {\n        info = (\n          <>\n            <div className='graph_info_header small light'>Selected Edge</div>\n            <SelectedInfo\n              edge={this.state.selectedElement}\n              primaryFields={['kind', 'directed', 'neo4j_id']}\n              order={['kind', 'neo4j_id', 'source']}\n            />\n          </>\n        );\n      }\n    }\n    return (\n      <section>\n        <CollapsibleSection\n          label='Path Graph'\n          tooltipText='Graph of path results'\n        >\n          <div className='table_attic'>\n            <TextButton\n              text='reset'\n              icon={faPowerOff}\n              onClick={() => {\n                if (this.graph.current)\n                  this.graph.current.restartGraph();\n              }}\n              tooltipText='Completely restart graph'\n            />\n            <TextButton\n              text='unpin all'\n              icon={faMapMarkerAlt}\n              onClick={() => {\n                if (this.graph.current)\n                  this.graph.current.unpinAll();\n              }}\n              tooltipText='Unpin all nodes'\n            />\n            <TextButton\n              text='pin all'\n              icon={faMapMarker}\n              onClick={() => {\n                if (this.graph.current)\n                  this.graph.current.pinAll();\n              }}\n              tooltipText='Pin all nodes in their current position'\n            />\n            <TextButton\n              text='fit'\n              icon={faExpand}\n              onClick={() => {\n                if (this.graph.current)\n                  this.graph.current.fitView();\n              }}\n              tooltipText='Fit the view to the contents of the graph'\n            />\n            <TextButton\n              text='.svg'\n              icon={faDownload}\n              onClick={this.downloadSvg}\n              tooltipText='Download the graph as an .svg file'\n            />\n            <NumberBox\n              tooltipText='Width of the container'\n              min={minWidth}\n              step='5'\n              max={maxWidth}\n              value={this.state.width}\n              onArrows={this.setWidth}\n              onSubmit={this.setWidth}\n            />\n            &times;\n            <NumberBox\n              tooltipText='Height of the container'\n              min={minHeight}\n              step='5'\n              max={maxHeight}\n              value={this.state.height}\n              onArrows={this.setHeight}\n              onSubmit={this.setHeight}\n            />\n            <TextButton\n              className='graph_expand_collapse_button'\n              text=''\n              icon={faExpandArrowsAlt}\n              onClick={this.expandContainer}\n              tooltipText='Fit the graph to the window'\n            />\n            <TextButton\n              className='graph_expand_collapse_button'\n              text=''\n              icon={faCompressArrowsAlt}\n              onClick={this.collapseContainer}\n              tooltipText='Fit the graph to the \"Path Graph\" section'\n            />\n            <span className='small light right'>\n              {this.state.nodeCount} nodes, {this.state.edgeCount} edges\n            </span>\n          </div>\n          <Graph\n            ref={this.graph}\n            width={this.state.width}\n            height={this.state.height}\n            sectionWidth={this.state.sectionWidth}\n            setGraphCounts={this.setGraphCounts}\n            setSelectedElement={this.setSelectedElement}\n          />\n          {info}\n        </CollapsibleSection>\n      </section>\n    );\n  }\n}\n\n// path graph component\nexport class Graph extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.data = this.assembleGraph(null);\n\n    this.fitView = this.fitView.bind(this);\n    this.resetView = this.resetView.bind(this);\n    this.onSimulationTick = this.onSimulationTick.bind(this);\n    this.onNodeEdgeClick = this.onNodeEdgeClick.bind(this);\n    this.onNodeDragStart = this.onNodeDragStart.bind(this);\n    this.onNodeDragEnd = this.onNodeDragEnd.bind(this);\n    this.onViewClick = this.onViewClick.bind(this);\n  }\n\n  // when component mounts\n  componentDidMount() {\n    this.createGraph();\n    this.setState({ data: this.assembleGraph() });\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps, prevState) {\n    // if path queries have changed\n    if (this.props.pathQueries !== prevProps.pathQueries)\n      // update graph data\n      this.setState({ data: this.assembleGraph() });\n    // if graph data has changed\n    else if (this.state.data !== prevState.data) {\n      // copy simulation vars from old data to new data to persist node\n      // positions/velocities/etc\n      transferObjectProps(\n        prevState.data.nodes,\n        this.state.data.nodes,\n        ['neo4j_id'],\n        ['x', 'y', 'fx', 'fy', 'vx', 'vy']\n      );\n\n      // update graph\n      this.updateGraph();\n\n      // update graph info (node count, edge count, etc)\n      this.props.setGraphCounts(\n        this.state.data.nodes.length,\n        this.state.data.edges.length\n      );\n    }\n  }\n\n  // completely restart graph\n  restartGraph() {\n    this.resetView();\n    this.state.simulation.alpha(1).restart();\n    // set graph data to null then back to data again\n    this.setState({ data: this.assembleGraph(null) }, () =>\n      this.setState({ data: this.assembleGraph() })\n    );\n  }\n\n  // create graph when page first loads\n  createGraph() {\n    const svg = d3.select('#graph');\n\n    // create physics simulation for nodes to detangle and prettify layout\n    const simulation = d3\n      .forceSimulation()\n      .force(\n        'link',\n        d3\n          .forceLink()\n          .distance(nodeDistance)\n          .id((d) => d.neo4j_id)\n      )\n      .force(\n        'collide',\n        d3\n          .forceCollide()\n          .radius(nodeRadius)\n          .strength(1)\n      )\n      .force('charge', d3.forceManyBody().strength(-nodeRepulsion))\n      .force('center', d3.forceCenter(0, 0));\n    simulation.on('tick', this.onSimulationTick);\n\n    // create handler for panning and zooming view\n    const viewZoomHandler = d3\n      .zoom()\n      .scaleExtent([minZoom, maxZoom])\n      .on('zoom', this.onViewZoom);\n    svg.call(viewZoomHandler);\n\n    // handle clicks on background\n    svg.on('click', this.onViewClick);\n\n    // create handler for dragging nodes\n    const nodeDragHandler = d3\n      .drag()\n      .on('drag', this.onNodeDrag)\n      .on('start', this.onNodeDragStart)\n      .on('end', this.onNodeDragEnd);\n\n    // store the above objects to be referenced on graph updates\n    this.setState(\n      {\n        simulation: simulation,\n        viewZoomHandler: viewZoomHandler,\n        nodeDragHandler: nodeDragHandler\n      },\n      this.resetView\n    );\n  }\n\n  // when simulation ticks forward\n  onSimulationTick() {\n    // position all elements in graph\n    d3.selectAll('.graph_edge_line_highlight').each(this.positionEdge);\n    d3.selectAll('.graph_edge_line').each(this.positionEdge);\n    d3.selectAll('.graph_edge_label').each(this.positionEdgeLabel);\n    d3.selectAll('.graph_node_circle_highlight').each(this.positionNode);\n    d3.selectAll('.graph_node_circle').each(this.positionNode);\n    d3.selectAll('.graph_node_label').each(this.positionNode);\n  }\n\n  // position node based on results of simulation\n  // d3 simulation stores positions/velocities/etc directly in data object\n  positionNode(d, i, s) {\n    const node = s[i];\n    d3.select(node).attr('transform', 'translate(' + d.x + ',' + d.y + ')');\n  }\n\n  // position edge line between source/target node\n  positionEdge(d, i, s) {\n    let x1 = d.source.x;\n    let y1 = d.source.y;\n    let x2 = d.target.x;\n    let y2 = d.target.y;\n    let path = '';\n\n    // get angle between source/target in radians\n    const angle = Math.atan2(y2 - y1, x2 - x1);\n\n    // get radius of source/target nodes\n    const sourceRadius = nodeRadius - 0.25;\n    let targetRadius = nodeRadius - 0.25;\n    // increase target node radius to bring tip of arrowhead out of circle\n    if (d.directed)\n      targetRadius += edgeArrowSize / 4;\n\n    if (d.coincidentOffset === 0) {\n      // if no coincident edges, or middle of odd number of coincident edges,\n      // just draw straight line\n\n      // bring start/end of line to edge of circles\n      x1 += Math.cos(angle) * sourceRadius;\n      y1 += Math.sin(angle) * sourceRadius;\n      x2 -= Math.cos(angle) * targetRadius;\n      y2 -= Math.sin(angle) * targetRadius;\n\n      // straight line path\n      path = ['M', x1, y1, 'L', x2, y2].join(' ');\n    } else {\n      // otherwise, if coincident edge, draw a curve\n\n      // spread out contact points with circle over spread angle\n      const angleOffset = edgeSpreadAngle * d.coincidentOffset;\n\n      // bring start/end of curve to edge of circle\n      x1 += Math.cos(angle + angleOffset) * sourceRadius;\n      y1 += Math.sin(angle + angleOffset) * sourceRadius;\n      x2 -= Math.cos(angle - angleOffset) * targetRadius;\n      y2 -= Math.sin(angle - angleOffset) * targetRadius;\n\n      // get straight line distance between start/end of curve\n      const distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n      // get \"sagitta\" distance\n      const sag = Math.min(edgeSpreadDistance, distance) * d.coincidentOffset;\n\n      // get point distance \"sag\" away from midpoint of line\n      const qX = (x2 + x1) / 2 - (2 * sag * (y2 - y1)) / distance;\n      const qY = (y2 + y1) / 2 + (2 * sag * (x2 - x1)) / distance;\n\n      // draw curve with handle point Q\n      path = ['M', x1, y1, 'Q', qX, qY, x2, y2].join(' ');\n    }\n\n    // set edge path\n    const edge = s[i];\n    d3.select(edge).attr('d', path);\n  }\n\n  // position edge label in center of edge line and rotate\n  positionEdgeLabel(d, i, s) {\n    let x1 = d.source.x;\n    let y1 = d.source.y;\n    let x2 = d.target.x;\n    let y2 = d.target.y;\n\n    // get angle between source/target in radians\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n\n    // get radius of source/target nodes\n    const sourceRadius = nodeRadius - 0.25;\n    let targetRadius = nodeRadius - 0.25;\n    // increase target node radius to bring tip of arrowhead out of circle\n    if (d.directed)\n      targetRadius += edgeArrowSize / 4;\n\n    // spread out contact points with circle over spread angle\n    const angleOffset = edgeSpreadAngle * d.coincidentOffset;\n\n    // bring start/end of curve to edge of circle\n    x1 += Math.cos(angle + angleOffset) * sourceRadius;\n    y1 += Math.sin(angle + angleOffset) * sourceRadius;\n    x2 -= Math.cos(angle - angleOffset) * targetRadius;\n    y2 -= Math.sin(angle - angleOffset) * targetRadius;\n\n    // get straight line distance between start/end of curve\n    const distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n    // get \"sagitta\" distance\n    const sag = Math.min(edgeSpreadDistance, distance) * d.coincidentOffset;\n\n    // get anchor point of text, point distance \"sag\" away from midpoint of line\n    const textX = (x2 + x1) / 2 - (sag * (y2 - y1)) / distance;\n    const textY = (y2 + y1) / 2 + (sag * (x2 - x1)) / distance;\n\n    // get angle of text in degrees\n    angle = (angle / (2 * Math.PI)) * 360;\n    // rotate text to always show upright\n    if (angle > 90)\n      angle -= 180;\n    if (angle <= -90)\n      angle += 180;\n\n    // set vertical alignment of text relative to anchor point\n    let dy = -0.35 * edgeFontSize;\n    // always place text on \"outside\" side of curve\n    if (sag < 0 && d.source.x > d.target.x)\n      dy = 1.1 * edgeFontSize;\n\n    // set edge text transform\n    const edgeLabel = s[i];\n    d3.select(edgeLabel)\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('dy', dy)\n      .attr(\n        'transform',\n        'translate(' + textX + ',' + textY + ') rotate(' + angle + ') '\n      );\n  }\n\n  // fit view to contents of graph\n  fitView() {\n    const contents = d3\n      .select('#graph_view')\n      .node()\n      .getBBox();\n    const container = d3\n      .select('#graph')\n      .node()\n      .getBoundingClientRect();\n    const padding = nodeRadius;\n\n    // if no contents, exit\n    if (contents.width === 0 || contents.height === 0)\n      return;\n\n    // dimensions minus borders\n    container.width -= 2;\n    container.height -= 2;\n\n    // calculate center of contents\n    contents.midX = contents.x + contents.width / 2;\n    contents.midY = contents.y + contents.height / 2;\n\n    // determine scale and translate to fit view\n    const scale =\n      1 /\n      Math.max(\n        contents.width / (container.width - padding),\n        contents.height / (container.height - padding)\n      );\n    const translateX = container.width / 2 - scale * contents.midX;\n    const translateY = container.height / 2 - scale * contents.midY;\n\n    // perform view transform\n    d3.select('#graph').call(\n      this.state.viewZoomHandler.transform,\n      d3.zoomIdentity.translate(translateX, translateY).scale(scale)\n    );\n  }\n\n  // center view and reset to 100% zoom\n  resetView() {\n    const container = d3\n      .select('#graph')\n      .node()\n      .getBoundingClientRect();\n\n    // dimensions minus borders\n    container.width -= 2;\n    container.height -= 2;\n\n    // determine scale and translate to fit view\n    const scale = 1;\n    const translateX = container.width / 2;\n    const translateY = container.height / 2;\n\n    // perform view transform\n    d3.select('#graph').call(\n      this.state.viewZoomHandler.transform,\n      d3.zoomIdentity.translate(translateX, translateY).scale(scale)\n    );\n  }\n\n  // unpin all nodes\n  unpinAll() {\n    const data = this.state.data;\n\n    data.nodes.forEach((node) => {\n      node.fx = null;\n      node.fy = null;\n    });\n\n    this.state.simulation.alpha(1).restart();\n  }\n\n  // pin all nodes\n  pinAll() {\n    const data = this.state.data;\n\n    data.nodes.forEach((node) => {\n      node.fx = node.x;\n      node.fy = node.y;\n    });\n  }\n\n  // when node or edge clicked by user\n  onNodeEdgeClick(d) {\n    d3.event.stopPropagation();\n\n    if (!d.selected) {\n      this.deselectAll();\n      d.selected = true;\n    } else\n      this.deselectAll();\n\n    this.updateNodeCircles();\n    this.updateEdgeLines();\n\n    this.props.setSelectedElement(d);\n  }\n\n  // deselect all elements\n  deselectAll() {\n    for (const node of this.state.data.nodes)\n      node.selected = undefined;\n    for (const edge of this.state.data.edges)\n      edge.selected = undefined;\n  }\n\n  // when node dragged by user\n  onNodeDragStart() {\n    this.state.simulation.alphaTarget(1).restart();\n  }\n\n  // when node dragged by user\n  onNodeDrag(d) {\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n  }\n\n  // when node dragged by user\n  onNodeDragEnd() {\n    this.state.simulation.alphaTarget(0).restart();\n  }\n\n  // when view/background is clicked by user\n  onViewClick() {\n    this.deselectAll();\n    this.updateNodeCircles();\n    this.updateEdgeLines();\n    this.props.setSelectedElement(null);\n  }\n\n  // when view panned or zoomed by user\n  onViewZoom() {\n    d3.select('#graph_view').attr('transform', d3.event.transform);\n  }\n\n  // update simulation with new data (new nodes and/or edges)\n  updateSimulation() {\n    const data = this.state.data;\n    this.state.simulation.nodes(data.nodes);\n    this.state.simulation.force('link').links(data.edges);\n    this.state.simulation.alpha(1).restart();\n  }\n\n  // draw edge line highlight elements\n  updateEdgeLineHighlights() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_edge_line_highlight_layer');\n\n    const edgeLineHighlights = layer\n      .selectAll('.graph_edge_line_highlight')\n      .data(data.edges.filter((d) => d.highlighted === true));\n\n    edgeLineHighlights\n      .enter()\n      .append('path')\n      .merge(edgeLineHighlights)\n      .attr('class', 'graph_edge_line_highlight')\n      .attr('fill', 'none')\n      .attr('stroke', highlightColor)\n      .attr('stroke-width', edgeArrowSize)\n      .attr('stroke-linecap', 'square');\n\n    edgeLineHighlights.exit().remove();\n  }\n\n  // draw edge line elements\n  updateEdgeLines() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_edge_line_layer');\n\n    const edgeLines = layer.selectAll('.graph_edge_line').data(data.edges);\n\n    edgeLines\n      .enter()\n      .append('path')\n      .on('click', this.onNodeEdgeClick)\n      .merge(edgeLines)\n      .attr('class', 'graph_edge_line')\n      .attr('marker-end', (d) => {\n        if (d.directed)\n          return 'url(#graph_arrowhead)';\n        else\n          return '';\n      })\n      .attr('fill', 'none')\n      .attr('stroke', inkColor)\n      .attr('stroke-width', edgeThickness)\n      .style('stroke-dasharray', (d) => {\n        if (d.selected)\n          return edgeThickness * 2 + ' ' + edgeThickness;\n        else\n          return 'none';\n      })\n      .style('cursor', 'pointer');\n\n    edgeLines.exit().remove();\n  }\n\n  // draw edge label elements\n  updateEdgeLabels() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_edge_label_layer');\n\n    const edgeLabels = layer.selectAll('.graph_edge_label').data(data.edges);\n\n    edgeLabels\n      .enter()\n      .append('text')\n      .on('click', this.onNodeEdgeClick)\n      .merge(edgeLabels)\n      .attr('class', 'graph_edge_label')\n      .attr('font-size', edgeFontSize)\n      .attr('font-weight', 500)\n      .attr('text-anchor', 'middle')\n      .attr('user-select', 'none')\n      .attr('fill', inkColor)\n      .style('cursor', 'pointer')\n      .text((d) => d.kind);\n\n    edgeLabels.exit().remove();\n  }\n\n  // draw node circle highlight elements\n  updateNodeCircleHighlights() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_node_circle_highlight_layer');\n\n    const nodeCircleHighlights = layer\n      .selectAll('.graph_node_circle_highlight')\n      .data(data.nodes.filter((d) => d.highlighted === true));\n\n    nodeCircleHighlights\n      .enter()\n      .append('circle')\n      .merge(nodeCircleHighlights)\n      .attr('class', 'graph_node_circle_highlight')\n      .attr('r', nodeRadius)\n      .attr('fill', 'none')\n      .attr('stroke', highlightColor)\n      .attr('stroke-width', edgeArrowSize);\n\n    nodeCircleHighlights.exit().remove();\n  }\n\n  // draw node circle elements\n  updateNodeCircles() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_node_circle_layer');\n\n    const nodeCircles = layer.selectAll('.graph_node_circle').data(data.nodes);\n\n    nodeCircles\n      .enter()\n      .append('circle')\n      .call(this.state.nodeDragHandler)\n      .on('click', this.onNodeEdgeClick)\n      .merge(nodeCircles)\n      .attr('class', 'graph_node_circle')\n      .attr('r', nodeRadius)\n      .attr('fill', (d) => this.getNodeFillColor(d.metanode))\n      .attr('stroke', (d) => {\n        if (d.selected)\n          return inkColor;\n        else\n          return 'none';\n      })\n      .attr('stroke-width', edgeThickness)\n      .style('stroke-dasharray', edgeThickness * 2 + ' ' + edgeThickness)\n      .style('cursor', 'pointer');\n\n    nodeCircles.exit().remove();\n  }\n\n  // draw node label elements\n  updateNodeLabels() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_node_label_layer');\n\n    const nodeLabels = layer.selectAll('.graph_node_label').data(data.nodes);\n\n    nodeLabels\n      .enter()\n      .append('foreignObject')\n      .attr('class', 'graph_node_label')\n      .append('xhtml:div')\n      .append('xhtml:span');\n\n    layer\n      .selectAll('.graph_node_label')\n      .attr('x', -nodeRadius)\n      .attr('y', -nodeRadius)\n      .attr('width', nodeRadius * 2)\n      .attr('height', nodeRadius * 2)\n      .style('pointer-events', 'none')\n      .select('div')\n      .style('display', 'flex')\n      .style('justify-content', 'center')\n      .style('align-items', 'center')\n      .style('width', '100%')\n      .style('height', '100%')\n      .style('box-sizing', 'border-box')\n      .style('padding', nodeRadius * 0.25 + 'px')\n      .select('span')\n      .style('text-align', 'center')\n      .style('font-size', nodeFontSize + 'px')\n      .style('font-weight', 500)\n      .style('color', (d) => this.getNodeTextColor(d.metanode))\n      .style('word-break', 'break-word')\n      .html((d) => {\n        if (d.data.name.length > nodeCharLimit)\n          return d.data.name.substr(0, nodeCharLimit - 3) + '...';\n        else\n          return d.data.name;\n      });\n\n    nodeLabels.exit().remove();\n  }\n\n  // update graph\n  updateGraph() {\n    this.updateEdgeLineHighlights();\n    this.updateEdgeLines();\n    this.updateEdgeLabels();\n    this.updateNodeCircleHighlights();\n    this.updateNodeCircles();\n    this.updateNodeLabels();\n    this.pinSourceAndTargetNodes();\n    this.updateSimulation();\n  }\n\n  // fix source and target nodes in nice starting positions\n  pinSourceAndTargetNodes() {\n    const data = this.state.data;\n\n    data.nodes.forEach((node) => {\n      if (node.neo4j_id === data.source_neo4j_id) {\n        if (!node.x && !node.fx)\n          node.fx = -nodeDistance * 2;\n        if (!node.y && !node.fy)\n          node.fy = 0;\n      }\n      if (node.neo4j_id === data.target_neo4j_id) {\n        if (!node.x && !node.fx)\n          node.fx = nodeDistance * 2;\n        if (!node.y && !node.fy)\n          node.fy = 0;\n      }\n    });\n  }\n\n  // get node fill color based on type (metanode)\n  getNodeFillColor(type) {\n    const style = this.props.hetioStyles[type];\n    if (style && style.fill_color)\n      return style.fill_color;\n    else\n      return inkColor;\n  }\n\n  // get node text color based on type (metanode)\n  getNodeTextColor(type) {\n    const style = this.props.hetioStyles[type];\n    if (style && style.text_color)\n      return style.text_color;\n    else\n      return backgroundColor;\n  }\n\n  // construct graph object with relevant properties for each node/edge\n  assembleGraph(pathQueries) {\n    // empty graph object\n    const graph = {\n      source_neo4j_id: null,\n      target_neo4j_id: null,\n      nodes: [],\n      edges: []\n    };\n\n    // if null explicitly provided as argument, return empty graph object\n    if (pathQueries === null)\n      return graph;\n\n    // if pathQueries not provided as argument, get from component props\n    if (!pathQueries)\n      pathQueries = this.props.pathQueries;\n\n    // if pathQueries not valid, exit\n    if (!pathQueries || pathQueries.length <= 0)\n      return graph;\n\n    // get source/target nodes from first path in pathQueries\n    const firstPath = pathQueries[0].paths[0];\n    graph.source_neo4j_id = firstPath.node_ids[0];\n    graph.target_neo4j_id = firstPath.node_ids[firstPath.node_ids.length - 1];\n\n    // loop through all paths in pathQueries\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        // if not checked, don't include in graph\n        if (!path.checked)\n          continue;\n\n        // loop through nodes in path\n        for (const nodeId of path.node_ids) {\n          const node = pathQuery.nodes[nodeId];\n          const existingNode = graph.nodes.find(\n            (existing) => existing.neo4j_id === node.neo4j_id\n          );\n          if (!existingNode) {\n            // if node hasn't been added to graph yet, add it\n            graph.nodes.push({\n              // copy all properties of node\n              ...node,\n              // add highlight property\n              highlighted: path.highlighted,\n              // mark as node\n              elementType: 'node'\n            });\n          } else if (path.highlighted)\n            // if node already in graph, still update highlight status\n            existingNode.highlighted = true;\n        }\n\n        // loop through edges in path\n        for (const relId of path.rel_ids) {\n          const edge = pathQuery.relationships[relId];\n          const existingEdge = graph.edges.find(\n            (existing) =>\n              existing.source_neo4j_id === edge.source_neo4j_id &&\n              existing.target_neo4j_id === edge.target_neo4j_id &&\n              existing.kind === edge.kind &&\n              existing.directed === edge.directed\n          );\n          if (!existingEdge) {\n            // if edge hasn't been added to graph yet, add it\n            graph.edges.push({\n              // copy all properties of edge\n              ...edge,\n              // set duplicate properties \"source\" and \"target\" because d3\n              // needs them (with those names) to create links between nodes\n              source: edge.source_neo4j_id,\n              target: edge.target_neo4j_id,\n              // add highlight property\n              highlighted: path.highlighted,\n              // mark as edge\n              elementType: 'edge'\n            });\n          } else if (path.highlighted)\n            // if edge already in graph, still update highlight status\n            existingEdge.highlighted = true;\n        }\n      }\n    }\n\n    // loop through all edges in graph to find coincident edges\n    // (multiple edges connecting the same two nodes)\n\n    // sort all edges in graph into bins of same source/target nodes\n    const edgeBins = [];\n    for (const edgeA of graph.edges) {\n      let matched = false;\n      // find bin with edges that have same source/target nodes\n      // (order-insensitve)\n      for (const edgeBin of edgeBins) {\n        const match = edgeBin.find(\n          (edgeB) =>\n            (edgeA.source_neo4j_id === edgeB.source_neo4j_id &&\n              edgeA.target_neo4j_id === edgeB.target_neo4j_id) ||\n            (edgeA.source_neo4j_id === edgeB.target_neo4j_id &&\n              edgeA.target_neo4j_id === edgeB.source_neo4j_id)\n        );\n        // if matching bin found, add edge to it\n        if (match) {\n          edgeBin.push(edgeA);\n          matched = true;\n          break;\n        }\n      }\n      // if didn't find matching bin, create new one and add edge to it\n      if (!matched)\n        edgeBins.push([edgeA]);\n    }\n\n    // loop through edge bins\n    for (const edgeBin of edgeBins) {\n      // for each edge in bin, assign coincident \"offset\", a value between\n      // -1 and 1 used for drawing, where 0 is straight line, negative is curve\n      // on one side, and positive is curve on other side\n      const firstSource = edgeBin[0].source_neo4j_id;\n      for (let index = 0; index < edgeBin.length; index++) {\n        // default offset to 0\n        let offset = 0;\n        if (edgeBin.length > 1)\n          offset = -0.5 + index / (edgeBin.length - 1);\n        // if edge source/target order in reverse order as rest of bin,\n        // invert offset\n        if (edgeBin[index].source_neo4j_id !== firstSource)\n          offset *= -1;\n        edgeBin[index].coincidentOffset = offset;\n      }\n    }\n\n    // put source and target node at end of list to ensure highest z-index\n    const sourceNodeIndex = graph.nodes.findIndex(\n      (node) => node.neo4j_id === graph.source_neo4j_id\n    );\n    if (sourceNodeIndex !== -1)\n      graph.nodes.push(graph.nodes.splice(sourceNodeIndex, 1)[0]);\n    const targetNodeIndex = graph.nodes.findIndex(\n      (node) => node.neo4j_id === graph.target_neo4j_id\n    );\n    if (targetNodeIndex !== -1)\n      graph.nodes.push(graph.nodes.splice(targetNodeIndex, 1)[0]);\n\n    return graph;\n  }\n\n  // display component\n  render() {\n    // calculate x position of graph container\n    let left = 0;\n    if (this.props.sectionWidth && this.props.width) {\n      left = this.props.sectionWidth / 2 - this.props.width / 2;\n      const minLeft =\n        this.props.sectionWidth / 2 - document.body.clientWidth / 2 + 20;\n      if (left < minLeft)\n        left = minLeft;\n    }\n\n    // title text\n    const title =\n      (this.props.sourceNode.name || '___') +\n      ' → ' +\n      (this.props.targetNode.name || '___');\n\n    // description text\n    const description = [\n      'Graph visualization of the connectivity between ',\n      this.props.sourceNode.name || '___',\n      ' (',\n      this.props.sourceNode.metanode || '___',\n      ') and ',\n      this.props.targetNode.name || '___',\n      ' (',\n      this.props.targetNode.metanode || '___',\n      '). ',\n      '\\n\\n',\n      'Created at ',\n      window.location.href,\n      '\\n\\n',\n      'This subgraph of Hetionet v1.0 was created from paths between the ',\n      'specified source/target nodes that occurred more than expected ',\n      'by chance. ',\n      'See https://het.io for more information. '\n    ].join('');\n\n    return (\n      <div id='graph_container' style={{ height: this.props.height }}>\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          id='graph'\n          width={this.props.width}\n          height={this.props.height}\n          style={{ left: left }}\n        >\n          <title>{title}</title>\n          <desc>{description}</desc>\n          <defs>\n            <style>\n              {`\n                @import url('https://fonts.googleapis.com/css?family=Raleway:400,500,700');\n                @import url('https://fonts.googleapis.com/css?family=Montserrat:400,500,700&text=0123456789');\n                * {\n                  font-family: 'Montserrat', 'Raleway', sans-serif;\n                }\n              `}\n            </style>\n            <marker\n              id='graph_arrowhead'\n              viewBox='0 0 100 100'\n              refX='80'\n              refY='50'\n              orient='auto'\n              markerUnits='userSpaceOnUse'\n              markerWidth={edgeArrowSize}\n              markerHeight={edgeArrowSize}\n            >\n              <path\n                d='\n                  M 0 0\n                  L 100 50\n                  L 0 100'\n                fill={inkColor}\n              />\n            </marker>\n          </defs>\n          <g id='graph_view'>\n            <g id='graph_edge_line_highlight_layer' />\n            <g id='graph_node_circle_highlight_layer' />\n            <g id='graph_edge_line_layer' />\n            <g id='graph_edge_label_layer' />\n            <g id='graph_node_circle_layer' />\n            <g id='graph_node_label_layer' />\n          </g>\n        </svg>\n      </div>\n    );\n  }\n}\n// connect component to global state\nGraph = connect(\n  (state) => ({\n    sourceNode: state.sourceNode,\n    targetNode: state.targetNode,\n    pathQueries: state.pathQueries,\n    hetioStyles: state.hetioStyles\n  }),\n  null,\n  null,\n  { forwardRef: true }\n)(Graph);\n\n// selected node/edge info component\nclass SelectedInfo extends Component {\n  // display row entries\n  rows() {\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.edges\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n    if (tooltipText['id'])\n      tooltipText['neo4j_id'] = tooltipText['id'];\n\n    const element = this.props.node || this.props.edge;\n\n    // get primary fields from top level of node/edge\n    let primaryFields = this.props.primaryFields;\n    // get first/second column text (key/value) for each field\n    primaryFields = primaryFields.map((field) => ({\n      firstCol: field,\n      secondCol: String(element[field]),\n      tooltipText: tooltipText[field]\n    }));\n\n    // get 'extra fields' from node/edge 'data' field\n    let extraFields = Object.keys(element.data);\n    // get first/second column text (key/value) for each field\n    extraFields = extraFields.map((field) => ({\n      firstCol: field,\n      secondCol: String(element.data[field]),\n      tooltipText: tooltipText[field]\n    }));\n\n    // combine primary and extra fields\n    let fields = primaryFields.concat(extraFields);\n\n    // display fields in custom order\n    fields = sortCustom(fields, this.props.order, 'firstCol');\n\n    // make columns from fields\n    const cols = fields.map((field, index) => {\n      return (\n        <React.Fragment key={index}>\n          <td className='col_s small light'>\n            <Tooltip text={field.tooltipText}>{field.firstCol}</Tooltip>\n          </td>\n          <td className='small'>{field.secondCol}</td>\n        </React.Fragment>\n      );\n    });\n\n    // make rows in groups of two\n    const rows = new Array(Math.ceil(cols.length / 2))\n      .fill()\n      .map(() => cols.splice(0, 2))\n      .map((col, index) => <tr key={index}>{col}</tr>);\n\n    return rows;\n  }\n\n  // display component\n  render() {\n    return (\n      <table id='graph_info_table'>\n        <tbody>{this.rows()}</tbody>\n      </table>\n    );\n  }\n}\n// connect component to global state\nSelectedInfo = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(SelectedInfo);\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Header } from './header.js';\nimport { NodeSearch } from './node-search.js';\nimport { NodeResults } from './node-results.js';\nimport { MetapathResults } from './metapath-results.js';\nimport { PathResults } from './path-results.js';\nimport { PathGraph } from './path-graph.js';\nimport { getMetagraph } from './backend-query.js';\nimport { getHetioDefinitions } from './backend-query.js';\nimport { getHetioStyles } from './backend-query.js';\nimport { getHetmechDefinitions } from './backend-query.js';\nimport { lookupNodeById } from './backend-query.js';\nimport { searchMetapaths } from './backend-query.js';\nimport { searchPaths } from './backend-query.js';\nimport { setDefinitions } from './actions.js';\nimport { updateSourceTargetNodes } from './actions.js';\nimport { updateMetapaths } from './actions.js';\nimport { updatePathQueries } from './actions.js';\nimport './styles.css';\n\n// main app component\nclass App extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.fetchDefinitions = this.fetchDefinitions.bind(this);\n    this.updateNodesFromUrl = this.updateNodesFromUrl.bind(this);\n    this.updateMetapaths = this.updateMetapaths.bind(this);\n    this.updateHistory = this.updateHistory.bind(this);\n    this.updateTitle = this.updateTitle.bind(this);\n    this.updatePaths = this.updatePaths.bind(this);\n\n    // fetch definitions when page first loads\n    this.fetchDefinitions();\n    // get parameters from url when page first loads\n    this.updateNodesFromUrl();\n    // listen for back/forward navigation (history)\n    window.addEventListener('popstate', this.updateNodesFromUrl);\n  }\n\n  // when component changes\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.sourceNode !== this.props.sourceNode ||\n      prevProps.targetNode !== this.props.targetNode\n    )\n      this.onNodeChange();\n    if (prevProps.metapaths !== this.props.metapaths)\n      this.onMetapathChange();\n  }\n\n  // get metagraph, hetio definitions, and hetmech definitions\n  fetchDefinitions() {\n    this.props.dispatch((dispatch) => {\n      // wait until all fetches return to update state\n      const promises = [\n        getMetagraph(),\n        getHetioDefinitions(),\n        getHetioStyles(),\n        getHetmechDefinitions()\n      ];\n      Promise.all(promises).then((results) => {\n        dispatch(\n          setDefinitions({\n            metagraph: results[0],\n            hetioDefinitions: results[1],\n            hetioStyles: results[2],\n            hetmechDefinitions: results[3]\n          })\n        );\n      });\n    });\n  }\n\n  // update source/target nodes from url\n  updateNodesFromUrl() {\n    this.props.dispatch((dispatch) => {\n      const params = new URLSearchParams(window.location.search);\n      const sourceNodeId = params.get('source');\n      const targetNodeId = params.get('target');\n\n      // wait until both node searches return to update state\n      const promises = [\n        lookupNodeById(sourceNodeId),\n        lookupNodeById(targetNodeId)\n      ];\n      Promise.all(promises).then((results) => {\n        dispatch(\n          updateSourceTargetNodes({\n            sourceNode: results[0],\n            targetNode: results[1]\n          })\n        );\n      });\n    });\n  }\n\n  // when source/target node change\n  onNodeChange() {\n    // update history url before title to make sure title gets changed for\n    // correct page\n    this.updateMetapaths();\n    this.updateHistory();\n    this.updateTitle();\n  }\n\n  // update metapaths (node pair query results) when source/target node change\n  updateMetapaths() {\n    this.props.dispatch((dispatch) =>\n      searchMetapaths(this.props.sourceNode.id, this.props.targetNode.id).then(\n        (results) =>\n          dispatch(\n            updateMetapaths({\n              metapaths: results\n            })\n          )\n      )\n    );\n  }\n\n  // add history entry for source/target node without navigating page\n  updateHistory() {\n    const oldParams = new URLSearchParams(window.location.search);\n    const newParams = new URLSearchParams();\n\n    if (this.props.sourceNode.id !== undefined)\n      newParams.set('source', this.props.sourceNode.id);\n    if (this.props.targetNode.id !== undefined)\n      newParams.set('target', this.props.targetNode.id);\n\n    // if url already matches source/target nodes, don't update.\n    // will prevent extra history entry from getting source/target from url on\n    // page load\n    if (\n      (oldParams.get('source') === newParams.get('source')) &\n      (oldParams.get('target') === newParams.get('target'))\n    )\n      return;\n\n    let search = newParams.toString();\n    if (search.length > 0)\n      search = '?' + search;\n\n    const url = window.location.origin + window.location.pathname + search;\n    window.history.pushState({}, '', url);\n  }\n\n  // update page title based on source/target node\n  updateTitle() {\n    if (!this.props.sourceNode.id && !this.props.targetNode.id)\n      return;\n    const title =\n      (this.props.sourceNode.name || '___') +\n      ' → ' +\n      (this.props.targetNode.name || '___');\n    document.title = title;\n  }\n\n  // when checked metapaths change\n  onMetapathChange() {\n    this.updatePaths();\n  }\n\n  // update paths when checked metapaths change\n  updatePaths() {\n    this.props.dispatch((dispatch) => {\n      // fetch paths for all checked metapaths\n      const promises = [];\n      for (const metapath of this.props.metapaths) {\n        if (metapath.checked) {\n          promises.push(\n            searchPaths(\n              this.props.sourceNode.id,\n              this.props.targetNode.id,\n              metapath.metapath_abbreviation\n            )\n          );\n        }\n      }\n\n      // update path queries when all queries have returned\n      Promise.all(promises).then((results) => {\n        dispatch(\n          updatePathQueries({\n            pathQueries: results\n          })\n        );\n      });\n    });\n  }\n\n  // display component\n  render() {\n    return (\n      <>\n        <Header />\n        <NodeSearch />\n        <NodeResults />\n        <MetapathResults />\n        <PathResults />\n        <PathGraph />\n      </>\n    );\n  }\n}\n// connect component to global state\nApp = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metapaths: state.metapaths\n}))(App);\n\nexport { App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport { Reducer } from './reducers.js';\nimport { App } from './app.js';\n\n// create global state store\nconst store = createStore(Reducer, applyMiddleware(thunk));\n\n// render/run app\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { transferObjectProps } from './util';\nimport { transferQueryProps } from './util';\n\n// map previous global state to new global state based on action\nexport function Reducer(prevState = {}, action) {\n  // start with previous state\n  const newState = { ...prevState };\n\n  // detect action type and set new state accordingly\n  switch (action.type) {\n    // set definitions\n    case 'set_definitions':\n      if (action.payload.metagraph !== undefined)\n        newState.metagraph = action.payload.metagraph;\n      if (action.payload.hetioDefinitions !== undefined)\n        newState.hetioDefinitions = action.payload.hetioDefinitions;\n      if (action.payload.hetioStyles !== undefined)\n        newState.hetioStyles = action.payload.hetioStyles;\n      if (action.payload.hetmechDefinitions !== undefined)\n        newState.hetmechDefinitions = action.payload.hetmechDefinitions;\n      break;\n\n    // update source and/or target node\n    case 'update_source_target_nodes':\n      if (action.payload.sourceNode !== undefined)\n        newState.sourceNode = action.payload.sourceNode;\n      if (action.payload.targetNode !== undefined)\n        newState.targetNode = action.payload.targetNode;\n      break;\n\n    // swap source/target nodes\n    case 'swap_source_target_nodes':\n      if (prevState.sourceNode && prevState.targetNode) {\n        newState.sourceNode = prevState.targetNode;\n        newState.targetNode = prevState.sourceNode;\n      }\n      break;\n\n    // update metapaths\n    case 'update_metapaths':\n      if (action.payload.metapaths !== undefined) {\n        newState.metapaths = action.payload.metapaths;\n        transferObjectProps(\n          prevState.metapaths,\n          newState.metapaths,\n          ['id'],\n          ['checked', 'highlighted']\n        );\n      }\n      break;\n\n    // update path queries\n    case 'update_path_queries':\n      if (action.payload.pathQueries !== undefined) {\n        newState.pathQueries = action.payload.pathQueries;\n        // console.log(newState.pathQueries);\n        transferQueryProps(\n          prevState.pathQueries,\n          newState.pathQueries,\n          'paths',\n          ['node_ids', 'rel_ids'],\n          ['checked', 'highlighted']\n        );\n        // console.log(newState.pathQueries);\n      }\n      break;\n\n    default:\n      break;\n  }\n\n  // make sure critical variables defined\n  if (!newState.metagraph)\n    newState.metagraph = {};\n  if (!newState.hetioDefinitions)\n    newState.hetioDefinitions = {};\n  if (!newState.hetioStyles)\n    newState.hetioStyles = {};\n  if (!newState.hetmechDefinitions)\n    newState.hetmechDefinitions = {};\n  if (!newState.sourceNode)\n    newState.sourceNode = {};\n  if (!newState.targetNode)\n    newState.targetNode = {};\n  if (!newState.metapaths)\n    newState.metapaths = [];\n  if (!newState.pathQueries)\n    newState.pathQueries = [];\n\n  // set new state\n  return newState;\n}\n"],"sourceRoot":""}