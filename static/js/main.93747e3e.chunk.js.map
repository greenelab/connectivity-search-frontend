{"version":3,"sources":["logo-animated.svg","header.js","arrow-icon-both.svg","arrow-icon-forward.svg","arrow-icon-backward.svg","chip-gene.svg","chip-compound.svg","chip-anatomy.svg","chip-disease.svg","chip-symptom.svg","chip-side-effect.svg","chip-biological-process.svg","chip-cellular-component.svg","chip-molecular-function.svg","chip-pathway.svg","chip-pharmacologic-class.svg","chips.js","tooltip.js","buttons.js","backend-query.js","actions.js","node-search.js","dynamic-field.js","collapsible-section.js","node-results.js","util.js","metapath-results.js","path-results.js","app.js","index.js","reducers.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","react_default","a","createElement","_ref3","id","stroke","strokeWidth","fill","d","_ref4","_ref5","transform","cx","cy","r","_ref6","_ref7","_ref8","logo_animated_SvgLogoAnimated","_ref","svgRef","props","viewBox","ref","ForwardRef","forwardRef","Header","__webpack_require__","p","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","showLogo","window","setTimeout","setState","inherits","createClass","value","logo","className","href","Component","arrow_icon_both_extends","arrow_icon_both_objectWithoutProperties","arrow_icon_both_objectWithoutPropertiesLoose","arrow_icon_both_ref2","arrow_icon_both_SvgArrowIconBoth","arrow_icon_both_ForwardRef","arrow_icon_forward_extends","arrow_icon_forward_objectWithoutProperties","arrow_icon_forward_objectWithoutPropertiesLoose","arrow_icon_forward_ref2","arrow_icon_forward_SvgArrowIconForward","arrow_icon_forward_ForwardRef","arrow_icon_backward_extends","arrow_icon_backward_objectWithoutProperties","arrow_icon_backward_objectWithoutPropertiesLoose","arrow_icon_backward_ref2","arrow_icon_backward_SvgArrowIconBackward","arrow_icon_backward_ForwardRef","chip_gene_extends","chip_gene_objectWithoutProperties","chip_gene_objectWithoutPropertiesLoose","chip_gene_ref2","chip_gene_SvgChipGene","chip_gene_ForwardRef","chip_compound_extends","chip_compound_objectWithoutProperties","chip_compound_objectWithoutPropertiesLoose","chip_compound_ref2","chip_compound_SvgChipCompound","chip_compound_ForwardRef","chip_anatomy_extends","chip_anatomy_objectWithoutProperties","chip_anatomy_objectWithoutPropertiesLoose","chip_anatomy_ref2","x","y","width","height","chip_anatomy_ref3","strokeLinecap","clipPath","chip_anatomy_SvgChipAnatomy","chip_anatomy_ForwardRef","chip_disease_extends","chip_disease_objectWithoutProperties","chip_disease_objectWithoutPropertiesLoose","chip_disease_ref2","chip_disease_SvgChipDisease","chip_disease_ForwardRef","chip_symptom_extends","chip_symptom_objectWithoutProperties","chip_symptom_objectWithoutPropertiesLoose","chip_symptom_ref2","chip_symptom_ref3","chip_symptom_SvgChipSymptom","chip_symptom_ForwardRef","chip_side_effect_extends","chip_side_effect_objectWithoutProperties","chip_side_effect_objectWithoutPropertiesLoose","chip_side_effect_ref2","chip_side_effect_ref3","chip_side_effect_SvgChipSideEffect","chip_side_effect_ForwardRef","chip_biological_process_extends","chip_biological_process_objectWithoutProperties","chip_biological_process_objectWithoutPropertiesLoose","chip_biological_process_ref2","chip_biological_process_ref3","chip_biological_process_SvgChipBiologicalProcess","chip_biological_process_ForwardRef","chip_cellular_component_extends","chip_cellular_component_objectWithoutProperties","chip_cellular_component_objectWithoutPropertiesLoose","chip_cellular_component_ref2","chip_cellular_component_ref3","chip_cellular_component_SvgChipCellularComponent","chip_cellular_component_ForwardRef","chip_molecular_function_extends","chip_molecular_function_objectWithoutProperties","chip_molecular_function_objectWithoutPropertiesLoose","chip_molecular_function_ref2","chip_molecular_function_ref3","strokeLinejoin","chip_molecular_function_ref4","chip_molecular_function_SvgChipMolecularFunction","chip_molecular_function_ForwardRef","chip_pathway_extends","chip_pathway_objectWithoutProperties","chip_pathway_objectWithoutPropertiesLoose","chip_pathway_ref2","chip_pathway_ref3","chip_pathway_ref4","chip_pathway_SvgChipPathway","chip_pathway_ForwardRef","chip_pharmacologic_class_extends","chip_pharmacologic_class_objectWithoutProperties","chip_pharmacologic_class_objectWithoutPropertiesLoose","chip_pharmacologic_class_ref2","chip_pharmacologic_class_ref3","chip_pharmacologic_class_SvgChipPharmacologicClass","chip_pharmacologic_class_ForwardRef","MetanodeChip","icon","type","fillColor","textColor","style","hetioStyles","fill_color","text_color","color","connect","MetaedgeChip","_Component2","direction","abbreviation","metagraph","kind_to_abbrev","data-name","data-abbreviation","pathChips","path","expanded","map","entry","index","element","chips_NodeChip","name","chips_MetaedgeChip","NodeChip","_Component3","background","data-expanded","Tooltip","open","opacity","onMouseEnter","bind","assertThisInitialized","openTooltip","onMouseLeave","event","_this2","hover","left","getBoundingClientRect","document","documentElement","scrollLeft","top","scrollTop","Math","min","innerWidth","text","Fragment","children","React","Children","isValidElement","cloneElement","tooltip_Popup","Popup","ReactDOM","createPortal","Fade_default","in","body","Button","tooltip_Tooltip","tooltipText","onClick","ctrlKey","onCtrlClick","shiftKey","onShiftClick","TextButton","buttons_Button","index_es","Checkbox","checked","faCheck","EyeCheckbox","_Component4","faEye","HighlighterCheckbox","_Component5","faHighlighter","metagraphUrl","hetioDefinitions","nodeSearchServer","metapathSearchServer","pathSearchServer","fetchJson","url","fetch","then","response","json","results","catch","error","console","log","lookupNodeById","searchPaths","sourceId","targetId","metapath","params","URLSearchParams","set","toString","updateSourceTargetNodes","payload","sourceNode","targetNode","updateMetapaths","metapaths","updatePathQueries","pathQueries","NodeSearch","filters","filterString","updateFilters","NodeSearchContext","Provider","node_search_Filters","node_search_SourceNodeSearch","node_search_SwapButton","node_search_TargetNodeSearch","createContext","Filters","toggle","solo","prevProps","metanode_kinds","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","filter","push","active","err","return","order","Gene","Compound","Anatomy","Disease","Symptom","Side Effect","Biological Process","Cellular Component","Molecular Function","Pathway","Pharmacolocic Class","sort","b","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","slice","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","allOthersOff","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","allOn","list","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","join","_this3","buttons","node_search_FilterButton","metanodes","FilterButton","_this4","chips_MetanodeChip","SourceNodeSearch","_this5","onChange","dispatch","node_search_SearchBox","label","node","TargetNodeSearch","_this6","activeElement","blur","SearchBox","_this7","searchResults","inputRef","createRef","formRef","onInput","searchString","_this8","metatypes","data","searchNodes","context","item","_this9","downshift_esm","onInputValueChange","itemToString","selectedItem","getInputProps","getItemProps","getMenuProps","isOpen","highlightedIndex","clearSelection","node_search_TextBox","node_search_Dropdown","contextType","TextBox","_this10","focused","onFocus","onBlur","overlay","showOverlay","metanode","TextField_default","placeholder","classes","root","InputProps","input","faSearch","Dropdown","_this11","Popper_default","anchorEl","current","placement","container","disablePortal","Paper_default","result","MenuItem_default","identifier","SwapButton","_this12","faExchangeAlt","DynamicField","field","tagName","toLowerCase","click","focus","deselectAll","selectAll","getSelection","empty","selectAllChildren","displayValue","fullValue","tabIndex","CollapsibleSection","collapsed","loadState","saveState","localStorage","getItem","setItem","String","data-collapsed","faAngleUp","faAngleDown","NodeResults","node_results_NodeCard","NodeCard","collapsible_section_CollapsibleSection","node_results_TableFull","node_results_TableEmpty","TableFull","showMore","toggleShowMore","fields","extraFields","splice","unshift","concat","firstCol","secondCol","linkUrl","linkText","_arr","_i","str","replace","shortenUrl","properties","objectSpread","common","nodes","hetmechDefinitions","dynamic_field_DynamicField","rows","colSpan","buttons_TextButton","TableEmpty","toExponential","number","parseFloat","mantissa","split","toFixed","exponent","parseInt","toGradient","gradient","g","percent","log10","max","gradientIndex","lowerColor","floor","higherColor","ceil","percentBetween","downloadCsv","filename","fileContent","cell","blob","Blob","URL","createObjectURL","link","appendChild","download","revokeObjectURL","remove","makeFilenameFriendly","string","trim","substring","MetapathResults","metapath_results_TableFull","metapath_results_TableEmpty","allChecked","sortColumn","sortUp","toggleAllChecked","checkAll","uncheckAll","allOthersUnchecked","toggleChecked","soloChecked","changeSort","updateAllChecked","preventDefault","newState","comparison","Number","isNaN","headers","metapath_name","metapath_abbreviation","path_count","p_value","dwpc","dgp_source_degree","dgp_target_degree","dgp_n_dwpcs","dgp_n_nonzero_dwpcs","dgp_nonzero_mean","dgp_nonzero_sd","table","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","row","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","header","makeMetapathsTable","sortedMetapaths","compareMetapaths","compareNumbers","reverse","metapathCount","metapathSelectedCount","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","TableContext","faDownload","faAngleLeft","faAngleRight","metapath_results_TableHead","metapath_results_TableBody","TableHead","extraRow","cols","buttons_Checkbox","metapath_results_TableHeadCell","buttonClass","fieldName","extraCols","TableHeadCell","metapath_results_SortButton","SortButton","faSortUp","faSortDown","faSort","TableBody","metapath_results_TableBodyRow","TableBodyRow","edges","metapath_results_TableBodyCell","fieldClass","metapath_metaedges","backgroundColor","TableBodyCell","PathResults","path_results_TableFull","path_results_TableEmpty","allHighlighted","toggleAllHighlighted","highlightAll","unhighlightAll","allOthersUnhighlighted","toggleHighlighted","soloHighlighted","updateAllHighlighted","pathQuery","paths","thePath","comparePaths","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","highlighted","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_iterator24","path1","path2","JSON","stringify","node_ids","rel_ids","_iteratorNormalCompletion30","_didIteratorError30","_iteratorError30","_step30","_iterator30","_iteratorNormalCompletion31","_didIteratorError31","_iteratorError31","_step31","_iterator31","relationships","_iteratorNormalCompletion32","_didIteratorError32","_iteratorError32","_step32","_iterator32","toConsumableArray","_arr2","_i2","description","textDescription","assemblePath","_arr3","_i3","score","percent_of_DWPC","_arr4","_i4","_iteratorNormalCompletion33","_didIteratorError33","_iteratorError33","_step33","_iterator33","makePathsTable","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","_iteratorNormalCompletion26","_didIteratorError26","_iteratorError26","_step26","_iterator26","sortedPaths","_iteratorNormalCompletion27","_didIteratorError27","_iteratorError27","_step27","_iterator27","chipDescription","pathCount","pathSelectedCount","_iteratorNormalCompletion28","_didIteratorError28","_iteratorError28","_step28","_iterator28","path_results_TableContext","path_results_TableHead","path_results_TableBody","buttons_EyeCheckbox","buttons_HighlighterCheckbox","path_results_TableHeadCell","path_results_SortButton","path_results_TableBodyRow","path_results_TableBodyCell","pathNodes","_iteratorNormalCompletion29","_didIteratorError29","_iteratorError29","_step29","_iterator29","pathEdges","edge","prevNode","directed","source_neo4j_id","neo4j_id","kind","assembledPath","shift","arrow","App","fetchDefinitions","updateNodesFromUrl","updateHistory","updateTitle","updatePaths","addEventListener","onNodeChange","onMetapathChange","promises","Promise","all","location","search","sourceNodeId","get","targetNodeId","path_counts","searchMetapaths","oldParams","newParams","origin","pathname","history","pushState","title","header_Header","node_search_NodeSearch","node_results_NodeResults","metapath_results_MetapathResults","path_results_PathResults","store","createStore","previousState","action","applyMiddleware","thunk","render","react_redux_es","app_App","getElementById"],"mappings":"ypFAAA,SAAAA,IAAmR,OAA9PA,EAAAC,OAAAC,QAAA,SAAAC,GAAgD,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkBS,MAAAC,KAAAR,WAEnR,SAAAS,EAAAP,EAAAQ,GAAqD,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAAI,EAAAQ,GAA0D,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAf,OAAAgB,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAF9MgB,CAAAZ,EAAAQ,GAA0E,GAAAd,OAAAmB,sBAAA,CAAoC,IAAAC,EAAApB,OAAAmB,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0CP,OAAAQ,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAAoB,EAEAC,EAAAC,EAAKC,cAAA,qpEAELC,EAEAH,EAAAC,EAAKC,cAAA,QACLE,GAAA,YACAC,OAAA,UACAC,YAAA,EACAC,KAAA,OACAC,EAAA,sCAGAC,EAEAT,EAAAC,EAAKC,cAAA,QACLE,GAAA,aACAC,OAAA,UACAC,YAAA,IACAC,KAAA,OACAC,EAAA,8FAGAE,EAEAV,EAAAC,EAAKC,cAAA,KACLS,UAAA,oBACGX,EAAAC,EAAKC,cAAA,UACRE,GAAA,WACAQ,GAAA,EACAC,GAAA,EACAC,EAAA,GACAP,KAAA,aAGAQ,EAEAf,EAAAC,EAAKC,cAAA,KACLS,UAAA,oBACGX,EAAAC,EAAKC,cAAA,UACRE,GAAA,WACAQ,GAAA,EACAC,GAAA,EACAC,EAAA,GACAP,KAAA,aAGAS,EAEAhB,EAAAC,EAAKC,cAAA,KACLS,UAAA,oBACGX,EAAAC,EAAKC,cAAA,UACRE,GAAA,WACAQ,GAAA,EACAC,GAAA,EACAC,EAAA,GACAP,KAAA,aAGAU,EAEAjB,EAAAC,EAAKC,cAAA,KACLS,UAAA,oBACGX,EAAAC,EAAKC,cAAA,UACRE,GAAA,WACAQ,GAAA,EACAC,GAAA,EACAC,EAAA,GACAP,KAAA,aAGIW,EAAe,SAAAC,GACnB,IAAAC,EAAAD,EAAAC,OACAC,EAAA/B,EAAA6B,EAAA,YAEA,OAASnB,EAAAC,EAAKC,cAAA,MAAA1B,EAAA,CACd8C,QAAA,cACAC,IAAAH,GACGC,GAAAtB,EAAAI,EAAAM,EAAAC,EAAAK,EAAAC,EAAAC,IAGHO,EAAiBxB,EAAAC,EAAKwB,WAAA,SAAAJ,EAAAE,GACtB,OAASvB,EAAAC,EAAKC,cAAegB,EAAe1C,EAAA,CAC5C4C,OAAAG,GACGF,MCvFUK,GDyFEC,EAAAC,ECzFf,SAAAC,GAEE,SAAAH,IAAc,IAAAI,EAAA,OAAArD,OAAAsD,EAAA,EAAAtD,CAAAY,KAAAqC,IACZI,EAAArD,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAAiD,GAAAvC,KAAAE,QAEK6C,MAAQ,GACbJ,EAAKI,MAAMC,UAAW,EAGtBC,OAAOC,WAAW,kBAAMP,EAAKQ,SAAS,CAAEH,UAAU,KAAS,KAP/CL,EAFhB,OAAArD,OAAA8D,EAAA,EAAA9D,CAAAiD,EAAAG,GAAApD,OAAA+D,EAAA,EAAA/D,CAAAiD,EAAA,EAAA1C,IAAA,SAAAyD,MAAA,WAcI,IAAIC,EAMJ,OAHEA,EADErD,KAAK6C,MAAMC,SACNnC,EAAAC,EAAAC,cAACsB,EAAD,CAAMmB,UAAU,SAEhB3C,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,SAEtB3C,EAAAC,EAAAC,cAAA,cACGwC,EACD1C,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,6BACmB,IACjBF,EAAAC,EAAAC,cAAA,KAAG0C,KAAK,6BAAR,2BA1BVlB,EAAA,CAA4BmB,qHCN5B,SAASC,IAA0Q,OAA7PA,EAAQrE,OAAAC,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAASkE,EAAwBhE,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAf,OAAAgB,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhMqE,CAA6BjE,EAAAQ,GAA+B,GAAAd,OAAAmB,sBAAA,CAAoC,IAAAC,EAAApB,OAAAmB,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0CP,OAAAQ,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAIsE,EAEJjD,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACAE,EAAA,sCAGI0C,EAAgB,SAAA/B,GACpB,IAAAC,EAAAD,EAAAC,OACAC,EAAc0B,EAAwB5B,EAAA,YAEtC,OAASnB,EAAAC,EAAKC,cAAA,MAAsB4C,EAAQ,CAC5CxB,QAAA,cACAC,IAAAH,GACGC,GAAU4B,IAGTE,EAAanD,EAAAC,EAAKwB,WAAA,SAAAJ,EAAAE,GACtB,OAASvB,EAAAC,EAAKC,cAAegD,EAAkBJ,EAAQ,CACvD1B,OAAAG,GACGF,MAEYM,EAAAC,EChCf,SAASwB,IAA0Q,OAA7PA,EAAQ3E,OAAAC,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAASwE,EAAwBtE,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAf,OAAAgB,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhM2E,CAA6BvE,EAAAQ,GAA+B,GAAAd,OAAAmB,sBAAA,CAAoC,IAAAC,EAAApB,OAAAmB,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0CP,OAAAQ,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAI4E,EAEJvD,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACAE,EAAA,gFAGIgD,EAAmB,SAAArC,GACvB,IAAAC,EAAAD,EAAAC,OACAC,EAAcgC,EAAwBlC,EAAA,YAEtC,OAASnB,EAAAC,EAAKC,cAAA,MAAsBkD,EAAQ,CAC5C9B,QAAA,cACAC,IAAAH,GACGC,GAAUkC,IAGTE,EAAazD,EAAAC,EAAKwB,WAAA,SAAAJ,EAAAE,GACtB,OAASvB,EAAAC,EAAKC,cAAesD,EAAqBJ,EAAQ,CAC1DhC,OAAAG,GACGF,MAEYM,EAAAC,EChCf,SAAS8B,IAA0Q,OAA7PA,EAAQjF,OAAAC,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAAS8E,EAAwB5E,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAf,OAAAgB,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhMiF,CAA6B7E,EAAAQ,GAA+B,GAAAd,OAAAmB,sBAAA,CAAoC,IAAAC,EAAApB,OAAAmB,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0CP,OAAAQ,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAIkF,EAEJ7D,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACAE,EAAA,gFAGIsD,EAAoB,SAAA3C,GACxB,IAAAC,EAAAD,EAAAC,OACAC,EAAcsC,EAAwBxC,EAAA,YAEtC,OAASnB,EAAAC,EAAKC,cAAA,MAAsBwD,EAAQ,CAC5CpC,QAAA,cACAC,IAAAH,GACGC,GAAUwC,IAGTE,GAAa/D,EAAAC,EAAKwB,WAAA,SAAAJ,EAAAE,GACtB,OAASvB,EAAAC,EAAKC,cAAe4D,EAAsBJ,EAAQ,CAC3DtC,OAAAG,GACGF,MAEYM,EAAAC,EChCf,SAASoC,KAA0Q,OAA7PA,GAAQvF,OAAAC,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAASoF,GAAwBlF,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAf,OAAAgB,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhMuF,CAA6BnF,EAAAQ,GAA+B,GAAAd,OAAAmB,sBAAA,CAAoC,IAAAC,EAAApB,OAAAmB,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0CP,OAAAQ,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAIwF,GAEJnE,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACAK,UAAA,iDACAH,EAAA,oJAGI4D,GAAW,SAAAjD,GACf,IAAAC,EAAAD,EAAAC,OACAC,EAAc4C,GAAwB9C,EAAA,YAEtC,OAASnB,EAAAC,EAAKC,cAAA,MAAsB8D,GAAQ,CAC5C1C,QAAA,cACAC,IAAAH,GACGC,GAAU8C,KAGTE,GAAarE,EAAAC,EAAKwB,WAAA,SAAAJ,EAAAE,GACtB,OAASvB,EAAAC,EAAKC,cAAekE,GAAaJ,GAAQ,CAClD5C,OAAAG,GACGF,MAEYM,EAAAC,ECjCf,SAAS0C,KAA0Q,OAA7PA,GAAQ7F,OAAAC,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAAS0F,GAAwBxF,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAf,OAAAgB,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhM6F,CAA6BzF,EAAAQ,GAA+B,GAAAd,OAAAmB,sBAAA,CAAoC,IAAAC,EAAApB,OAAAmB,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0CP,OAAAQ,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAI8F,GAEJzE,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACAK,UAAA,iDACAH,EAAA,0GAGIkE,GAAe,SAAAvD,GACnB,IAAAC,EAAAD,EAAAC,OACAC,EAAckD,GAAwBpD,EAAA,YAEtC,OAASnB,EAAAC,EAAKC,cAAA,MAAsBoE,GAAQ,CAC5ChD,QAAA,cACAC,IAAAH,GACGC,GAAUoD,KAGTE,GAAa3E,EAAAC,EAAKwB,WAAA,SAAAJ,EAAAE,GACtB,OAASvB,EAAAC,EAAKC,cAAewE,GAAiBJ,GAAQ,CACtDlD,OAAAG,GACGF,MAEYM,EAAAC,ECjCf,SAASgD,KAA0Q,OAA7PA,GAAQnG,OAAAC,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAASgG,GAAwB9F,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAf,OAAAgB,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhMmG,CAA6B/F,EAAAQ,GAA+B,GAAAd,OAAAmB,sBAAA,CAAoC,IAAAC,EAAApB,OAAAmB,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0CP,OAAAQ,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAIoG,GAEJ/E,EAAAC,EAAKC,cAAA,YACLE,GAAA,QACGJ,EAAAC,EAAKC,cAAA,QACR8E,EAAA,EACAC,EAAA,EACAC,MAAA,IACAC,OAAA,OAGIC,GAEJpF,EAAAC,EAAKC,cAAA,SAA0BF,EAAAC,EAAKC,cAAA,QACpCK,KAAA,OACAF,OAAA,eACAC,YAAA,GACA+E,cAAA,SACA1E,UAAA,iDACA2E,SAAA,aACA9E,EAAA,8FAGI+E,GAAc,SAAApE,GAClB,IAAAC,EAAAD,EAAAC,OACAC,EAAcwD,GAAwB1D,EAAA,YAEtC,OAASnB,EAAAC,EAAKC,cAAA,MAAsB0E,GAAQ,CAC5CtD,QAAA,cACAC,IAAAH,GACGC,GAAU0D,GAAOK,KAGhBI,GAAaxF,EAAAC,EAAKwB,WAAA,SAAAJ,EAAAE,GACtB,OAASvB,EAAAC,EAAKC,cAAeqF,GAAgBX,GAAQ,CACrDxD,OAAAG,GACGF,MAEYM,EAAAC,EC9Cf,SAAS6D,KAA0Q,OAA7PA,GAAQhH,OAAAC,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAAS6G,GAAwB3G,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAf,OAAAgB,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhMgH,CAA6B5G,EAAAQ,GAA+B,GAAAd,OAAAmB,sBAAA,CAAoC,IAAAC,EAAApB,OAAAmB,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0CP,OAAAQ,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAIiH,GAEJ5F,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACAK,UAAA,iDACAH,EAAA,sFAGIqF,GAAc,SAAA1E,GAClB,IAAAC,EAAAD,EAAAC,OACAC,EAAcqE,GAAwBvE,EAAA,YAEtC,OAASnB,EAAAC,EAAKC,cAAA,MAAsBuF,GAAQ,CAC5CnE,QAAA,cACAC,IAAAH,GACGC,GAAUuE,KAGTE,GAAa9F,EAAAC,EAAKwB,WAAA,SAAAJ,EAAAE,GACtB,OAASvB,EAAAC,EAAKC,cAAe2F,GAAgBJ,GAAQ,CACrDrE,OAAAG,GACGF,MAEYM,EAAAC,ECjCf,SAASmE,KAA0Q,OAA7PA,GAAQtH,OAAAC,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAASmH,GAAwBjH,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAf,OAAAgB,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhMsH,CAA6BlH,EAAAQ,GAA+B,GAAAd,OAAAmB,sBAAA,CAAoC,IAAAC,EAAApB,OAAAmB,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0CP,OAAAQ,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAIuH,GAEJlG,EAAAC,EAAKC,cAAA,YACLE,GAAA,QACGJ,EAAAC,EAAKC,cAAA,QACR8E,EAAA,EACAC,EAAA,EACAC,MAAA,IACAC,OAAA,OAGIgB,GAEJnG,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACAK,UAAA,iDACA2E,SAAA,aACA9E,EAAA,wLAGI4F,GAAc,SAAAjF,GAClB,IAAAC,EAAAD,EAAAC,OACAC,EAAc2E,GAAwB7E,EAAA,YAEtC,OAASnB,EAAAC,EAAKC,cAAA,MAAsB6F,GAAQ,CAC5CzE,QAAA,cACAC,IAAAH,GACGC,GAAU6E,GAAOC,KAGhBE,GAAarG,EAAAC,EAAKwB,WAAA,SAAAJ,EAAAE,GACtB,OAASvB,EAAAC,EAAKC,cAAekG,GAAgBL,GAAQ,CACrD3E,OAAAG,GACGF,MAEYM,EAAAC,EC7Cf,SAAS0E,KAA0Q,OAA7PA,GAAQ7H,OAAAC,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAAS0H,GAAwBxH,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAf,OAAAgB,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhM6H,CAA6BzH,EAAAQ,GAA+B,GAAAd,OAAAmB,sBAAA,CAAoC,IAAAC,EAAApB,OAAAmB,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0CP,OAAAQ,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAI8H,GAEJzG,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACAK,UAAA,kEACAH,EAAA,wLAGIkG,GAEJ1G,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACA+E,cAAA,SACA1E,UAAA,iEACAH,EAAA,8FAGImG,GAAiB,SAAAxF,GACrB,IAAAC,EAAAD,EAAAC,OACAC,EAAckF,GAAwBpF,EAAA,YAEtC,OAASnB,EAAAC,EAAKC,cAAA,MAAsBoG,GAAQ,CAC5ChF,QAAA,cACAC,IAAAH,GACGC,GAAUoF,GAAOC,KAGhBE,GAAa5G,EAAAC,EAAKwB,WAAA,SAAAJ,EAAAE,GACtB,OAASvB,EAAAC,EAAKC,cAAeyG,GAAmBL,GAAQ,CACxDlF,OAAAG,GACGF,MAEYM,EAAAC,EC5Cf,SAASiF,KAA0Q,OAA7PA,GAAQpI,OAAAC,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAASiI,GAAwB/H,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAf,OAAAgB,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhMoI,CAA6BhI,EAAAQ,GAA+B,GAAAd,OAAAmB,sBAAA,CAAoC,IAAAC,EAAApB,OAAAmB,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0CP,OAAAQ,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAIqI,GAEJhH,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACA+E,cAAA,SACA1E,UAAA,kEACAH,EAAA,4IAGIyG,GAEJjH,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACA+E,cAAA,SACA1E,UAAA,iEACAH,EAAA,4FAGI0G,GAAwB,SAAA/F,GAC5B,IAAAC,EAAAD,EAAAC,OACAC,EAAcyF,GAAwB3F,EAAA,YAEtC,OAASnB,EAAAC,EAAKC,cAAA,MAAsB2G,GAAQ,CAC5CvF,QAAA,cACAC,IAAAH,GACGC,GAAU2F,GAAOC,KAGhBE,GAAanH,EAAAC,EAAKwB,WAAA,SAAAJ,EAAAE,GACtB,OAASvB,EAAAC,EAAKC,cAAegH,GAA0BL,GAAQ,CAC/DzF,OAAAG,GACGF,MAEYM,EAAAC,EC7Cf,SAASwF,KAA0Q,OAA7PA,GAAQ3I,OAAAC,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAASwI,GAAwBtI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAf,OAAAgB,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhM2I,CAA6BvI,EAAAQ,GAA+B,GAAAd,OAAAmB,sBAAA,CAAoC,IAAAC,EAAApB,OAAAmB,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0CP,OAAAQ,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAI4I,GAEJvH,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACAK,UAAA,kEACAH,EAAA,0GAGIgH,GAEJxH,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACAK,UAAA,iEACAH,EAAA,0GAGIiH,GAAwB,SAAAtG,GAC5B,IAAAC,EAAAD,EAAAC,OACAC,EAAcgG,GAAwBlG,EAAA,YAEtC,OAASnB,EAAAC,EAAKC,cAAA,MAAsBkH,GAAQ,CAC5C9F,QAAA,cACAC,IAAAH,GACGC,GAAUkG,GAAOC,KAGhBE,GAAa1H,EAAAC,EAAKwB,WAAA,SAAAJ,EAAAE,GACtB,OAASvB,EAAAC,EAAKC,cAAeuH,GAA0BL,GAAQ,CAC/DhG,OAAAG,GACGF,MAEYM,EAAAC,EC3Cf,SAAS+F,KAA0Q,OAA7PA,GAAQlJ,OAAAC,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAAS+I,GAAwB7I,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAf,OAAAgB,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhMkJ,CAA6B9I,EAAAQ,GAA+B,GAAAd,OAAAmB,sBAAA,CAAoC,IAAAC,EAAApB,OAAAmB,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0CP,OAAAQ,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAImJ,GAEJ9H,EAAAC,EAAKC,cAAA,YACLE,GAAA,QACGJ,EAAAC,EAAKC,cAAA,QACR8E,EAAA,EACAC,EAAA,EACAC,MAAA,IACAC,OAAA,OAGI4C,GAEJ/H,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACA+E,cAAA,SACA2C,eAAA,QACArH,UAAA,kEACA2E,SAAA,aACA9E,EAAA,kFAGIyH,GAEJjI,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACA+E,cAAA,SACA1E,UAAA,iEACAH,EAAA,gFAGI0H,GAAwB,SAAA/G,GAC5B,IAAAC,EAAAD,EAAAC,OACAC,EAAcuG,GAAwBzG,EAAA,YAEtC,OAASnB,EAAAC,EAAKC,cAAA,MAAsByH,GAAQ,CAC5CrG,QAAA,cACAC,IAAAH,GACGC,GAAUyG,GAAOC,GAAOE,KAGvBE,GAAanI,EAAAC,EAAKwB,WAAA,SAAAJ,EAAAE,GACtB,OAASvB,EAAAC,EAAKC,cAAegI,GAA0BP,GAAQ,CAC/DvG,OAAAG,GACGF,MAEYM,EAAAC,EC1Df,SAASwG,KAA0Q,OAA7PA,GAAQ3J,OAAAC,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAASwJ,GAAwBtJ,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAf,OAAAgB,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhM2J,CAA6BvJ,EAAAQ,GAA+B,GAAAd,OAAAmB,sBAAA,CAAoC,IAAAC,EAAApB,OAAAmB,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0CP,OAAAQ,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAI4J,GAEJvI,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACA+E,cAAA,SACA1E,UAAA,kEACAH,EAAA,kFAGIgI,GAEJxI,EAAAC,EAAKC,cAAA,YACLE,GAAA,QACGJ,EAAAC,EAAKC,cAAA,QACR8E,EAAA,EACAC,EAAA,EACAC,MAAA,IACAC,OAAA,OAGIsD,GAEJzI,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACA+E,cAAA,SACA2C,eAAA,QACArH,UAAA,iEACA2E,SAAA,aACA9E,EAAA,oFAGIkI,GAAc,SAAAvH,GAClB,IAAAC,EAAAD,EAAAC,OACAC,EAAcgH,GAAwBlH,EAAA,YAEtC,OAASnB,EAAAC,EAAKC,cAAA,MAAsBkI,GAAQ,CAC5C9G,QAAA,cACAC,IAAAH,GACGC,GAAUkH,GAAOC,GAAOC,KAGvBE,GAAa3I,EAAAC,EAAKwB,WAAA,SAAAJ,EAAAE,GACtB,OAASvB,EAAAC,EAAKC,cAAewI,GAAgBN,GAAQ,CACrDhH,OAAAG,GACGF,MAEYM,EAAAC,EC1Df,SAASgH,KAA0Q,OAA7PA,GAAQnK,OAAAC,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAASgK,GAAwB9J,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAf,OAAAgB,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhMmK,CAA6B/J,EAAAQ,GAA+B,GAAAd,OAAAmB,sBAAA,CAAoC,IAAAC,EAAApB,OAAAmB,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0CP,OAAAQ,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAIoK,GAEJ/I,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACA+E,cAAA,SACA1E,UAAA,kEACAH,EAAA,4FAGIwI,GAEJhJ,EAAAC,EAAKC,cAAA,QACLK,KAAA,OACAF,OAAA,eACAC,YAAA,GACAK,UAAA,iEACAH,EAAA,0GAGIyI,GAAyB,SAAA9H,GAC7B,IAAAC,EAAAD,EAAAC,OACAC,EAAcwH,GAAwB1H,EAAA,YAEtC,OAASnB,EAAAC,EAAKC,cAAA,MAAsB0I,GAAQ,CAC5CtH,QAAA,cACAC,IAAAH,GACGC,GAAU0H,GAAOC,KAGhBE,GAAalJ,EAAAC,EAAKwB,WAAA,SAAAJ,EAAAE,GACtB,OAASvB,EAAAC,EAAKC,cAAe+I,GAA2BL,GAAQ,CAChExH,OAAAG,GACGF,MCjBU8H,IDmBExH,EAAAC,ECnBf,SAAAC,GAAA,SAAAsH,IAAA,OAAA1K,OAAAsD,EAAA,EAAAtD,CAAAY,KAAA8J,GAAA1K,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAA0K,GAAA/J,MAAAC,KAAAR,YAAA,OAAAJ,OAAA8D,EAAA,EAAA9D,CAAA0K,EAAAtH,GAAApD,OAAA+D,EAAA,EAAA/D,CAAA0K,EAAA,EAAAnK,IAAA,SAAAyD,MAAA,WAII,IAAI2G,EACJ,OAAQ/J,KAAKgC,MAAMgI,MACjB,IAAK,OACHD,EAAOpJ,EAAAC,EAAAC,cAACmE,GAAD,MACP,MACF,IAAK,WACH+E,EAAOpJ,EAAAC,EAAAC,cAACyE,GAAD,MACP,MACF,IAAK,UACHyE,EAAOpJ,EAAAC,EAAAC,cAACsF,GAAD,MACP,MACF,IAAK,UACH4D,EAAOpJ,EAAAC,EAAAC,cAAC4F,GAAD,MACP,MACF,IAAK,UACHsD,EAAOpJ,EAAAC,EAAAC,cAACmG,GAAD,MACP,MACF,IAAK,cACH+C,EAAOpJ,EAAAC,EAAAC,cAAC0G,GAAD,MACP,MACF,IAAK,qBACHwC,EAAOpJ,EAAAC,EAAAC,cAACiH,GAAD,MACP,MACF,IAAK,qBACHiC,EAAOpJ,EAAAC,EAAAC,cAACwH,GAAD,MACP,MACF,IAAK,qBACH0B,EAAOpJ,EAAAC,EAAAC,cAACiI,GAAD,MACP,MACF,IAAK,UACHiB,EAAOpJ,EAAAC,EAAAC,cAACyI,GAAD,MACP,MACF,IAAK,sBACHS,EAAOpJ,EAAAC,EAAAC,cAACgJ,GAAD,MAMX,IAAII,EAAY,UACZC,EAAY,UACVC,EAAQnK,KAAKgC,MAAMoI,YAAYpK,KAAKgC,MAAMgI,MAMhD,OALIG,GAASA,EAAME,aACjBJ,EAAYE,EAAME,YAChBF,GAASA,EAAMG,aACjBJ,EAAYC,EAAMG,YAGlB3J,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,gBAAgB6G,MAAO,CAAEI,MAAOL,IAC7CvJ,EAAAC,EAAAC,cAAA,OAAKoB,QAAQ,eACXtB,EAAAC,EAAAC,cAAA,UAAQU,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKP,KAAM+I,KAEtCF,OAxDTD,EAAA,CAAkCtG,cA8DlCsG,GAAeU,YAAQ,SAAC3H,GAAD,MAAY,CACjCuH,YAAavH,EAAMuH,cADNI,CAEXV,IAIG,IAAMW,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAArL,OAAAsD,EAAA,EAAAtD,CAAAY,KAAAyK,GAAArL,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAAqL,GAAA1K,MAAAC,KAAAR,YAAA,OAAAJ,OAAA8D,EAAA,EAAA9D,CAAAqL,EAAAC,GAAAtL,OAAA+D,EAAA,EAAA/D,CAAAqL,EAAA,EAAA9K,IAAA,SAAAyD,MAAA,WAII,IAAI2G,EACJ,OAAQ/J,KAAKgC,MAAM2I,WACjB,IAAK,WACHZ,EAAOpJ,EAAAC,EAAAC,cAAC6D,GAAD,MACP,MACF,IAAK,UACHqF,EAAOpJ,EAAAC,EAAAC,cAACuD,EAAD,MACP,MACF,QACE2F,EAAOpJ,EAAAC,EAAAC,cAACiD,EAAD,MAIX,IAAI8G,EAAe,GAInB,OAHI5K,KAAKgC,MAAM6I,UAAUC,iBACvBF,EAAe5K,KAAKgC,MAAM6I,UAAUC,eAAe9K,KAAKgC,MAAMgI,OAG9DrJ,EAAAC,EAAAC,cAAA,OACEyC,UAAU,gBACVyH,YAAW/K,KAAKgC,MAAMgI,KACtBgB,oBAAmBJ,GAElBb,OA3BTU,EAAA,CAAkCjH,aAqD3B,SAASyH,GAAUC,EAAMC,GAC9B,OAAOD,EAAKE,IAAI,SAACC,EAAOC,GACtB,MAAsB,SAAlBD,EAAME,QAEN5K,EAAAC,EAAAC,cAAC2K,GAAD,CACE7L,IAAK2L,EACLtB,KAAMqB,EAAMrB,KACZyB,KAAMJ,EAAMI,KACZN,SAAUA,IAIM,SAAlBE,EAAME,QAEN5K,EAAAC,EAAAC,cAAC6K,GAAD,CACE/L,IAAK2L,EACLtB,KAAMqB,EAAMrB,KACZW,UAAWU,EAAMV,YAIhB,KAzCXF,GAAeD,YAAQ,SAAC3H,GAAD,MAAY,CACjCgI,UAAWhI,EAAMgI,YADJL,CAEXC,IA4CG,IAAMkB,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAvM,OAAAsD,EAAA,EAAAtD,CAAAY,KAAA2L,GAAAvM,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAAuM,GAAA5L,MAAAC,KAAAR,YAAA,OAAAJ,OAAA8D,EAAA,EAAA9D,CAAAuM,EAAAC,GAAAxM,OAAA+D,EAAA,EAAA/D,CAAAuM,EAAA,EAAAhM,IAAA,SAAAyD,MAAA,WAGI,IAAI6G,EAAY,UACZC,EAAY,UACVC,EAAQnK,KAAKgC,MAAMoI,YAAYpK,KAAKgC,MAAMgI,MAMhD,OALIG,GAASA,EAAME,aACjBJ,EAAYE,EAAME,YAChBF,GAASA,EAAMG,aACjBJ,EAAYC,EAAMG,YAGlB3J,EAAAC,EAAAC,cAAA,QACEyC,UAAU,YACV6G,MAAO,CAAE0B,WAAY5B,EAAWM,MAAOL,GACvC4B,gBAAe9L,KAAKgC,MAAMmJ,UAEzBnL,KAAKgC,MAAMyJ,UAjBpBE,EAAA,CAA8BnI,aAuB9BmI,GAAWnB,YAAQ,SAAC3H,GAAD,MAAY,CAC7BuH,YAAavH,EAAMuH,cADVI,CAEPmB,4BC1LSI,WAAb,SAAAvJ,GAEE,SAAAuJ,IAAc,IAAAtJ,EAAA,OAAArD,OAAAsD,EAAA,EAAAtD,CAAAY,KAAA+L,IACZtJ,EAAArD,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAA2M,GAAAjM,KAAAE,QAEK6C,MAAQ,GACbJ,EAAKI,MAAMmJ,MAAO,EAClBvJ,EAAKI,MAAM8C,EAAI,EACflD,EAAKI,MAAM+C,EAAI,EACfnD,EAAKI,MAAMoJ,QAAU,EAErBxJ,EAAKyJ,aAAezJ,EAAKyJ,aAAaC,KAAlB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACpBA,EAAK4J,YAAc5J,EAAK4J,YAAYF,KAAjB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACnBA,EAAK6J,aAAe7J,EAAK6J,aAAaH,KAAlB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KAXRA,EAFhB,OAAArD,OAAA8D,EAAA,EAAA9D,CAAA2M,EAAAvJ,GAAApD,OAAA+D,EAAA,EAAA/D,CAAA2M,EAAA,EAAApM,IAAA,eAAAyD,MAAA,SAiBemJ,GAAO,IAAAC,EAAAxM,KACZV,EAASiN,EAAMjN,OAErByD,OAAOC,WAAW,kBAAMwJ,EAAKH,YAAY/M,IAvB/B,KAyBVU,KAAKiD,SAAS,CAAEwJ,OAAO,MAtB3B,CAAA9M,IAAA,cAAAyD,MAAA,SA0Bc9D,GAGV,GAAKU,KAAK6C,MAAM4J,OAAUnN,EAA1B,CAIA,IAAMoN,EACJpN,EAAOqN,wBAAwBD,KAAOE,SAASC,gBAAgBC,WAC3DC,EACJzN,EAAOqN,wBAAwBI,IAAMH,SAASC,gBAAgBG,UAG1DrH,EAAIsH,KAAKC,IAAIR,EAAM3J,OAAOoK,WAAa,KACvCvH,EAAImH,EAGV/M,KAAKiD,SAAS,CAAE+I,MAAM,EAAMrG,EAAGA,EAAGC,EAAGA,OA3CzC,CAAAjG,IAAA,eAAAyD,MAAA,WAgDIpD,KAAKiD,SAAS,CAAEwJ,OAAO,EAAOT,MAAM,MAhDxC,CAAArM,IAAA,SAAAyD,MAAA,WAsDI,IAAKpD,KAAKgC,MAAMoL,KACd,OAAOzM,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyM,SAAA,KAAGrN,KAAKgC,MAAMsL,UAGvB,IAAMtL,EAAQ,CACZkK,aAAclM,KAAKkM,aACnBI,aAActM,KAAKsM,cAIfgB,EAAWC,IAAMC,SAASpC,IAAIpL,KAAKgC,MAAMsL,SAAU,SAAC/B,GAExD,OAAIgC,IAAME,eAAelC,GAChBgC,IAAMG,aAAanC,EAASvJ,GAET,kBAAZuJ,EACP5K,EAAAC,EAAAC,cAAA,OAAUmB,EAAQuJ,GAGlBA,IAGX,OACE5K,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyM,SAAA,KACGC,EACAtN,KAAK6C,MAAMmJ,MAAQhM,KAAKgC,MAAMoL,MAC7BzM,EAAAC,EAAAC,cAAC8M,GAAD,CACEP,KAAMpN,KAAKgC,MAAMoL,KACjBpB,KAAMhM,KAAK6C,MAAMmJ,KACjBrG,EAAG3F,KAAK6C,MAAM8C,EACdC,EAAG5F,KAAK6C,MAAM+C,SApF1BmG,EAAA,CAA6BvI,cA+FvBoK,oLAEF,OAAOC,IAASC,aACdnN,EAAAC,EAAAC,cAACkN,GAAAnN,EAAD,CAAMoN,GAAIhO,KAAKgC,MAAMgK,MACnBrL,EAAAC,EAAAC,cAAA,OACEyC,UAAU,UACV6G,MAAO,CACLuC,KAAM1M,KAAKgC,MAAM2D,EAAI,KACrBoH,IAAK/M,KAAKgC,MAAM4D,EAAI,OAGrB5F,KAAKgC,MAAMoL,OAGhBR,SAASqB,aAdKzK,aC/FP0K,WAAb,SAAA1L,GAAA,SAAA0L,IAAA,OAAA9O,OAAAsD,EAAA,EAAAtD,CAAAY,KAAAkO,GAAA9O,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAA8O,GAAAnO,MAAAC,KAAAR,YAAA,OAAAJ,OAAA8D,EAAA,EAAA9D,CAAA8O,EAAA1L,GAAApD,OAAA+D,EAAA,EAAA/D,CAAA8O,EAAA,EAAAvO,IAAA,SAAAyD,MAAA,WAEW,IAAAX,EAAAzC,KACP,OACEW,EAAAC,EAAAC,cAACsN,GAAD,CAASf,KAAMpN,KAAKgC,MAAMoM,aACxBzN,EAAAC,EAAAC,cAAA,UACEyC,UAAWtD,KAAKgC,MAAMsB,UACtB+K,QAAS,SAAC9B,GACJA,EAAM+B,QACJ7L,EAAKT,MAAMuM,aACb9L,EAAKT,MAAMuM,cACJhC,EAAMiC,SACX/L,EAAKT,MAAMyM,cACbhM,EAAKT,MAAMyM,eACJhM,EAAKT,MAAMqM,SACpB5L,EAAKT,MAAMqM,YAGdrO,KAAKgC,MAAMsL,eAlBtBY,EAAA,CAA4B1K,cA2BfkL,GAAb,SAAAhE,GAAA,SAAAgE,IAAA,OAAAtP,OAAAsD,EAAA,EAAAtD,CAAAY,KAAA0O,GAAAtP,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAAsP,GAAA3O,MAAAC,KAAAR,YAAA,OAAAJ,OAAA8D,EAAA,EAAA9D,CAAAsP,EAAAhE,GAAAtL,OAAA+D,EAAA,EAAA/D,CAAAsP,EAAA,EAAA/O,IAAA,SAAAyD,MAAA,WAGI,OACEzC,EAAAC,EAAAC,cAAC8N,GAAD,CACErL,UAAU,oBACV8K,YAAapO,KAAKgC,MAAMoM,YACxBC,QAASrO,KAAKgC,MAAMqM,QACpBE,YAAavO,KAAKgC,MAAMuM,aAEvBvO,KAAKgC,MAAMoL,KACZzM,EAAAC,EAAAC,cAAC+N,EAAA,EAAD,CAAiB7E,KAAM/J,KAAKgC,MAAM+H,KAAMzG,UAAU,0BAX1DoL,EAAA,CAAgClL,aAkBnBqL,GAAb,SAAAjD,GAAA,SAAAiD,IAAA,OAAAzP,OAAAsD,EAAA,EAAAtD,CAAAY,KAAA6O,GAAAzP,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAAyP,GAAA9O,MAAAC,KAAAR,YAAA,OAAAJ,OAAA8D,EAAA,EAAA9D,CAAAyP,EAAAjD,GAAAxM,OAAA+D,EAAA,EAAA/D,CAAAyP,EAAA,EAAAlP,IAAA,SAAAyD,MAAA,WAGI,OACEzC,EAAAC,EAAAC,cAAC8N,GAAD,CACErL,UAAU,kBACV8K,YAAapO,KAAKgC,MAAMoM,YACxBC,QAASrO,KAAKgC,MAAMqM,QACpBE,YAAavO,KAAKgC,MAAMuM,aAEvBvO,KAAKgC,MAAM8M,SACVnO,EAAAC,EAAAC,cAAC+N,EAAA,EAAD,CAAiBtL,UAAU,QAAQyG,KAAMgF,WAXnDF,EAAA,CAA8BrL,aAmBjBwL,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA5P,OAAAsD,EAAA,EAAAtD,CAAAY,KAAAgP,GAAA5P,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAA4P,GAAAjP,MAAAC,KAAAR,YAAA,OAAAJ,OAAA8D,EAAA,EAAA9D,CAAA4P,EAAAC,GAAA7P,OAAA+D,EAAA,EAAA/D,CAAA4P,EAAA,EAAArP,IAAA,SAAAyD,MAAA,WAGI,OACEzC,EAAAC,EAAAC,cAAC8N,GAAD,CACErL,UAAU,kBACV8K,YAAapO,KAAKgC,MAAMoM,YACxBC,QAASrO,KAAKgC,MAAMqM,QACpBE,YAAavO,KAAKgC,MAAMuM,aAEvBvO,KAAKgC,MAAM8M,SACVnO,EAAAC,EAAAC,cAAC+N,EAAA,EAAD,CAAiBtL,UAAU,QAAQyG,KAAMmF,WAXnDF,EAAA,CAAiCxL,aAmBpB2L,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA/P,OAAAsD,EAAA,EAAAtD,CAAAY,KAAAmP,GAAA/P,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAA+P,GAAApP,MAAAC,KAAAR,YAAA,OAAAJ,OAAA8D,EAAA,EAAA9D,CAAA+P,EAAAC,GAAAhQ,OAAA+D,EAAA,EAAA/D,CAAA+P,EAAA,EAAAxP,IAAA,SAAAyD,MAAA,WAGI,OACEzC,EAAAC,EAAAC,cAAC8N,GAAD,CACErL,UAAU,kBACV8K,YAAapO,KAAKgC,MAAMoM,YACxBC,QAASrO,KAAKgC,MAAMqM,QACpBE,YAAavO,KAAKgC,MAAMuM,aAEvBvO,KAAKgC,MAAM8M,SACVnO,EAAAC,EAAAC,cAAC+N,EAAA,EAAD,CAAiBtL,UAAU,QAAQyG,KAAMsF,WAXnDF,EAAA,CAAyC3L,uBC3FnC8L,GACJ,qIAEIC,GACJ,sHAEInF,GACJ,iHAEIoF,GAAmB,sCAEnBC,GAAuB,gDAEvBC,GAAmB,4CAGlB,SAASC,GAAUC,GACxB,OAAOC,MAAMD,GACVE,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GACL,OAAOA,GAAW,KAEnBC,MAAM,SAACC,GAEN,OADAC,QAAQC,IAAIF,GACL,KAyBN,SAASG,GAAevP,GAC7B,OAAKA,EAGE4O,GADOH,GAAmBzO,GADxB,KA+BJ,SAASwP,GAAYC,EAAUC,EAAUC,GAC9C,IAAMC,EAAS,IAAIC,gBAKnB,OAJAD,EAAOE,IAAI,SAAUL,GAAY,IACjCG,EAAOE,IAAI,SAAUJ,GAAY,IACjCE,EAAOE,IAAI,WAAYH,GAAY,IAE5Bf,GADOD,GAAmB,IAAMiB,EAAOG,YACtBhB,KAAK,SAACG,GAC5B,OAAOA,ICvEJ,SAASc,GAATrQ,GACL,MAAO,CACLsJ,KAAM,6BACNgH,QAAS,CAAEC,WAHqDvQ,EAA1BuQ,WAGHC,WAH6BxQ,EAAdwQ,aAe/C,SAASC,GAATrQ,GACL,MAAO,CACLkJ,KAAM,mBACNgH,QAAS,CAAEI,UAHgCtQ,EAAbsQ,YAQ3B,SAASC,GAATjQ,GACL,MAAO,CACL4I,KAAM,sBACNgH,QAAS,CAAEM,YAHoClQ,EAAfkQ,yBCtBvBC,GAAb,SAAA/O,GAEE,SAAA+O,IAAc,IAAA9O,EAAA,OAAArD,OAAAsD,EAAA,EAAAtD,CAAAY,KAAAuR,IACZ9O,EAAArD,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAAmS,GAAAzR,KAAAE,QAEK6C,MAAQ,GACbJ,EAAKI,MAAM2O,QAAU,GACrB/O,EAAKI,MAAM4O,aAAe,GAE1BhP,EAAKiP,cAAgBjP,EAAKiP,cAAcvF,KAAnB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KAPTA,EAFhB,OAAArD,OAAA8D,EAAA,EAAA9D,CAAAmS,EAAA/O,GAAApD,OAAA+D,EAAA,EAAA/D,CAAAmS,EAAA,EAAA5R,IAAA,gBAAAyD,MAAA,SAagBoO,EAASC,GACrBzR,KAAKiD,SAAS,CAAEuO,QAASA,EAASC,aAAcA,MAdpD,CAAA9R,IAAA,SAAAyD,MAAA,WAmBI,OACEzC,EAAAC,EAAAC,cAAA,WAASyC,UAAU,UACjB3C,EAAAC,EAAAC,cAAC8Q,GAAkBC,SAAnB,CACExO,MAAO,CACLqO,aAAczR,KAAK6C,MAAM4O,eAG3B9Q,EAAAC,EAAAC,cAACgR,GAAD,CACEL,QAASxR,KAAK6C,MAAM2O,QACpBC,aAAczR,KAAK6C,MAAM4O,aACzBC,cAAe1R,KAAK0R,gBAEtB/Q,EAAAC,EAAAC,cAACiR,GAAD,MACAnR,EAAAC,EAAAC,cAACkR,GAAD,MACApR,EAAAC,EAAAC,cAACmR,GAAD,YAjCVT,EAAA,CAAgC/N,aAwC1BmO,GAAoBpE,IAAM0E,cAAc,IAIxCC,eAEJ,SAAAA,EAAYlQ,GAAO,IAAAwK,EAAA,OAAApN,OAAAsD,EAAA,EAAAtD,CAAAY,KAAAkS,IACjB1F,EAAApN,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAA8S,GAAApS,KAAAE,KAAMgC,KAEDmQ,OAAS3F,EAAK2F,OAAOhG,KAAZ/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAoN,KACdA,EAAK4F,KAAO5F,EAAK4F,KAAKjG,KAAV/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAoN,KAJKA,kFAOA6F,GACjB,GACEA,EAAUxH,UAAUyH,iBAAmBtS,KAAKgC,MAAM6I,UAAUyH,eAD9D,CAMA,IAAId,EAAU,GAPce,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAU5B,QAAAC,EAAAC,EAAqB5S,KAAKgC,MAAM6I,UAAUyH,eAA1CO,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,OAAWU,EAAXN,EAAAvP,MACEoO,EAAQ0B,KAAK,CAAEzH,KAAMwH,EAAQE,QAAQ,KAXX,MAAAC,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,GAc5B,IAAMa,EAAQ,CACZC,KAAQ,EACRC,SAAY,EACZC,QAAW,EACXC,QAAW,EACXC,QAAW,EACXC,cAAe,EACfC,qBAAsB,EACtBC,qBAAsB,EACtBC,qBAAsB,EACtBC,QAAW,GACXC,sBAAuB,IAGzBzC,EAAUA,EAAQ0C,KAAK,SAACtT,EAAGuT,GACzB,OAAIb,EAAM1S,EAAE6K,OAAS6H,EAAMa,EAAE1I,MACpB6H,EAAM1S,EAAE6K,MAAQ6H,EAAMa,EAAE1I,MACxB6H,EAAM1S,EAAE6K,OACP,EACD6H,EAAMa,EAAE1I,MACR,EAEA0I,EAAE1I,KAAO7K,EAAE6K,OAGtBzL,KAAKgC,MAAM0P,cAAcF,EA/BJ,mCAmCjBA,GAAS,IAAA4C,GAAA,EAAAC,GAAA,EAAAC,OAAA5B,EAAA,IACb,QAAA6B,EAAAC,EAAqBhD,EAArBqB,OAAAC,cAAAsB,GAAAG,EAAAC,EAAAzB,QAAAC,MAAAoB,GAAA,EAA8B,CAC5B,IAD4BG,EAAAnR,MAChB+P,OACV,OAAO,GAHE,MAAAC,GAAAiB,GAAA,EAAAC,EAAAlB,EAAA,YAAAgB,GAAA,MAAAI,EAAAnB,QAAAmB,EAAAnB,SAAA,WAAAgB,EAAA,MAAAC,GAMb,OAAO,uCAII9C,EAASxH,GAAM,IAAAyK,GAAA,EAAAC,GAAA,EAAAC,OAAAjC,EAAA,IAC1B,QAAAkC,EAAAC,EAAqBrD,EAArBqB,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,GAAA,EAA8B,KAAnBxB,EAAmB2B,EAAAxR,MAC5B,GAAI4G,IAASiJ,EAAOxH,MAAQwH,EAAOE,OACjC,OAAO,GAHe,MAAAC,GAAAsB,GAAA,EAAAC,EAAAvB,EAAA,YAAAqB,GAAA,MAAAI,EAAAxB,QAAAwB,EAAAxB,SAAA,WAAAqB,EAAA,MAAAC,GAM1B,OAAO,iCAIF3K,GACL,IAAMwH,EAAUxR,KAAKgC,MAAMwP,QAAQsD,QADxBC,GAAA,EAAAC,GAAA,EAAAC,OAAAvC,EAAA,IAGX,QAAAwC,EAAAC,EAAqB3D,EAArBqB,OAAAC,cAAAiC,GAAAG,EAAAC,EAAApC,QAAAC,MAAA+B,GAAA,EAA8B,KAAnB9B,EAAmBiC,EAAA9R,MACxB6P,EAAOxH,OAASzB,IAClBiJ,EAAOE,QAAUF,EAAOE,SALjB,MAAAC,GAAA4B,GAAA,EAAAC,EAAA7B,EAAA,YAAA2B,GAAA,MAAAI,EAAA9B,QAAA8B,EAAA9B,SAAA,WAAA2B,EAAA,MAAAC,GAQXjV,KAAKgC,MAAM0P,cAAcF,EAASxR,KAAK8Q,SAASU,iCAI7CxH,GACH,IAAMwH,EAAUxR,KAAKgC,MAAMwP,QAAQsD,QAC7BM,EAAepV,KAAKoV,aAAa5D,EAASxH,GAFvCqL,GAAA,EAAAC,GAAA,EAAAC,OAAA7C,EAAA,IAIT,QAAA8C,EAAAC,EAAqBjE,EAArBqB,OAAAC,cAAAuC,GAAAG,EAAAC,EAAA1C,QAAAC,MAAAqC,GAAA,EAA8B,KAAnBpC,EAAmBuC,EAAApS,MACxBgS,EACFnC,EAAOE,QAAS,EAEZnJ,IAASiJ,EAAOxH,KAClBwH,EAAOE,QAAS,EAEhBF,EAAOE,QAAS,GAXb,MAAAC,GAAAkC,GAAA,EAAAC,EAAAnC,EAAA,YAAAiC,GAAA,MAAAI,EAAApC,QAAAoC,EAAApC,SAAA,WAAAiC,EAAA,MAAAC,GAeTvV,KAAKgC,MAAM0P,cAAcF,EAASxR,KAAK8Q,SAASU,qCAIzCA,GACP,GAAIxR,KAAK0V,MAAMlE,GACb,MAAO,GAET,IAAMmE,EAAO,GAJGC,GAAA,EAAAC,GAAA,EAAAC,OAAApD,EAAA,IAKhB,QAAAqD,EAAAC,EAAqBxE,EAArBqB,OAAAC,cAAA8C,GAAAG,EAAAC,EAAAjD,QAAAC,MAAA4C,GAAA,EAA8B,KAAnB3C,EAAmB8C,EAAA3S,MACxB6P,EAAOE,QACTwC,EAAKzC,KAAKlT,KAAKgC,MAAM6I,UAAUC,eAAemI,EAAOxH,QAPzC,MAAA2H,GAAAyC,GAAA,EAAAC,EAAA1C,EAAA,YAAAwC,GAAA,MAAAI,EAAA3C,QAAA2C,EAAA3C,SAAA,WAAAwC,EAAA,MAAAC,GAUhB,OAAOH,EAAKM,KAAK,sCAIV,IAAAC,EAAAlW,KAEDmW,EAAUnW,KAAKgC,MAAMwP,QAAQpG,IAAI,SAAC6H,EAAQ3H,GAAT,OACrC3K,EAAAC,EAAAC,cAACuV,GAAD,CACEzW,IAAK2L,EACLG,KAAMwH,EAAOxH,KACb2C,YAAa8H,EAAKlU,MAAMuN,iBAAiB8G,UAAUpD,EAAOxH,MAC1D0H,OAAQF,EAAOE,OACfhB,OAAQ+D,EAAK/D,OACbC,KAAM8D,EAAK9D,SAIf,OAAOzR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyM,SAAA,KAAG8I,UAlIQ3S,aAsItB0O,GAAU1H,YAAQ,SAAC3H,GAAD,MAAY,CAC5BgI,UAAWhI,EAAMgI,UACjB0E,iBAAkB1M,EAAM0M,mBAFhB/E,CAGN0H,QAGEoE,oLAEK,IAAAC,EAAAvW,KACP,OACEW,EAAAC,EAAAC,cAAC8N,GAAD,CACErL,UACE,6BACCtD,KAAKgC,MAAMmR,OAAS,GAAK,kCAE5B/E,YAAapO,KAAKgC,MAAMoM,YACxBC,QAAS,kBAAMkI,EAAKvU,MAAMmQ,OAAOoE,EAAKvU,MAAMyJ,OAC5C8C,YAAa,kBAAMgI,EAAKvU,MAAMoQ,KAAKmE,EAAKvU,MAAMyJ,QAE9C9K,EAAAC,EAAAC,cAAC2V,GAAD,CAAcxM,KAAMhK,KAAKgC,MAAMyJ,OAC9BzL,KAAKgC,MAAMyJ,aAdOjI,aAqBrBiT,eAEJ,SAAAA,IAAc,IAAAC,EAAA,OAAAtX,OAAAsD,EAAA,EAAAtD,CAAAY,KAAAyW,IACZC,EAAAtX,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAAqX,GAAA3W,KAAAE,QAEK2W,SAAWD,EAAKC,SAASxK,KAAd/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAsX,KAHJA,wEAOLtT,GACPpD,KAAKgC,MAAM4U,SAAS7F,GAAwB,CAAEE,WAAY7N,sCAK1D,OACEzC,EAAAC,EAAAC,cAACgW,GAAD,CACEC,MAAM,cACN1I,YAAY,iCACZhL,MAAOpD,KAAKgC,MAAM+U,KAClBJ,SAAU3W,KAAK2W,kBApBQnT,aA0B/BiT,GAAmBjM,YAAQ,SAAC3H,GAAD,MAAY,CACrCkU,KAAMlU,EAAMoO,aADKzG,CAEfiM,QAGEO,eAEJ,SAAAA,IAAc,IAAAC,EAAA,OAAA7X,OAAAsD,EAAA,EAAAtD,CAAAY,KAAAgX,IACZC,EAAA7X,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAA4X,GAAAlX,KAAAE,QACK2W,SAAWM,EAAKN,SAASxK,KAAd/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAA6X,KAFJA,wEAML7T,GACPpD,KAAKgC,MAAM4U,SAAS7F,GAAwB,CAAEG,WAAY9N,KACtDA,GACFwJ,SAASsK,cAAcC,wCAKzB,OACExW,EAAAC,EAAAC,cAACgW,GAAD,CACEC,MAAM,cACN1I,YAAY,+BACZhL,MAAOpD,KAAKgC,MAAM+U,KAClBJ,SAAU3W,KAAK2W,kBArBQnT,aA2B/BwT,GAAmBxM,YAAQ,SAAC3H,GAAD,MAAY,CACrCkU,KAAMlU,EAAMqO,aADK1G,CAEfwM,QAGEI,eAEJ,SAAAA,EAAYpV,GAAO,IAAAqV,EAAA,OAAAjY,OAAAsD,EAAA,EAAAtD,CAAAY,KAAAoX,IACjBC,EAAAjY,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAAgY,GAAAtX,KAAAE,KAAMgC,KAEDa,MAAQ,GACbwU,EAAKxU,MAAMyU,cAAgB,GAE3BD,EAAKE,SAAWhK,IAAMiK,YACtBH,EAAKI,QAAUlK,IAAMiK,YAErBH,EAAKK,QAAUL,EAAKK,QAAQvL,KAAb/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAiY,KATEA,uEAaXM,GAAc,IAAAC,EAAA5X,MFpPjB,SAAqB2X,EAAcE,GACxC,IAAMlH,EAAS,IAAIC,gBAMnB,OALAD,EAAOE,IAAI,SAAU8G,GACrBhH,EAAOE,IAAI,QAAS,OAChBgH,GACFlH,EAAOE,IAAI,YAAagH,GAEnBlI,GADOH,GAAmB,IAAMmB,EAAOG,YACtBhB,KAAK,SAACgI,GAC5B,OAAOA,EAAK7H,WE6OZ8H,CAAYJ,EAAc3X,KAAKgY,QAAQvG,cAAc3B,KAAK,SAACG,GAAD,OACxD2H,EAAK3U,SAAS,CAAEqU,cAAerH,GAAW,4CAKjCgI,GACX,OAAIA,GAAQA,EAAKxM,KACRwM,EAAKxM,KAEL,oCAIF,IAAAyM,EAAAlY,KACP,OACEW,EAAAC,EAAAC,cAACsX,EAAA,EAAD,CACExB,SAAU3W,KAAKgC,MAAM2U,SACrByB,mBAAoBpY,KAAK0X,QACzBW,aAAcrY,KAAKqY,aACnBC,aAActY,KAAKgC,MAAMoB,OAExB,SAAAtB,GAAA,IACCyW,EADDzW,EACCyW,cACAC,EAFD1W,EAEC0W,aACAC,EAHD3W,EAGC2W,aACAC,EAJD5W,EAIC4W,OACAJ,EALDxW,EAKCwW,aACAK,EAND7W,EAMC6W,iBACAC,EAPD9W,EAOC8W,eAPD,OASCjY,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,mBAAmBpB,IAAKgW,EAAKT,SAC1C9W,EAAAC,EAAAC,cAAA,QAAMyC,UAAU,sCACd3C,EAAAC,EAAAC,cAACsN,GAAD,CAASf,KAAM8K,EAAKlW,MAAMoM,aACvB8J,EAAKlW,MAAM8U,QAGhBnW,EAAAC,EAAAC,cAACgY,GAAD,CACEtB,SAAUW,EAAKX,SACfgB,cAAeA,EACfK,eAAgBA,EAChBN,aAAcA,IAEhB3X,EAAAC,EAAAC,cAACiY,GAAD,CACEJ,OAAQA,EACRnB,SAAUW,EAAKX,SACfE,QAASS,EAAKT,QACdgB,aAAcA,EACdnB,cAAeY,EAAKrV,MAAMyU,cAC1BgB,aAAcA,EACdK,iBAAkBA,EAClBH,aAAcA,cAnEJhV,aA4ExB4T,GAAU2B,YAAcpH,OAGlBqH,eAEJ,SAAAA,IAAc,IAAAC,EAAA,OAAA7Z,OAAAsD,EAAA,EAAAtD,CAAAY,KAAAgZ,IACZC,EAAA7Z,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAA4Z,GAAAlZ,KAAAE,QAEK6C,MAAQ,GACboW,EAAKpW,MAAMqW,SAAU,EAErBD,EAAKvB,QAAUuB,EAAKvB,QAAQvL,KAAb/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAA6Z,KACfA,EAAKE,QAAUF,EAAKE,QAAQhN,KAAb/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAA6Z,KACfA,EAAKG,OAASH,EAAKG,OAAOjN,KAAZ/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAA6Z,KARFA,uEAYN1M,GACqB,KAAvBA,EAAMjN,OAAO8D,OACfpD,KAAKgC,MAAM4W,mDAKb5Y,KAAKiD,SAAS,CAAEiW,SAAS,qCAKzBlZ,KAAKiD,SAAS,CAAEiW,SAAS,qCAKzB,IAAIG,EAAU1Y,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyM,SAAA,MAERiM,GACHtZ,KAAK6C,MAAMqW,SACZlZ,KAAKgC,MAAMsW,aAAaiB,UACxBvZ,KAAKgC,MAAMsW,aAAa7M,KAY1B,OAVI6N,IACFD,EACE1Y,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,6BACb3C,EAAAC,EAAAC,cAAC2V,GAAD,CAAcxM,KAAMhK,KAAKgC,MAAMsW,aAAaiB,WAC5C5Y,EAAAC,EAAAC,cAAA,QAAMyC,UAAU,wCACbtD,KAAKgC,MAAMsW,aAAa7M,QAM/B9K,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyM,SAAA,KACE1M,EAAAC,EAAAC,cAAC2Y,EAAA5Y,EAADxB,OAAAC,OAAA,GACMW,KAAKgC,MAAMuW,cAAc,CAC3B5B,SAAU3W,KAAK0X,UAFnB,CAIEH,SAAUvX,KAAKgC,MAAMuV,SACrBkC,YAAY,wBACZC,QAAS,CAAEC,KAAM,+BACjBC,WAAY,CACVF,QAAS,CACPC,KAAM,oBACNT,QAAS,4BACTW,MAAOP,EACH,0BACA,sBAGRH,QAASnZ,KAAKmZ,QACdC,OAAQpZ,KAAKoZ,UAEdC,EACD1Y,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,oBACb3C,EAAAC,EAAAC,cAAC+N,EAAA,EAAD,CAAiB7E,KAAM+P,eAvEXtW,aA+EhBuW,oLAEK,IAAAC,EAAAha,KACP,OACEW,EAAAC,EAAAC,cAACoZ,EAAArZ,EAADxB,OAAAC,OAAA,CACE2M,KAAMhM,KAAKgC,MAAM0W,OACjBwB,SAAUla,KAAKgC,MAAMuV,SAAS4C,QAC9BC,UAAU,eACV9W,UAAU,6BACV+W,UAAWra,KAAKgC,MAAMyV,QAAQ0C,QAC9BG,eAAe,GACXta,KAAKgC,MAAMyW,gBAEf9X,EAAAC,EAAAC,cAAC0Z,EAAA3Z,EAAD,CAAO0C,UAAU,6BACdtD,KAAKgC,MAAMsV,cAAclM,IAAI,SAACoP,EAAQlP,GAAT,OAC5B3K,EAAAC,EAAAC,cAAC4Z,EAAA7Z,EAADxB,OAAAC,OAAA,CACEiE,UACE,4BACC0W,EAAKhY,MAAMsW,aAAavX,KAAOyZ,EAAOzZ,GACnC,qCACA,KACHiZ,EAAKhY,MAAM2W,mBAAqBrN,EAC7B,qCACA,KAEF0O,EAAKhY,MAAMwW,aAAa,CAC1BP,KAAMuC,EACN7a,IAAK2L,KAGP3K,EAAAC,EAAAC,cAAC2V,GAAD,CAAcxM,KAAMwQ,EAAOjB,WAC3B5Y,EAAAC,EAAAC,cAAA,QAAMyC,UAAU,iCACbkX,EAAO/O,MAEV9K,EAAAC,EAAAC,cAAA,QAAMyC,UAAU,uCACbkX,EAAOE,wBAnCDlX,aA+CjBmX,eAEJ,SAAAA,IAAc,IAAAC,EAAA,OAAAxb,OAAAsD,EAAA,EAAAtD,CAAAY,KAAA2a,IACZC,EAAAxb,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAAub,GAAA7a,KAAAE,QAEKqO,QAAUuM,EAAKvM,QAAQlC,KAAb/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAwb,KAHHA,yEAQZ5a,KAAKgC,MAAM4U,SD3dN,CACL5M,KAAM,8DC+dN,OACErJ,EAAAC,EAAAC,cAAC8N,GAAD,CACEP,YAAY,8BACZ9K,UAAU,0BACV+K,QAASrO,KAAKqO,SAEd1N,EAAAC,EAAAC,cAAC+N,EAAA,EAAD,CAAiB7E,KAAM8Q,cArBNrX,aA2BzBmX,GAAanQ,cAAUmQ,eClgBVG,GAAb,SAAAtY,GAEE,SAAAsY,IAAc,IAAArY,EAAA,OAAArD,OAAAsD,EAAA,EAAAtD,CAAAY,KAAA8a,IACZrY,EAAArD,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAA0b,GAAAhb,KAAAE,QAEK6C,MAAQ,GACbJ,EAAKI,MAAMqW,SAAU,EACrBzW,EAAKsY,MAAQxN,IAAMiK,YAEnB/U,EAAK4L,QAAU5L,EAAK4L,QAAQlC,KAAb/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACfA,EAAK2W,OAAS3W,EAAK2W,OAAOjN,KAAZ/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACdA,EAAK0W,QAAU1W,EAAK0W,QAAQhN,KAAb/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KATHA,EAFhB,OAAArD,OAAA8D,EAAA,EAAA9D,CAAA0b,EAAAtY,GAAApD,OAAA+D,EAAA,EAAA/D,CAAA0b,EAAA,EAAAnb,IAAA,UAAAyD,MAAA,SAeUmJ,GAEFA,GAASA,EAAMjN,QAAiD,MAAvCiN,EAAMjN,OAAO0b,QAAQC,eAChD1O,EAAMjN,OAAO4b,QAEflb,KAAK+a,MAAMZ,QAAQgB,UApBvB,CAAAxb,IAAA,SAAAyD,MAAA,WAyBIpD,KAAKiD,SAAS,CAAEiW,SAAS,GAASlZ,KAAKob,eAzB3C,CAAAzb,IAAA,UAAAyD,MAAA,WA8BIpD,KAAKiD,SAAS,CAAEiW,SAAS,GAAQlZ,KAAKqb,aA9B1C,CAAA1b,IAAA,cAAAyD,MAAA,WAmCIL,OAAOuY,eAAeC,UAnC1B,CAAA5b,IAAA,YAAAyD,MAAA,WAyCIL,OAAOC,WAAW,WAChBD,OAAOuY,eAAeC,QACtBxY,OAAOuY,eAAeE,kBAAkB5O,SAASsK,gBAChD,MA5CP,CAAAvX,IAAA,SAAAyD,MAAA,WAiDI,IAAIqY,EAYJ,MAH4B,kBAL1BA,EADEzb,KAAK6C,MAAMqW,SACElZ,KAAKgC,MAAM0Z,WAEX1b,KAAKgC,MAAMoB,SAI1BqY,EAAe9a,EAAAC,EAAAC,cAAA,QAAMyC,UAAU,UAAUmY,IAGzC9a,EAAAC,EAAAC,cAAA,OACEqB,IAAKlC,KAAK+a,MACVY,SAAS,IACTtN,QAASrO,KAAKqO,QACd8K,QAASnZ,KAAKmZ,QACdC,OAAQpZ,KAAKoZ,OACb9V,UAAW,kBAAoBtD,KAAKgC,MAAMsB,WAAa,IACvDwI,gBAAe9L,KAAK6C,MAAMqW,SAEzBuC,OAvETX,EAAA,CAAkCtX,aCErBoY,WAAb,SAAApZ,GAEE,SAAAoZ,IAAc,IAAAnZ,EAAA,OAAArD,OAAAsD,EAAA,EAAAtD,CAAAY,KAAA4b,IACZnZ,EAAArD,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAAwc,GAAA9b,KAAAE,QAEK6C,MAAQ,GACbJ,EAAKI,MAAMgZ,WAAY,EAEvBpZ,EAAKqZ,UAAYrZ,EAAKqZ,UAAU3P,KAAf/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACjBA,EAAKsZ,UAAYtZ,EAAKsZ,UAAU5P,KAAf/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACjBA,EAAK0P,OAAS1P,EAAK0P,OAAOhG,KAAZ/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KARFA,EAFhB,OAAArD,OAAA8D,EAAA,EAAA9D,CAAAwc,EAAApZ,GAAApD,OAAA+D,EAAA,EAAA/D,CAAAwc,EAAA,EAAAjc,IAAA,oBAAAyD,MAAA,WAeQpD,KAAK8b,aACP9b,KAAKiD,SAAS,CAAE4Y,WAAW,MAhBjC,CAAAlc,IAAA,YAAAyD,MAAA,WAqBI,IAAMzD,EAAMK,KAAKgC,MAAM8U,MACvB,OAAOnX,GAA4C,SAArCoD,OAAOiZ,aAAaC,QAAQtc,KAtB9C,CAAAA,IAAA,YAAAyD,MAAA,SA0BYyY,GACR,IAAMlc,EAAMK,KAAKgC,MAAM8U,MACnBnX,GACFoD,OAAOiZ,aAAaE,QAAQvc,EAAKwc,OAA6B,SAAtBA,OAAON,OA7BrD,CAAAlc,IAAA,SAAAyD,MAAA,WAkCIpD,KAAKiD,SAAS,CAAE4Y,WAAY7b,KAAK6C,MAAMgZ,YACvC7b,KAAK+b,WAAW/b,KAAK6C,MAAMgZ,aAnC/B,CAAAlc,IAAA,SAAAyD,MAAA,WAwCI,OACEzC,EAAAC,EAAAC,cAAA,OACEyC,UAAU,sBACV8Y,iBAAgBpc,KAAK6C,MAAMgZ,WAE3Blb,EAAAC,EAAAC,cAAC8N,GAAD,CACEP,YAAapO,KAAKgC,MAAMoM,YACxB9K,UAAU,6BACV+K,QAASrO,KAAKmS,QAEdxR,EAAAC,EAAAC,cAAA,WAAMb,KAAKgC,MAAM8U,OACjBnW,EAAAC,EAAAC,cAAC+N,EAAA,EAAD,CACE7E,KAAM/J,KAAK6C,MAAMgZ,UAAYQ,IAAYC,OAG5Ctc,KAAKgC,MAAMsL,cAvDpBsO,EAAA,CAAwCpY,cCI3B+Y,GAAb,SAAA/Z,GAAA,SAAA+Z,IAAA,OAAAnd,OAAAsD,EAAA,EAAAtD,CAAAY,KAAAuc,GAAAnd,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAAmd,GAAAxc,MAAAC,KAAAR,YAAA,OAAAJ,OAAA8D,EAAA,EAAA9D,CAAAmd,EAAA/Z,GAAApD,OAAA+D,EAAA,EAAA/D,CAAAmd,EAAA,EAAA5c,IAAA,SAAAyD,MAAA,WAGI,OACEzC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAC2b,GAAD,CAAU1F,MAAM,cAAcC,KAAM/W,KAAKgC,MAAMiP,aAC/CtQ,EAAAC,EAAAC,cAAC2b,GAAD,CAAU1F,MAAM,cAAcC,KAAM/W,KAAKgC,MAAMkP,kBANvDqL,EAAA,CAAiC/Y,aAYjC+Y,GAAc/R,YAAQ,SAAC3H,GAAD,MAAY,CAChCoO,WAAYpO,EAAMoO,WAClBC,WAAYrO,EAAMqO,aAFN1G,CAGV+R,QAIEE,oLAGF,OACE9b,EAAAC,EAAAC,cAAC6b,GAAD,CACE5F,MAAO9W,KAAKgC,MAAM8U,MAClB1I,YAAa,qBAAuBpO,KAAKgC,MAAM8U,MAAMmE,eAEpDjb,KAAKgC,MAAM+U,KAAKtL,KACf9K,EAAAC,EAAAC,cAAC8b,GAAD,CAAW5F,KAAM/W,KAAKgC,MAAM+U,OAE5BpW,EAAAC,EAAAC,cAAC+b,GAAD,CAAY9F,MAAO9W,KAAKgC,MAAM8U,gBAXjBtT,aAmBjBqZ,eAEJ,SAAAA,IAAc,IAAApa,EAAA,OAAArD,OAAAsD,EAAA,EAAAtD,CAAAY,KAAA6c,IACZpa,EAAArD,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAAyd,GAAA/c,KAAAE,QAEK6C,MAAQ,GACbJ,EAAKI,MAAMia,UAAW,EAEtBra,EAAKsa,eAAiBta,EAAKsa,eAAe5Q,KAApB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KANVA,gFAWZzC,KAAKiD,SAAS,CAAE6Z,UAAW9c,KAAK6C,MAAMia,0CAIjC,IAAAtQ,EAAAxM,KAEDgd,EAAS,CAAC,OAAQ,WAAY,aAAc,UAEhD,GAAIhd,KAAK6C,MAAMia,SAAU,CAEvB,IAAIG,EAAc7d,OAAOgB,KAAKJ,KAAKgC,MAAM+U,KAAKe,MAE9CmF,EAAYC,OAAOD,EAAY5c,QAAQ,UAAW,GAClD4c,EAAYC,OAAOD,EAAY5c,QAAQ,OAAQ,IAE/C4c,EAAcA,EAAY/I,QAEdiJ,QAAQ,MAEpBH,EAASA,EAAOI,OAAOH,GAIzB,OAAOD,EAAO5R,IAAI,SAAC2P,EAAOzP,GAExB,IAAM+R,EAAWtC,EAEbuC,EACF9Q,EAAKxK,MAAM+U,KAAKgE,IAAUvO,EAAKxK,MAAM+U,KAAKe,KAAKiD,IAAU,GAG3D,GAAc,aAAVA,EAEFuC,EACE3c,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyM,SAAA,KACE1M,EAAAC,EAAAC,cAAC2V,GAAD,CAAcxM,KAAMwC,EAAKxK,MAAM+U,KAAKgE,KACpCpa,EAAAC,EAAAC,cAAA,QAAMyC,UAAU,UAAUkJ,EAAKxK,MAAM+U,KAAKgE,UAGzC,GAAc,WAAVA,EAAoB,CAE7B,IAAMwC,EAAU/Q,EAAKxK,MAAM+U,KAAKnH,KAAOpD,EAAKxK,MAAM+U,KAAKe,KAAKlI,KAAO,GAC/D4N,EAAWhR,EAAKxK,MAAM+U,KAAKe,KAAKpY,QAAU6d,EAC9CC,EA+ER,SAAoB5N,GAElB,IADA,IADuB6N,EACR,CAAC,UAAW,WAAY,QACvCC,EAAA,EAAAA,EAAAD,EAAAhe,OAAAie,IAAA,CAAK,IAAMC,EAAGF,EAAAC,GACZ9N,EAAMA,EAAIgO,QAAQD,EAAK,IAEzB,OAAO/N,EApFUiO,CAAWL,GACtBF,EACE3c,EAAAC,EAAAC,cAAA,KAAGyC,UAAU,SAASC,KAAMga,GACzBC,GAMP,IAAIpP,EAAc,GAWlB,OAVI5B,EAAKxK,MAAMuN,iBAAiBuO,aAC9B1P,EAAWhP,OAAA2e,EAAA,EAAA3e,CAAA,GACNgP,EACA5B,EAAKxK,MAAMuN,iBAAiBuO,WAAWE,OACvCxR,EAAKxK,MAAMuN,iBAAiBuO,WAAWG,QAG9C7P,EAAWhP,OAAA2e,EAAA,EAAA3e,CAAA,GAAQgP,EAAgB5B,EAAKxK,MAAMkc,oBAI5Cvd,EAAAC,EAAAC,cAAA,MAAIlB,IAAK2L,GACP3K,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,0BACZ3C,EAAAC,EAAAC,cAACsN,GAAD,CAASf,KAAMgB,EAAY2M,IAASsC,IAEtC1c,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACsd,GAAD,CAAc/a,MAAOka,EAAWha,UAAU,8CASlD,OACE3C,EAAAC,EAAAC,cAAA,SAAOyC,UAAU,sBACf3C,EAAAC,EAAAC,cAAA,aACGb,KAAKoe,OACNzd,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,SAAS+a,QAAQ,KAC7B1d,EAAAC,EAAAC,cAACyd,GAAD,CACElR,KAAMpN,KAAK6C,MAAMia,SAAW,aAAe,aAC3C/S,KAAM/J,KAAK6C,MAAMia,SAAWT,IAAYC,IACxChZ,UAAU,oBACV+K,QAASrO,KAAK+c,eACd3O,YAAY,oDAtGJ5K,aAgHxBqZ,GAAYrS,YAAQ,SAAC3H,GAAD,MAAY,CAC9B0M,iBAAkB1M,EAAM0M,iBACxB2O,mBAAoBrb,EAAMqb,qBAFhB1T,CAGRqS,QAGE0B,oLAEF,OACE5d,EAAAC,EAAAC,cAAA,SAAOyC,UAAU,sBACf3C,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,gBAAd,YACYtD,KAAKgC,MAAM8U,MAAMmE,yBAPhBzX,aCvKlB,SAASgb,GAAcC,GAC5BA,EAASC,WAAWD,GAAQD,cAAc,GAC1C,IAAMG,EAAWD,WAAWD,EAAOG,MAAM,KAAK,IAAIC,QAAQ,GACpDC,EAAWC,SAASN,EAAOG,MAAM,KAAK,IAC5C,OACEje,EAAAC,EAAAC,cAAA,YACG8d,EADH,WACuBhe,EAAAC,EAAAC,cAAA,WAAMie,IAM1B,SAASD,GAAQJ,GACtB,OAAO9d,EAAAC,EAAAC,cAAA,YAAO6d,WAAWD,GAAQI,QAAQ,IAIpC,SAASG,GAAWP,GAEzB,IAAIQ,EAAW,CACb,yBACA,yBACA,yBACA,yBACA,yBACA,0BAIFA,EAAWA,EAAS7T,IAAI,SAACb,GAQvB,OAPAA,EAAQA,EAAMqU,MAAM,WAAW3I,KAAK,IACpC1L,EAAQ,CACN9I,EAAGsd,SAASxU,EAAMqU,MAAM,KAAK,IAC7BM,EAAGH,SAASxU,EAAMqU,MAAM,KAAK,IAC7BzK,EAAG4K,SAASxU,EAAMqU,MAAM,KAAK,IAC7Bhe,EAAG8d,WAAWnU,EAAMqU,MAAM,KAAK,OAUnC,IAIIO,IAPJV,EAASxR,KAAKmS,MAAMX,MAGD,IAIL,EACdU,EAAUlS,KAAKC,IAAID,KAAKoS,IAAI,EAAGF,GAAU,GAGzC,IAAMG,GAAiBL,EAASxf,OAAS,GAAK0f,EAExCI,EAAaN,EAAShS,KAAKuS,MAAMF,IACjCG,EAAcR,EAAShS,KAAKyS,KAAKJ,IAEjCK,EAAiBL,EAAgB,EAGnC/U,EAAQ,CACV9I,EAAG8d,EAAW9d,GAAKge,EAAYhe,EAAI8d,EAAW9d,GAAKke,EACnDT,EAAGK,EAAWL,GAAKO,EAAYP,EAAIK,EAAWL,GAAKS,EACnDxL,EAAGoL,EAAWpL,GAAKsL,EAAYtL,EAAIoL,EAAWpL,GAAKwL,EACnD/e,EAAG2e,EAAW3e,GAAK6e,EAAY7e,EAAI2e,EAAW3e,GAAK+e,GAcrD,OAVApV,EAAM9I,EAAIwL,KAAKuS,MAAMjV,EAAM9I,GAC3B8I,EAAM2U,EAAIjS,KAAKuS,MAAMjV,EAAM2U,GAC3B3U,EAAM4J,EAAIlH,KAAKuS,MAAMjV,EAAM4J,GAC3B5J,EAAM3J,EAAI2J,EAAM3J,EAAEie,QAAQ,IAG1BtU,EACE,QAAUA,EAAM9I,EAAI,KAAO8I,EAAM2U,EAAI,KAAO3U,EAAM4J,EAAI,KAAO5J,EAAM3J,EAAI,MAGzD,UAKX,SAASgf,GAAY9H,EAAM+H,GAChC,IAAMC,EAAchI,EAAK1M,IAAI,SAAC2U,GAAD,OAAUA,EAAK9J,KAAK,OAAMA,KAAK,MACtD+J,EAAO,IAAIC,KAAK,CAACH,GAAc,CAAE9V,KAAM,aACvC4F,EAAM7M,OAAOmd,IAAIC,gBAAgBH,GACjCI,EAAOxT,SAAS/L,cAAc,KACpC+L,SAASqB,KAAKoS,YAAYD,GAC1BA,EAAK7c,KAAOqM,EACZwQ,EAAKE,UAAYT,GAAY,QAAU,OACvCO,EAAKlF,QACLnY,OAAOmd,IAAIK,gBAAgB3Q,GAC3BwQ,EAAKI,SAIA,SAASC,GAAqBC,GAOnC,OADAA,GAFAA,GAFAA,EAASA,EAAOC,QAEA/C,QAAQ,iBAAkB,MAE1BgD,UAAU,EAAG,eCjFlBC,GAAb,SAAAre,GAAA,SAAAqe,IAAA,OAAAzhB,OAAAsD,EAAA,EAAAtD,CAAAY,KAAA6gB,GAAAzhB,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAAyhB,GAAA9gB,MAAAC,KAAAR,YAAA,OAAAJ,OAAA8D,EAAA,EAAA9D,CAAAyhB,EAAAre,GAAApD,OAAA+D,EAAA,EAAA/D,CAAAyhB,EAAA,EAAAlhB,IAAA,SAAAyD,MAAA,WAGI,OACEzC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAC6b,GAAD,CACE5F,MAAM,YACN1I,YAAY,qEAEXpO,KAAKgC,MAAMoP,UAAU3R,OAAS,EAAIkB,EAAAC,EAAAC,cAACigB,GAAD,MAAgBngB,EAAAC,EAAAC,cAACkgB,GAAD,YAT7DF,EAAA,CAAqCrd,aAgBrCqd,GAAkBrW,YAAQ,SAAC3H,GAAD,MAAY,CACpCuO,UAAWvO,EAAMuO,YADD5G,CAEdqW,QAGEhE,eAEJ,SAAAA,EAAY7a,GAAO,IAAAS,EAAA,OAAArD,OAAAsD,EAAA,EAAAtD,CAAAY,KAAA6c,IACjBpa,EAAArD,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAAyd,GAAA/c,KAAAE,KAAMgC,KAEDa,MAAQ,GACbJ,EAAKI,MAAMia,UAAW,EACtBra,EAAKI,MAAMme,YAAa,EACxBve,EAAKI,MAAMoe,WAAa,UACxBxe,EAAKI,MAAMqe,QAAS,EAEpBze,EAAKsa,eAAiBta,EAAKsa,eAAe5Q,KAApB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACtBA,EAAK0e,iBAAmB1e,EAAK0e,iBAAiBhV,KAAtB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACxBA,EAAKue,WAAave,EAAKue,WAAW7U,KAAhB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KAClBA,EAAK2e,SAAW3e,EAAK2e,SAASjV,KAAd/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KAChBA,EAAK4e,WAAa5e,EAAK4e,WAAWlV,KAAhB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KAClBA,EAAK6e,mBAAqB7e,EAAK6e,mBAAmBnV,KAAxB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KAC1BA,EAAK8e,cAAgB9e,EAAK8e,cAAcpV,KAAnB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACrBA,EAAK+e,YAAc/e,EAAK+e,YAAYrV,KAAjB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACnBA,EAAKgf,WAAahf,EAAKgf,WAAWtV,KAAhB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KAClBA,EAAKmd,YAAcnd,EAAKmd,YAAYzT,KAAjB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KAlBFA,kFAsBA4P,GACbrS,KAAKgC,MAAMoP,YAAciB,EAAUjB,WACrCpR,KAAK0hB,8DAKH1hB,KAAKghB,aACPhhB,KAAKiD,SAAS,CAAE+d,YAAY,IAE5BhhB,KAAKiD,SAAS,CAAE+d,YAAY,2CAIjBzU,GACTA,GACFA,EAAMoV,iBAER3hB,KAAKiD,SAAS,CAAE6Z,UAAW9c,KAAK6C,MAAMia,sDAKlC9c,KAAKghB,aACPhhB,KAAKqhB,aAELrhB,KAAKohB,gDAII,IAAA7O,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IACX,QAAAC,EAAAC,EAAuB5S,KAAKgC,MAAMoP,UAAlCyB,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA6C,CAC3C,IAD2CI,EAAAvP,MAC7B0L,QACZ,OAAO,GAHA,MAAAsE,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,GAMX,OAAO,qCAKP,IAAMrB,EAAYpR,KAAKgC,MAAMoP,UAAU0D,QAD9BV,GAAA,EAAAC,GAAA,EAAAC,OAAA5B,EAAA,IAGT,QAAA6B,EAAAC,EAAuBxU,KAAKgC,MAAMoP,UAAlCyB,OAAAC,cAAAsB,GAAAG,EAAAC,EAAAzB,QAAAC,MAAAoB,GAAA,GAAAG,EAAAnR,MACW0L,SAAU,GAJZ,MAAAsE,GAAAiB,GAAA,EAAAC,EAAAlB,EAAA,YAAAgB,GAAA,MAAAI,EAAAnB,QAAAmB,EAAAnB,SAAA,WAAAgB,EAAA,MAAAC,GAMTtU,KAAKgC,MAAM4U,SAASzF,GAAgB,CAAEC,UAAWA,0CAKjD,IAAMA,EAAYpR,KAAKgC,MAAMoP,UAAU0D,QAD5BL,GAAA,EAAAC,GAAA,EAAAC,OAAAjC,EAAA,IAGX,QAAAkC,EAAAC,EAAuB7U,KAAKgC,MAAMoP,UAAlCyB,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,GAAA,GAAAG,EAAAxR,MACW0L,SAAU,GAJV,MAAAsE,GAAAsB,GAAA,EAAAC,EAAAvB,EAAA,YAAAqB,GAAA,MAAAI,EAAAxB,QAAAwB,EAAAxB,SAAA,WAAAqB,EAAA,MAAAC,GAMX3U,KAAKgC,MAAM4U,SAASzF,GAAgB,CAAEC,UAAWA,gDAIhCrQ,GAAI,IAAAgU,GAAA,EAAAC,GAAA,EAAAC,OAAAvC,EAAA,IACrB,QAAAwC,EAAAC,EAAuBnV,KAAKgC,MAAMoP,UAAlCyB,OAAAC,cAAAiC,GAAAG,EAAAC,EAAApC,QAAAC,MAAA+B,GAAA,EAA6C,KAAlCrE,EAAkCwE,EAAA9R,MAC3C,GAAIrC,IAAO2P,EAAS3P,IAAM2P,EAAS5B,QACjC,OAAO,GAHU,MAAAsE,GAAA4B,GAAA,EAAAC,EAAA7B,EAAA,YAAA2B,GAAA,MAAAI,EAAA9B,QAAA8B,EAAA9B,SAAA,WAAA2B,EAAA,MAAAC,GAMrB,OAAO,wCAIKlU,GACZ,IAAMqQ,EAAYpR,KAAKgC,MAAMoP,UAAU0D,QADvBO,GAAA,EAAAC,GAAA,EAAAC,OAAA7C,EAAA,IAGhB,QAAA8C,EAAAC,EAAuBrE,EAAvByB,OAAAC,cAAAuC,GAAAG,EAAAC,EAAA1C,QAAAC,MAAAqC,GAAA,EAAkC,KAAvB3E,EAAuB8E,EAAApS,MAC5BsN,EAAS3P,KAAOA,IAClB2P,EAAS5B,SAAW4B,EAAS5B,UALjB,MAAAsE,GAAAkC,GAAA,EAAAC,EAAAnC,EAAA,YAAAiC,GAAA,MAAAI,EAAApC,QAAAoC,EAAApC,SAAA,WAAAiC,EAAA,MAAAC,GAQhBvV,KAAKgC,MAAM4U,SAASzF,GAAgB,CAAEC,UAAWA,yCAIvCrQ,GACV,IAAMqQ,EAAYpR,KAAKgC,MAAMoP,UAAU0D,QACjCwM,EAAqBthB,KAAKshB,mBAAmBvgB,GAFrC6U,GAAA,EAAAC,GAAA,EAAAC,OAAApD,EAAA,IAId,QAAAqD,EAAAC,EAAuB5E,EAAvByB,OAAAC,cAAA8C,GAAAG,EAAAC,EAAAjD,QAAAC,MAAA4C,GAAA,EAAkC,KAAvBlF,EAAuBqF,EAAA3S,MAC5Bke,GAAsBvgB,IAAO2P,EAAS3P,GACxC2P,EAAS5B,SAAU,EAEnB4B,EAAS5B,SAAU,GART,MAAAsE,GAAAyC,GAAA,EAAAC,EAAA1C,EAAA,YAAAwC,GAAA,MAAAI,EAAA3C,QAAA2C,EAAA3C,SAAA,WAAAwC,EAAA,MAAAC,GAWd9V,KAAKgC,MAAM4U,SAASzF,GAAgB,CAAEC,UAAWA,wCAIxC6P,GACT,IAAMW,EAAW,GACjBA,EAASX,WAAaA,EAElBA,IAAejhB,KAAK6C,MAAMoe,WAC5BW,EAASV,QAAUlhB,KAAK6C,MAAMqe,OAE9BU,EAASV,QAAS,EAEpBlhB,KAAKiD,SAAS2e,0CAIDhhB,EAAGuT,EAAGxU,GAEnB,IAAMkiB,EAAaC,OAAOlhB,EAAEjB,IAAQmiB,OAAO3N,EAAExU,IAC7C,OAAKmiB,OAAOC,MAAMF,GAIdjhB,EAAEjB,GAAOwU,EAAExU,IACL,EACDiB,EAAEjB,GAAOwU,EAAExU,GACX,EAEA,EARAkiB,2CAYMjhB,EAAGuT,EAAGxU,GAIrB,OAHAiB,EAAIA,EAAEjB,GACNwU,EAAIA,EAAExU,GAEFiB,EAAEnB,OAAS0U,EAAE1U,QACP,EACDmB,EAAEnB,OAAS0U,EAAE1U,OACb,EAGHmB,EAAIuT,GACE,EACDvT,EAAIuT,EACJ,EAEA,wCAORnU,KAAKgC,MAAMoP,UAAU3R,QACrBO,KAAKgC,MAAMiP,WAAWxF,MACtBzL,KAAKgC,MAAMkP,WAAWzF,MAUzBmU,GA0XJ,SAA4BxO,GAE1B,IADA,IAAI4Q,EAAU,GADuBvE,EAEjBre,OAAOgB,KAAKgR,EAAU,IAA1CsM,EAAA,EAAAA,EAAAD,EAAAhe,OAAAie,IAA+C,CAA1C,IAAM3C,EAAK0C,EAAAC,GAEmB,kBAAxBtM,EAAU,GAAG2J,IACW,kBAAxB3J,EAAU,GAAG2J,IAEpBiH,EAAQ9O,KAAK6H,GAIjB,IAAMzH,EAAQ,CACZvS,GAAI,EACJkhB,cAAe,EACfC,sBAAuB,EACvBC,WAAY,EACZC,QAAS,EACTC,KAAM,EACNC,kBAAmB,EACnBC,kBAAmB,EACnBC,YAAa,EACbC,oBAAqB,GACrBC,iBAAkB,GAClBC,eAAgB,IAElBX,EAAUA,EAAQ9N,KAAK,SAACtT,EAAGuT,GACzB,OAAIb,EAAM1S,IAAM0S,EAAMa,GACbb,EAAM1S,GAAK0S,EAAMa,GACjBb,EAAM1S,IACL,EACD0S,EAAMa,GACN,EAEAA,EAAIvT,IAGf,IAAMgiB,EAAQ,GACdA,EAAM1P,KAAK8O,GArC0B,IAAAa,GAAA,EAAAC,GAAA,EAAAC,OAAArQ,EAAA,IAsCrC,QAAAsQ,EAAAC,EAAqB7R,EAArByB,OAAAC,cAAA+P,GAAAG,EAAAC,EAAAlQ,QAAAC,MAAA6P,GAAA,EAAgC,KAArBrI,EAAqBwI,EAAA5f,MACxB8f,EAAM,GADkBC,GAAA,EAAAC,GAAA,EAAAC,OAAA3Q,EAAA,IAE9B,QAAA4Q,EAAAC,EAAqBvB,EAArBnP,OAAAC,cAAAqQ,GAAAG,EAAAC,EAAAxQ,QAAAC,MAAAmQ,GAAA,OAAWK,EAAXF,EAAAlgB,MACE8f,EAAIhQ,KAAKsH,EAAOgJ,KAHY,MAAApQ,GAAAgQ,GAAA,EAAAC,EAAAjQ,EAAA,YAAA+P,GAAA,MAAAI,EAAAlQ,QAAAkQ,EAAAlQ,SAAA,WAAA+P,EAAA,MAAAC,GAI9BT,EAAM1P,KAAKgQ,IA1CwB,MAAA9P,GAAA0P,GAAA,EAAAC,EAAA3P,EAAA,YAAAyP,GAAA,MAAAI,EAAA5P,QAAA4P,EAAA5P,SAAA,WAAAyP,EAAA,MAAAC,GA6CrC,OAAOH,EA7aaa,CAAmBzjB,KAAKgC,MAAMoP,WAC/B,CACf,YACAqP,GAAqBzgB,KAAKgC,MAAMiP,WAAWxF,MAC3CgV,GAAqBzgB,KAAKgC,MAAMkP,WAAWzF,OAC3CwK,KAAK,uCAKA,IAAAzJ,EAAAxM,KAED0jB,EAAkB1jB,KAAKgC,MAAMoP,UAC7B6P,EAAajhB,KAAK6C,MAAMoe,WAGX,uBAAfA,EACFyC,EAAgBxP,KAAK,SAACtT,EAAGuT,GAAJ,OAAU3H,EAAKmX,iBAAiB/iB,EAAGuT,EAAG8M,KAE3DyC,EAAgBxP,KAAK,SAACtT,EAAGuT,GAAJ,OAAU3H,EAAKoX,eAAehjB,EAAGuT,EAAG8M,KAGvDjhB,KAAK6C,MAAMqe,QACbwC,EAAgBG,UAElB,IAAMC,EAAgBJ,EAAgBjkB,OAClCskB,EAAwB,EAhBrBC,GAAA,EAAAC,GAAA,EAAAC,OAAAxR,EAAA,IAiBP,QAAAyR,EAAAC,EAAuBV,EAAvB7Q,OAAAC,cAAAkR,GAAAG,EAAAC,EAAArR,QAAAC,MAAAgR,GAAA,EAAwC,CAAAG,EAAA/gB,MACzB0L,SACXiV,KAnBG,MAAA3Q,GAAA6Q,GAAA,EAAAC,EAAA9Q,EAAA,YAAA4Q,GAAA,MAAAI,EAAA/Q,QAAA+Q,EAAA/Q,SAAA,WAAA4Q,EAAA,MAAAC,GAsBP,OACEvjB,EAAAC,EAAAC,cAACwjB,GAAazS,SAAd,CACExO,MAAO,CACLsgB,gBAAiBA,EACjB5G,SAAU9c,KAAK6C,MAAMia,SACrBkE,WAAYhhB,KAAK6C,MAAMme,WACvBG,iBAAkBnhB,KAAKmhB,iBACvBI,cAAevhB,KAAKuhB,cACpBC,YAAaxhB,KAAKwhB,YAClBP,WAAYjhB,KAAK6C,MAAMoe,WACvBC,OAAQlhB,KAAK6C,MAAMqe,OACnBO,WAAYzhB,KAAKyhB,aAGnB9gB,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,eACb3C,EAAAC,EAAAC,cAACyd,GAAD,CACElR,KAAK,OACLrD,KAAMua,IACNhhB,UAAU,oBACV+K,QAASrO,KAAK4f,YACdxR,YAAY,gCAEdzN,EAAAC,EAAAC,cAACyd,GAAD,CACElR,KAAMpN,KAAK6C,MAAMia,SAAW,aAAe,aAC3C/S,KAAM/J,KAAK6C,MAAMia,SAAWyH,IAAcC,IAC1ClhB,UAAU,oBACV+K,QAASrO,KAAK+c,eACd3O,YAAY,uCAEdzN,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,qBACZwgB,EADH,aAC4BC,EAD5B,cAIFpjB,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,kBAAkBwI,gBAAe9L,KAAK6C,MAAMia,UACzDnc,EAAAC,EAAAC,cAAA,SAAOyC,UAAU,0BACf3C,EAAAC,EAAAC,cAAC4jB,GAAD,MACA9jB,EAAAC,EAAAC,cAAC6jB,GAAD,gBAtPYlhB,aA8PlB6gB,GAAe9W,IAAM0E,cAAc,IAEzC4K,GAAYrS,YAAQ,SAAC3H,GAAD,MAAY,CAC9BoO,WAAYpO,EAAMoO,WAClBC,WAAYrO,EAAMqO,WAClBE,UAAWvO,EAAMuO,YAHP5G,CAIRqS,QAIE8H,oLAEK,IAAAzO,EAAAlW,KAED4kB,EACJjkB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,WACd3C,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,UACd3C,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,UACd3C,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,UACd3C,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,UACd3C,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,UACd3C,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,UACd3C,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,iBAAiB+a,QAAQ,KACrC1d,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,WAAf,wCAMF8K,EAAc,GACdpO,KAAKgC,MAAMuN,iBAAiBuO,aAC9B1P,EAAWhP,OAAA2e,EAAA,EAAA3e,CAAA,GACNgP,EACApO,KAAKgC,MAAMuN,iBAAiBuO,WAAWE,OACvChe,KAAKgC,MAAMuN,iBAAiBuO,WAAWG,QAG9C7P,EAAWhP,OAAA2e,EAAA,EAAA3e,CAAA,GAAQgP,EAAgBpO,KAAKgC,MAAMkc,oBAG9C,IAAM2G,EACJlkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyM,SAAA,KACE1M,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,UACZ3C,EAAAC,EAAAC,cAACikB,GAAD,CACEhW,QAAS9O,KAAKgY,QAAQgJ,WACtB3S,QAAS,kBAAM6H,EAAK8B,QAAQmJ,oBAC5B5S,YAAa,kBAAM2H,EAAK8B,QAAQmJ,oBAChC/S,YAAY,oBAGhBzN,EAAAC,EAAAC,cAACkkB,GAAD,CACEzhB,UAAU,aACV0hB,YAAY,OACZC,UAAU,qBACV7W,YAAaA,EAAW,SACxBhB,KAAK,aAEPzM,EAAAC,EAAAC,cAACkkB,GAAD,CACEzhB,UAAU,QACV2hB,UAAU,aACV7W,YAAaA,EAAW,WACxBhB,KAAK,eAEPzM,EAAAC,EAAAC,cAACkkB,GAAD,CACEzhB,UAAU,QACV2hB,UAAU,UACV7W,YAAaA,EAAW,QACxBhB,KACEzM,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyM,SAAA,KACE1M,EAAAC,EAAAC,cAAA,cADF,aASFqkB,EACJvkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyM,SAAA,KACE1M,EAAAC,EAAAC,cAACkkB,GAAD,CACEzhB,UAAU,QACV2hB,UAAU,OACV7W,YAAaA,EAAW,KACxBhB,KAAK,SAEPzM,EAAAC,EAAAC,cAACkkB,GAAD,CACEE,UAAU,oBACV7W,YAAaA,EAAW,kBACxBhB,KAAK,kBAEPzM,EAAAC,EAAAC,cAACkkB,GAAD,CACEE,UAAU,oBACV7W,YAAaA,EAAW,kBACxBhB,KAAK,kBAEPzM,EAAAC,EAAAC,cAACkkB,GAAD,CACEE,UAAU,cACV7W,YAAaA,EAAW,YACxBhB,KAAK,aAEPzM,EAAAC,EAAAC,cAACkkB,GAAD,CACEE,UAAU,sBACV7W,YAAaA,EAAW,oBACxBhB,KAAK,mBAEPzM,EAAAC,EAAAC,cAACkkB,GAAD,CACEE,UAAU,mBACV7W,YAAaA,EAAW,iBACxBhB,KAAK,eAEPzM,EAAAC,EAAAC,cAACkkB,GAAD,CACEE,UAAU,iBACV7W,YAAaA,EAAW,eACxBhB,KAAMzM,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyM,SAAA,wBAKZ,OACE1M,EAAAC,EAAAC,cAAA,SAAOyC,UAAU,eACdtD,KAAKgY,QAAQ8E,UAAY8H,EAC1BjkB,EAAAC,EAAAC,cAAA,UACGgkB,EACA7kB,KAAKgY,QAAQ8E,UAAYoI,WAlHZ1hB,aAyHxBmhB,GAAU5L,YAAcsL,GAExBM,GAAYna,YAAQ,SAAC3H,GAAD,MAAY,CAC9B0M,iBAAkB1M,EAAM0M,iBACxB2O,mBAAoBrb,EAAMqb,qBAFhB1T,CAGRma,QAGEQ,oLAGF,OACExkB,EAAAC,EAAAC,cAAA,MAAIyC,UAAWtD,KAAKgC,MAAMsB,WACxB3C,EAAAC,EAAAC,cAACukB,GAAD,CACEhY,KAAMpN,KAAKgC,MAAMoL,KACjBgB,YAAapO,KAAKgC,MAAMoM,YACxB6W,UAAWjlB,KAAKgC,MAAMijB,UACtB3hB,UAAWtD,KAAKgC,MAAMgjB,sBATJxhB,aAiBtB6hB,oLAEK,IAAA9O,EAAAvW,KACP,OACEW,EAAAC,EAAAC,cAAC8N,GAAD,CACEP,YAAapO,KAAKgC,MAAMoM,YACxB9K,UAAW,gBAAkBtD,KAAKgC,MAAMsB,WAAa,IACrD+K,QAAS,kBAAMkI,EAAKyB,QAAQyJ,WAAWlL,EAAKvU,MAAMijB,aAEjDjlB,KAAKgC,MAAMoL,KACZzM,EAAAC,EAAAC,cAAC+N,EAAA,EAAD,CACE7E,KACE/J,KAAKgC,MAAMijB,YAAcjlB,KAAKgY,QAAQiJ,WAClCjhB,KAAKgY,QAAQkJ,OACXoE,IACAC,IACFC,cAhBShiB,aAwBzB6hB,GAAWtM,YAAcsL,OAInBoB,oLAEK,IAAA/O,EAAA1W,KACP,OACEW,EAAAC,EAAAC,cAAA,aACGb,KAAKgY,QAAQ0L,gBAAgBtY,IAAI,SAACsF,EAAUpF,GAAX,OAChC3K,EAAAC,EAAAC,cAAC6kB,GAAD,CACE/lB,IAAK2L,EACLoF,SAAUA,EACV5B,QAAS4B,EAAS5B,QAClBgO,SAAUpG,EAAK1U,MAAM8a,qBAVTtZ,aAkBxBiiB,GAAU1M,YAAcsL,OAIlBsB,oLAEK,IV1XmBC,EU0XnB3O,EAAAjX,KACD0Q,EAAW1Q,KAAKgC,MAAM0O,SAGtBmU,EACJlkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyM,SAAA,KACE1M,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACikB,GAAD,CACEhW,QAAS9O,KAAKgC,MAAM8M,QACpBT,QAAS,kBAAM4I,EAAKe,QAAQuJ,cAActK,EAAKjV,MAAM0O,SAAS3P,KAC9DwN,YAAa,kBAAM0I,EAAKe,QAAQwJ,YAAYvK,EAAKjV,MAAM0O,SAAS3P,KAChEqN,YACE,eACCpO,KAAKgC,MAAM0O,SAASyR,YAAc,IACnC,+BAINxhB,EAAAC,EAAAC,cAACglB,GAAD,CACEviB,UAAU,OACVwiB,WAAW,OACX1iB,OV/YoBwiB,EU+YClV,EAASqV,mBV9YzBH,EAAMxa,IAAI,SAACC,EAAOC,GAC7B,OACE3K,EAAAC,EAAAC,cAACF,EAAAC,EAAMyM,SAAP,CAAgB1N,IAAK2L,GACnB3K,EAAAC,EAAAC,cAAC2V,GAAD,CAAcxM,KAAMqB,EAAM,KAC1B1K,EAAAC,EAAAC,cAAC6K,GAAD,CAAc1B,KAAMqB,EAAM,GAAIV,UAAWU,EAAM,KAC9CC,IAAUsa,EAAMnmB,OAAS,GAAKkB,EAAAC,EAAAC,cAAC2V,GAAD,CAAcxM,KAAMqB,EAAM,SU0YvDqQ,UAAWhL,EAASuR,gBAEtBthB,EAAAC,EAAAC,cAACglB,GAAD,CAAeziB,MAAOsN,EAASyR,aAC/BxhB,EAAAC,EAAAC,cAACglB,GAAD,CACEviB,UAAU,QACV6G,MAAO,CAAE6b,gBAAiBhH,GAAWtO,EAAS0R,UAC9Chf,MAAOob,GAAc9N,EAAS0R,SAC9B1G,UAAWhL,EAAS0R,WAMpB8C,EACJvkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyM,SAAA,KACE1M,EAAAC,EAAAC,cAACglB,GAAD,CACEziB,MAAOyb,GAAQnO,EAAS2R,MACxB3G,UAAWhL,EAAS2R,OAEtB1hB,EAAAC,EAAAC,cAACglB,GAAD,CAAeziB,MAAOsN,EAAS4R,oBAC/B3hB,EAAAC,EAAAC,cAACglB,GAAD,CAAeziB,MAAOsN,EAAS6R,oBAC/B5hB,EAAAC,EAAAC,cAACglB,GAAD,CAAeziB,MAAOsN,EAAS8R,cAC/B7hB,EAAAC,EAAAC,cAACglB,GAAD,CAAeziB,MAAOsN,EAAS+R,sBAC/B9hB,EAAAC,EAAAC,cAACglB,GAAD,CACEziB,MAAOyb,GAAQnO,EAASgS,kBACxBhH,UAAWhL,EAASgS,mBAEtB/hB,EAAAC,EAAAC,cAACglB,GAAD,CACEziB,MAAOyb,GAAQnO,EAASiS,gBACxBjH,UAAWhL,EAASiS,kBAK1B,OACEhiB,EAAAC,EAAAC,cAAA,UACGgkB,EACA7kB,KAAKgY,QAAQ8E,UAAYoI,UA7DP1hB,aAmE3BmiB,GAAa5M,YAAcsL,OAGrB4B,oLAGF,OACEtlB,EAAAC,EAAAC,cAAA,MAAIyC,UAAWtD,KAAKgC,MAAMsB,UAAW6G,MAAOnK,KAAKgC,MAAMmI,OACrDxJ,EAAAC,EAAAC,cAACsd,GAAD,CACE/a,MAAOpD,KAAKgC,MAAMoB,MAClBsY,UAAW1b,KAAKgC,MAAM0Z,UACtBpY,UAAWtD,KAAKgC,MAAM8jB,qBARJtiB,aAgBtB+a,oLAGF,OACE5d,EAAAC,EAAAC,cAAA,SAAOyC,UAAU,0BACf3C,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,gBAAd,gCAPaE,0BCxjBZ0iB,WAAb,SAAA1jB,GAAA,SAAA0jB,IAAA,OAAA9mB,OAAAsD,EAAA,EAAAtD,CAAAY,KAAAkmB,GAAA9mB,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAA8mB,GAAAnmB,MAAAC,KAAAR,YAAA,OAAAJ,OAAA8D,EAAA,EAAA9D,CAAA8mB,EAAA1jB,GAAApD,OAAA+D,EAAA,EAAA/D,CAAA8mB,EAAA,EAAAvmB,IAAA,SAAAyD,MAAA,WAGI,OACEzC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAC6b,GAAD,CACE5F,MAAM,QACN1I,YAAY,mCAEXpO,KAAKgC,MAAMsP,YAAY7R,OAAS,EAAIkB,EAAAC,EAAAC,cAACslB,GAAD,MAAgBxlB,EAAAC,EAAAC,cAACulB,GAAD,YAT/DF,EAAA,CAAiC1iB,cAgBjC0iB,GAAc1b,YAAQ,SAAC3H,GAAD,MAAY,CAChCyO,YAAazO,EAAMyO,cADP9G,CAEV0b,QAGErJ,eAEJ,SAAAA,EAAY7a,GAAO,IAAAS,EAAA,OAAArD,OAAAsD,EAAA,EAAAtD,CAAAY,KAAA6c,IACjBpa,EAAArD,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAAyd,GAAA/c,KAAAE,KAAMgC,KAEDa,MAAQ,GACbJ,EAAKI,MAAMia,UAAW,EACtBra,EAAKI,MAAMme,YAAa,EACxBve,EAAKI,MAAMwjB,gBAAiB,EAC5B5jB,EAAKI,MAAMoe,WAAa,QACxBxe,EAAKI,MAAMqe,QAAS,EAEpBze,EAAKsa,eAAiBta,EAAKsa,eAAe5Q,KAApB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACtBA,EAAK0e,iBAAmB1e,EAAK0e,iBAAiBhV,KAAtB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACxBA,EAAKue,WAAave,EAAKue,WAAW7U,KAAhB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KAClBA,EAAK2e,SAAW3e,EAAK2e,SAASjV,KAAd/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KAChBA,EAAK4e,WAAa5e,EAAK4e,WAAWlV,KAAhB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KAClBA,EAAK6e,mBAAqB7e,EAAK6e,mBAAmBnV,KAAxB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KAC1BA,EAAK8e,cAAgB9e,EAAK8e,cAAcpV,KAAnB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACrBA,EAAK+e,YAAc/e,EAAK+e,YAAYrV,KAAjB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACnBA,EAAK6jB,qBAAuB7jB,EAAK6jB,qBAAqBna,KAA1B/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KAC5BA,EAAK4jB,eAAiB5jB,EAAK4jB,eAAela,KAApB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACtBA,EAAK8jB,aAAe9jB,EAAK8jB,aAAapa,KAAlB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACpBA,EAAK+jB,eAAiB/jB,EAAK+jB,eAAera,KAApB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACtBA,EAAKgkB,uBAAyBhkB,EAAKgkB,uBAAuBta,KAA5B/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KAC9BA,EAAKikB,kBAAoBjkB,EAAKikB,kBAAkBva,KAAvB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACzBA,EAAKkkB,gBAAkBlkB,EAAKkkB,gBAAgBxa,KAArB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACvBA,EAAKgf,WAAahf,EAAKgf,WAAWtV,KAAhB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KAClBA,EAAKmd,YAAcnd,EAAKmd,YAAYzT,KAAjB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KA1BFA,kFA8BA4P,GACbrS,KAAKgC,MAAMsP,cAAgBe,EAAUf,cACvCtR,KAAK0hB,mBACL1hB,KAAK4mB,+DAKMra,GACTA,GACFA,EAAMoV,iBAER3hB,KAAKiD,SAAS,CAAE6Z,UAAW9c,KAAK6C,MAAMia,sDAKlC9c,KAAKghB,aACPhhB,KAAKiD,SAAS,CAAE+d,YAAY,IAE5BhhB,KAAKiD,SAAS,CAAE+d,YAAY,+CAK1BhhB,KAAKghB,aACPhhB,KAAKqhB,aAELrhB,KAAKohB,gDAII,IAAA7O,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IACX,QAAAC,EAAAC,EAAwB5S,KAAKgC,MAAMsP,YAAnCuB,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAgD,KAArCsU,EAAqClU,EAAAvP,MAAAgR,GAAA,EAAAC,GAAA,EAAAC,OAAA5B,EAAA,IAC9C,QAAA6B,EAAAC,EAAmBqS,EAAUC,MAA7BjU,OAAAC,cAAAsB,GAAAG,EAAAC,EAAAzB,QAAAC,MAAAoB,GAAA,EAAoC,CAClC,IADkCG,EAAAnR,MACxB0L,QACR,OAAO,GAHmC,MAAAsE,GAAAiB,GAAA,EAAAC,EAAAlB,EAAA,YAAAgB,GAAA,MAAAI,EAAAnB,QAAAmB,EAAAnB,SAAA,WAAAgB,EAAA,MAAAC,KADrC,MAAAlB,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,GAQX,OAAO,qCAKP,IAAMnB,EAActR,KAAKgC,MAAMsP,YAAYwD,QADlCL,GAAA,EAAAC,GAAA,EAAAC,OAAAjC,EAAA,IAGT,QAAAkC,EAAAC,EAAwBvD,EAAxBuB,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,GAAA,EAAqC,KAA1BoS,EAA0BjS,EAAAxR,MAAA2R,GAAA,EAAAC,GAAA,EAAAC,OAAAvC,EAAA,IACnC,QAAAwC,EAAAC,EAAmB0R,EAAUC,MAA7BjU,OAAAC,cAAAiC,GAAAG,EAAAC,EAAApC,QAAAC,MAAA+B,GAAA,GAAAG,EAAA9R,MACO0L,SAAU,GAFkB,MAAAsE,GAAA4B,GAAA,EAAAC,EAAA7B,EAAA,YAAA2B,GAAA,MAAAI,EAAA9B,QAAA8B,EAAA9B,SAAA,WAAA2B,EAAA,MAAAC,KAH5B,MAAA7B,GAAAsB,GAAA,EAAAC,EAAAvB,EAAA,YAAAqB,GAAA,MAAAI,EAAAxB,QAAAwB,EAAAxB,SAAA,WAAAqB,EAAA,MAAAC,GAQT3U,KAAKgC,MAAM4U,SAASvF,GAAkB,CAAEC,YAAaA,0CAKrD,IAAMA,EAActR,KAAKgC,MAAMsP,YAAYwD,QADhCO,GAAA,EAAAC,GAAA,EAAAC,OAAA7C,EAAA,IAGX,QAAA8C,EAAAC,EAAwBnE,EAAxBuB,OAAAC,cAAAuC,GAAAG,EAAAC,EAAA1C,QAAAC,MAAAqC,GAAA,EAAqC,KAA1BwR,EAA0BrR,EAAApS,MAAAwS,GAAA,EAAAC,GAAA,EAAAC,OAAApD,EAAA,IACnC,QAAAqD,EAAAC,EAAmB6Q,EAAUC,MAA7BjU,OAAAC,cAAA8C,GAAAG,EAAAC,EAAAjD,QAAAC,MAAA4C,GAAA,GAAAG,EAAA3S,MACO0L,SAAU,GAFkB,MAAAsE,GAAAyC,GAAA,EAAAC,EAAA1C,EAAA,YAAAwC,GAAA,MAAAI,EAAA3C,QAAA2C,EAAA3C,SAAA,WAAAwC,EAAA,MAAAC,KAH1B,MAAA1C,GAAAkC,GAAA,EAAAC,EAAAnC,EAAA,YAAAiC,GAAA,MAAAI,EAAApC,QAAAoC,EAAApC,SAAA,WAAAiC,EAAA,MAAAC,GAQXvV,KAAKgC,MAAM4U,SAASvF,GAAkB,CAAEC,YAAaA,gDAIpCyV,GAAS,IAAA/C,GAAA,EAAAC,GAAA,EAAAC,OAAAxR,EAAA,IAC1B,QAAAyR,EAAAC,EAAwBpkB,KAAKgC,MAAMsP,YAAnCuB,OAAAC,cAAAkR,GAAAG,EAAAC,EAAArR,QAAAC,MAAAgR,GAAA,EAAgD,KAArC6C,EAAqC1C,EAAA/gB,MAAAyf,GAAA,EAAAC,GAAA,EAAAC,OAAArQ,EAAA,IAC9C,QAAAsQ,EAAAC,EAAmB4D,EAAUC,MAA7BjU,OAAAC,cAAA+P,GAAAG,EAAAC,EAAAlQ,QAAAC,MAAA6P,GAAA,EAAoC,KAAzB3X,EAAyB8X,EAAA5f,MAClC,IAAKpD,KAAKgnB,aAAa9b,EAAM6b,IAAY7b,EAAK4D,QAC5C,OAAO,GAHmC,MAAAsE,GAAA0P,GAAA,EAAAC,EAAA3P,EAAA,YAAAyP,GAAA,MAAAI,EAAA5P,QAAA4P,EAAA5P,SAAA,WAAAyP,EAAA,MAAAC,KADtB,MAAA3P,GAAA6Q,GAAA,EAAAC,EAAA9Q,EAAA,YAAA4Q,GAAA,MAAAI,EAAA/Q,QAAA+Q,EAAA/Q,SAAA,WAAA4Q,EAAA,MAAAC,GAQ1B,OAAO,wCAIK6C,GACZ,IAAMzV,EAActR,KAAKgC,MAAMsP,YAAYwD,QADtBqO,GAAA,EAAAC,GAAA,EAAAC,OAAA3Q,EAAA,IAGrB,QAAA4Q,EAAAC,EAAwBjS,EAAxBuB,OAAAC,cAAAqQ,GAAAG,EAAAC,EAAAxQ,QAAAC,MAAAmQ,GAAA,EAAqC,KAA1B0D,EAA0BvD,EAAAlgB,MAAA6jB,GAAA,EAAAC,GAAA,EAAAC,OAAAzU,EAAA,IACnC,QAAA0U,EAAAC,EAAmBR,EAAUC,MAA7BjU,OAAAC,cAAAmU,GAAAG,EAAAC,EAAAtU,QAAAC,MAAAiU,GAAA,EAAoC,KAAzB/b,EAAyBkc,EAAAhkB,MAC9BpD,KAAKgnB,aAAa9b,EAAM6b,KAC1B7b,EAAK4D,SAAW5D,EAAK4D,UAHU,MAAAsE,GAAA8T,GAAA,EAAAC,EAAA/T,EAAA,YAAA6T,GAAA,MAAAI,EAAAhU,QAAAgU,EAAAhU,SAAA,WAAA6T,EAAA,MAAAC,KAHhB,MAAA/T,GAAAgQ,GAAA,EAAAC,EAAAjQ,EAAA,YAAA+P,GAAA,MAAAI,EAAAlQ,QAAAkQ,EAAAlQ,SAAA,WAAA+P,EAAA,MAAAC,GAUrBrjB,KAAKgC,MAAM4U,SAASvF,GAAkB,CAAEC,YAAaA,yCAI3CyV,GACV,IAAMzV,EAActR,KAAKgC,MAAMsP,YAAYwD,QACrCwM,EAAqBthB,KAAKshB,mBAAmByF,GAFhCO,GAAA,EAAAC,GAAA,EAAAC,OAAA9U,EAAA,IAInB,QAAA+U,EAAAC,EAAwBpW,EAAxBuB,OAAAC,cAAAwU,GAAAG,EAAAC,EAAA3U,QAAAC,MAAAsU,GAAA,EAAqC,KAA1BT,EAA0BY,EAAArkB,MAAAukB,GAAA,EAAAC,GAAA,EAAAC,OAAAnV,EAAA,IACnC,QAAAoV,EAAAC,EAAmBlB,EAAUC,MAA7BjU,OAAAC,cAAA6U,GAAAG,EAAAC,EAAAhV,QAAAC,MAAA2U,GAAA,EAAoC,KAAzBzc,EAAyB4c,EAAA1kB,MAC9Bke,GAAsBthB,KAAKgnB,aAAa9b,EAAM6b,GAChD7b,EAAK4D,SAAU,EAEf5D,EAAK4D,SAAU,GALgB,MAAAsE,GAAAwU,GAAA,EAAAC,EAAAzU,EAAA,YAAAuU,GAAA,MAAAI,EAAA1U,QAAA0U,EAAA1U,SAAA,WAAAuU,EAAA,MAAAC,KAJlB,MAAAzU,GAAAmU,GAAA,EAAAC,EAAApU,EAAA,YAAAkU,GAAA,MAAAI,EAAArU,QAAAqU,EAAArU,SAAA,WAAAkU,EAAA,MAAAC,GAanBxnB,KAAKgC,MAAM4U,SAASvF,GAAkB,CAAEC,YAAaA,oDAKjDtR,KAAKqmB,iBACPrmB,KAAKiD,SAAS,CAAEojB,gBAAgB,IAEhCrmB,KAAKiD,SAAS,CAAEojB,gBAAgB,mDAK9BrmB,KAAKqmB,iBACPrmB,KAAKwmB,iBAELxmB,KAAKumB,wDAIQ,IAAAyB,GAAA,EAAAC,GAAA,EAAAC,OAAAxV,EAAA,IACf,QAAAyV,EAAAC,EAAwBpoB,KAAKgC,MAAMsP,YAAnCuB,OAAAC,cAAAkV,GAAAG,EAAAC,EAAArV,QAAAC,MAAAgV,GAAA,EAAgD,KAArCnB,EAAqCsB,EAAA/kB,MAAAilB,GAAA,EAAAC,GAAA,EAAAC,OAAA7V,EAAA,IAC9C,QAAA8V,EAAAC,EAAmB5B,EAAUC,MAA7BjU,OAAAC,cAAAuV,GAAAG,EAAAC,EAAA1V,QAAAC,MAAAqV,GAAA,EAAoC,CAClC,IADkCG,EAAAplB,MACxBslB,YACR,OAAO,GAHmC,MAAAtV,GAAAkV,GAAA,EAAAC,EAAAnV,EAAA,YAAAiV,GAAA,MAAAI,EAAApV,QAAAoV,EAAApV,SAAA,WAAAiV,EAAA,MAAAC,KADjC,MAAAnV,GAAA6U,GAAA,EAAAC,EAAA9U,EAAA,YAAA4U,GAAA,MAAAI,EAAA/U,QAAA+U,EAAA/U,SAAA,WAAA4U,EAAA,MAAAC,GAQf,OAAO,yCAKP,IAAM5W,EAActR,KAAKgC,MAAMsP,YAAYwD,QAD9B6T,GAAA,EAAAC,GAAA,EAAAC,OAAAnW,EAAA,IAGb,QAAAoW,EAAAC,EAAwBzX,EAAxBuB,OAAAC,cAAA6V,GAAAG,EAAAC,EAAAhW,QAAAC,MAAA2V,GAAA,EAAqC,KAA1B9B,EAA0BiC,EAAA1lB,MAAA4lB,GAAA,EAAAC,GAAA,EAAAC,OAAAxW,EAAA,IACnC,QAAAyW,EAAAC,EAAmBvC,EAAUC,MAA7BjU,OAAAC,cAAAkW,GAAAG,EAAAC,EAAArW,QAAAC,MAAAgW,GAAA,GAAAG,EAAA/lB,MACOslB,aAAc,GAFc,MAAAtV,GAAA6V,GAAA,EAAAC,EAAA9V,EAAA,YAAA4V,GAAA,MAAAI,EAAA/V,QAAA+V,EAAA/V,SAAA,WAAA4V,EAAA,MAAAC,KAHxB,MAAA9V,GAAAwV,GAAA,EAAAC,EAAAzV,EAAA,YAAAuV,GAAA,MAAAI,EAAA1V,QAAA0V,EAAA1V,SAAA,WAAAuV,EAAA,MAAAC,GAQb7oB,KAAKgC,MAAM4U,SAASvF,GAAkB,CAAEC,YAAaA,8CAKrD,IAAMA,EAActR,KAAKgC,MAAMsP,YAAYwD,QAD5BuU,GAAA,EAAAC,GAAA,EAAAC,OAAA7W,EAAA,IAGf,QAAA8W,EAAAC,EAAwBnY,EAAxBuB,OAAAC,cAAAuW,GAAAG,EAAAC,EAAA1W,QAAAC,MAAAqW,GAAA,EAAqC,KAA1BxC,EAA0B2C,EAAApmB,MAAAsmB,GAAA,EAAAC,GAAA,EAAAC,OAAAlX,EAAA,IACnC,QAAAmX,EAAAC,EAAmBjD,EAAUC,MAA7BjU,OAAAC,cAAA4W,GAAAG,EAAAC,EAAA/W,QAAAC,MAAA0W,GAAA,GAAAG,EAAAzmB,MACOslB,aAAc,GAFc,MAAAtV,GAAAuW,GAAA,EAAAC,EAAAxW,EAAA,YAAAsW,GAAA,MAAAI,EAAAzW,QAAAyW,EAAAzW,SAAA,WAAAsW,EAAA,MAAAC,KAHtB,MAAAxW,GAAAkW,GAAA,EAAAC,EAAAnW,EAAA,YAAAiW,GAAA,MAAAI,EAAApW,QAAAoW,EAAApW,SAAA,WAAAiW,EAAA,MAAAC,GAQfvpB,KAAKgC,MAAM4U,SAASvF,GAAkB,CAAEC,YAAaA,oDAIhCyV,GAAS,IAAAgD,GAAA,EAAAC,GAAA,EAAAC,OAAAvX,EAAA,IAC9B,QAAAwX,EAAAC,EAAwBnqB,KAAKgC,MAAMsP,YAAnCuB,OAAAC,cAAAiX,GAAAG,EAAAC,EAAApX,QAAAC,MAAA+W,GAAA,EAAgD,KAArClD,EAAqCqD,EAAA9mB,MAAAgnB,GAAA,EAAAC,GAAA,EAAAC,OAAA5X,EAAA,IAC9C,QAAA6X,EAAAC,EAAmB3D,EAAUC,MAA7BjU,OAAAC,cAAAsX,GAAAG,EAAAC,EAAAzX,QAAAC,MAAAoX,GAAA,EAAoC,KAAzBlf,EAAyBqf,EAAAnnB,MAClC,IAAKpD,KAAKgnB,aAAa9b,EAAM6b,IAAY7b,EAAKwd,YAC5C,OAAO,GAHmC,MAAAtV,GAAAiX,GAAA,EAAAC,EAAAlX,EAAA,YAAAgX,GAAA,MAAAI,EAAAnX,QAAAmX,EAAAnX,SAAA,WAAAgX,EAAA,MAAAC,KADlB,MAAAlX,GAAA4W,GAAA,EAAAC,EAAA7W,EAAA,YAAA2W,GAAA,MAAAI,EAAA9W,QAAA8W,EAAA9W,SAAA,WAAA2W,EAAA,MAAAC,GAQ9B,OAAO,4CAISlD,GAChB,IAAMzV,EAActR,KAAKgC,MAAMsP,YAAYwD,QADlB2V,GAAA,EAAAC,GAAA,EAAAC,OAAAjY,EAAA,IAGzB,QAAAkY,EAAAC,EAAwBvZ,EAAxBuB,OAAAC,cAAA2X,GAAAG,EAAAC,EAAA9X,QAAAC,MAAAyX,GAAA,EAAqC,KAA1B5D,EAA0B+D,EAAAxnB,MAAA0nB,GAAA,EAAAC,GAAA,EAAAC,OAAAtY,EAAA,IACnC,QAAAuY,EAAAC,EAAmBrE,EAAUC,MAA7BjU,OAAAC,cAAAgY,GAAAG,EAAAC,EAAAnY,QAAAC,MAAA8X,GAAA,EAAoC,KAAzB5f,EAAyB+f,EAAA7nB,MAC9BpD,KAAKgnB,aAAa9b,EAAM6b,KAC1B7b,EAAKwd,aAAexd,EAAKwd,cAHM,MAAAtV,GAAA2X,GAAA,EAAAC,EAAA5X,EAAA,YAAA0X,GAAA,MAAAI,EAAA7X,QAAA6X,EAAA7X,SAAA,WAAA0X,EAAA,MAAAC,KAHZ,MAAA5X,GAAAsX,GAAA,EAAAC,EAAAvX,EAAA,YAAAqX,GAAA,MAAAI,EAAAxX,QAAAwX,EAAAxX,SAAA,WAAAqX,EAAA,MAAAC,GAUzB3qB,KAAKgC,MAAM4U,SAASvF,GAAkB,CAAEC,YAAaA,6CAIvCyV,GACd,IAAMzV,EAActR,KAAKgC,MAAMsP,YAAYwD,QACrC2R,EAAyBzmB,KAAKymB,uBAAuBM,GAFpCoE,GAAA,EAAAC,GAAA,EAAAC,OAAA3Y,EAAA,IAIvB,QAAA4Y,EAAAC,EAAwBja,EAAxBuB,OAAAC,cAAAqY,GAAAG,EAAAC,EAAAxY,QAAAC,MAAAmY,GAAA,EAAqC,KAA1BtE,EAA0ByE,EAAAloB,MAAAooB,GAAA,EAAAC,GAAA,EAAAC,OAAAhZ,EAAA,IACnC,QAAAiZ,EAAAC,EAAmB/E,EAAUC,MAA7BjU,OAAAC,cAAA0Y,GAAAG,EAAAC,EAAA7Y,QAAAC,MAAAwY,GAAA,EAAoC,KAAzBtgB,EAAyBygB,EAAAvoB,MAC9BqjB,EACFvb,EAAKwd,aAAc,EAEf1oB,KAAKgnB,aAAa9b,EAAM6b,GAC1B7b,EAAKwd,aAAc,EAEnBxd,EAAKwd,aAAc,GARU,MAAAtV,GAAAqY,GAAA,EAAAC,EAAAtY,EAAA,YAAAoY,GAAA,MAAAI,EAAAvY,QAAAuY,EAAAvY,SAAA,WAAAoY,EAAA,MAAAC,KAJd,MAAAtY,GAAAgY,GAAA,EAAAC,EAAAjY,EAAA,YAAA+X,GAAA,MAAAI,EAAAlY,QAAAkY,EAAAlY,SAAA,WAAA+X,EAAA,MAAAC,GAiBvBrrB,KAAKgC,MAAM4U,SAASvF,GAAkB,CAAEC,YAAaA,0CAI1Cua,EAAOC,GAClB,OACEC,KAAKC,UAAUH,EAAMI,YAAcF,KAAKC,UAAUF,EAAMG,WACxDF,KAAKC,UAAUH,EAAMK,WAAaH,KAAKC,UAAUF,EAAMI,4CAKhDjL,GACT,IAAMW,EAAW,GACjBA,EAASX,WAAaA,EAElBA,IAAejhB,KAAK6C,MAAMoe,WAC5BW,EAASV,QAAUlhB,KAAK6C,MAAMqe,OAE9BU,EAASV,QAAS,EAEpBlhB,KAAKiD,SAAS2e,0CAIDhhB,EAAGuT,EAAGxU,GAEnB,IAAMkiB,EAAaC,OAAOlhB,EAAEjB,IAAQmiB,OAAO3N,EAAExU,IAC7C,OAAKmiB,OAAOC,MAAMF,GAIdjhB,EAAEjB,GAAOwU,EAAExU,IACL,EACDiB,EAAEjB,GAAOwU,EAAExU,GACX,EAEA,EARAkiB,wCAcN7hB,KAAKgC,MAAMsP,YAAY7R,QACvBO,KAAKgC,MAAMiP,WAAWxF,MACtBzL,KAAKgC,MAAMkP,WAAWzF,MAUzBmU,GAsZJ,SAAwBtO,GACtB,IAAI2M,EAAQ,GADuBkO,GAAA,EAAAC,GAAA,EAAAC,OAAA3Z,EAAA,IAEnC,QAAA4Z,EAAAC,EAAwBjb,EAAxBuB,OAAAC,cAAAqZ,GAAAG,EAAAC,EAAAxZ,QAAAC,MAAAmZ,GAAA,OAAWtF,EAAXyF,EAAAlpB,MACE6a,EAAK7e,OAAA2e,EAAA,EAAA3e,CAAA,GAAQ6e,EAAU4I,EAAU5I,QAHA,MAAA7K,GAAAgZ,GAAA,EAAAC,EAAAjZ,EAAA,YAAA+Y,GAAA,MAAAI,EAAAlZ,QAAAkZ,EAAAlZ,SAAA,WAAA+Y,EAAA,MAAAC,GAKnC,IAAIzG,EAAQ,GALuB4G,GAAA,EAAAC,GAAA,EAAAC,OAAAha,EAAA,IAMnC,QAAAia,EAAAC,EAAwBtb,EAAxBuB,OAAAC,cAAA0Z,GAAAG,EAAAC,EAAA7Z,QAAAC,MAAAwZ,GAAA,OAAW3F,EAAX8F,EAAAvpB,MACEwiB,EAAKxmB,OAAA2e,EAAA,EAAA3e,CAAA,GAAQwmB,EAAUiB,EAAUgG,gBAPA,MAAAzZ,GAAAqZ,GAAA,EAAAC,EAAAtZ,EAAA,YAAAoZ,GAAA,MAAAI,EAAAvZ,QAAAuZ,EAAAvZ,SAAA,WAAAoZ,EAAA,MAAAC,GASnC,IAAI5F,EAAQ,GATuBgG,GAAA,EAAAC,GAAA,EAAAC,OAAAta,EAAA,IAUnC,QAAAua,EAAAC,EAAwB5b,EAAxBuB,OAAAC,cAAAga,GAAAG,EAAAC,EAAAna,QAAAC,MAAA8Z,GAAA,OAAWjG,EAAXoG,EAAA7pB,MACE0jB,EAAK,GAAA1J,OAAAhe,OAAA+tB,GAAA,EAAA/tB,CAAO0nB,GAAP1nB,OAAA+tB,GAAA,EAAA/tB,CAAiBynB,EAAUC,SAXC,MAAA1T,GAAA2Z,GAAA,EAAAC,EAAA5Z,EAAA,YAAA0Z,GAAA,MAAAI,EAAA7Z,QAAA6Z,EAAA7Z,SAAA,WAAA0Z,EAAA,MAAAC,GAanC,IAbmC,IAAAI,EAahBtG,EAAnBuG,EAAA,EAAAA,EAAAD,EAAA3tB,OAAA4tB,IAA0B,CAArB,IAAMniB,EAAIkiB,EAAAC,GACbniB,EAAKoiB,YAAcC,GAAgBC,GAAatiB,EAAM+S,EAAO2H,IAAQ3P,KACnE,IAKJ,IADA,IAAI+L,EAAU,GAnBqByL,EAoBfruB,OAAOgB,KAAK0mB,EAAM,IAAtC4G,EAAA,EAAAA,EAAAD,EAAAhuB,OAAAiuB,IAA2C,CAAtC,IAAM3S,EAAK0S,EAAAC,GAEe,kBAApB5G,EAAM,GAAG/L,IACW,kBAApB+L,EAAM,GAAG/L,IAEhBiH,EAAQ9O,KAAK6H,GAIjB,IAAMzH,EAAQ,CACZga,YAAa,EACb5c,SAAU,EACVid,MAAO,EACPC,gBAAiB,GAEnB5L,EAAUA,EAAQ9N,KAAK,SAACtT,EAAGuT,GACzB,OAAIb,EAAM1S,IAAM0S,EAAMa,GACbb,EAAM1S,GAAK0S,EAAMa,GACjBb,EAAM1S,IACL,EACD0S,EAAMa,GACN,EAEAA,EAAIvT,IAGf,IAAMgiB,EAAQ,GACdA,EAAM1P,KAAK8O,GACX,IAhDmC,IAAA6L,EAgDd/G,EAArBgH,EAAA,EAAAA,EAAAD,EAAApuB,OAAAquB,IAA4B,CAAvB,IAAMtT,EAAMqT,EAAAC,GACT5K,EAAM,GADc6K,GAAA,EAAAC,GAAA,EAAAC,OAAAvb,EAAA,IAE1B,QAAAwb,EAAAC,EAAqBnM,EAArBnP,OAAAC,cAAAib,GAAAG,EAAAC,EAAApb,QAAAC,MAAA+a,GAAA,OAAWvK,EAAX0K,EAAA9qB,MACE8f,EAAIhQ,KAAKsH,EAAOgJ,KAHQ,MAAApQ,GAAA4a,GAAA,EAAAC,EAAA7a,EAAA,YAAA2a,GAAA,MAAAI,EAAA9a,QAAA8a,EAAA9a,SAAA,WAAA2a,EAAA,MAAAC,GAI1BrL,EAAM1P,KAAKgQ,GAGb,OAAON,EAndawL,CAAepuB,KAAKgC,MAAMsP,aAC3B,CACf,QACAmP,GAAqBzgB,KAAKgC,MAAMiP,WAAWxF,MAC3CgV,GAAqBzgB,KAAKgC,MAAMkP,WAAWzF,OAC3CwK,KAAK,uCAKA,IAAAzJ,EAAAxM,KACHie,EAAQ,GADLoQ,GAAA,EAAAC,GAAA,EAAAC,OAAA7b,EAAA,IAEP,QAAA8b,EAAAC,EAAwBzuB,KAAKgC,MAAMsP,YAAnCuB,OAAAC,cAAAub,GAAAG,EAAAC,EAAA1b,QAAAC,MAAAqb,GAAA,OAAWxH,EAAX2H,EAAAprB,MACE6a,EAAK7e,OAAA2e,EAAA,EAAA3e,CAAA,GAAQ6e,EAAU4I,EAAU5I,QAH5B,MAAA7K,GAAAkb,GAAA,EAAAC,EAAAnb,EAAA,YAAAib,GAAA,MAAAI,EAAApb,QAAAob,EAAApb,SAAA,WAAAib,EAAA,MAAAC,GAKP,IAAI3I,EAAQ,GALL8I,GAAA,EAAAC,GAAA,EAAAC,OAAAlc,EAAA,IAMP,QAAAmc,EAAAC,EAAwB9uB,KAAKgC,MAAMsP,YAAnCuB,OAAAC,cAAA4b,GAAAG,EAAAC,EAAA/b,QAAAC,MAAA0b,GAAA,OAAW7H,EAAXgI,EAAAzrB,MACEwiB,EAAKxmB,OAAA2e,EAAA,EAAA3e,CAAA,GAAQwmB,EAAUiB,EAAUgG,gBAP5B,MAAAzZ,GAAAub,GAAA,EAAAC,EAAAxb,EAAA,YAAAsb,GAAA,MAAAI,EAAAzb,QAAAyb,EAAAzb,SAAA,WAAAsb,EAAA,MAAAC,GASP,IAAIG,EAAc,GATXC,GAAA,EAAAC,GAAA,EAAAC,OAAAxc,EAAA,IAUP,QAAAyc,EAAAC,EAAwBpvB,KAAKgC,MAAMsP,YAAnCuB,OAAAC,cAAAkc,GAAAG,EAAAC,EAAArc,QAAAC,MAAAgc,GAAA,OAAWnI,EAAXsI,EAAA/rB,MACE2rB,EAAW,GAAA3R,OAAAhe,OAAA+tB,GAAA,EAAA/tB,CAAO2vB,GAAP3vB,OAAA+tB,GAAA,EAAA/tB,CAAuBynB,EAAUC,SAXvC,MAAA1T,GAAA6b,GAAA,EAAAC,EAAA9b,EAAA,YAAA4b,GAAA,MAAAI,EAAA/b,QAAA+b,EAAA/b,SAAA,WAAA4b,EAAA,MAAAC,GAcPH,EAAcA,EAAY3jB,IAAI,SAACF,GAAD,OAAA9L,OAAA2e,EAAA,EAAA3e,CAAA,GACzB8L,EADyB,CAE5BmkB,gBAAiBpkB,GACfuiB,GAAatiB,EAAM+S,EAAO2H,GAC1BpZ,EAAK3J,MAAMia,UAEbyQ,gBAAiBA,GAAgBC,GAAatiB,EAAM+S,EAAO2H,QAI7D,IAAM3E,EAAajhB,KAAK6C,MAAMoe,WAG9B8N,EAAY7a,KAAK,SAACtT,EAAGuT,GAAJ,OAAU3H,EAAKoX,eAAehjB,EAAGuT,EAAG8M,KAGjDjhB,KAAK6C,MAAMqe,QACb6N,EAAYlL,UAGd,IAAMyL,EAAYP,EAAYtvB,OAC1B8vB,EAAoB,EAnCjBC,GAAA,EAAAC,GAAA,EAAAC,OAAAhd,EAAA,IAoCP,QAAAid,EAAAC,EAAmBb,EAAnBlc,OAAAC,cAAA0c,GAAAG,EAAAC,EAAA7c,QAAAC,MAAAwc,GAAA,EAAgC,CAAAG,EAAAvsB,MACrB0L,SACPygB,KAtCG,MAAAnc,GAAAqc,GAAA,EAAAC,EAAAtc,EAAA,YAAAoc,GAAA,MAAAI,EAAAvc,QAAAuc,EAAAvc,SAAA,WAAAoc,EAAA,MAAAC,GAyCP,OACE/uB,EAAAC,EAAAC,cAACgvB,GAAaje,SAAd,CACExO,MAAO,CACL2rB,YAAaA,EACbjS,SAAU9c,KAAK6C,MAAMia,SACrBkE,WAAYhhB,KAAK6C,MAAMme,WACvBG,iBAAkBnhB,KAAKmhB,iBACvBI,cAAevhB,KAAKuhB,cACpBC,YAAaxhB,KAAKwhB,YAClB6E,eAAgBrmB,KAAK6C,MAAMwjB,eAC3BC,qBAAsBtmB,KAAKsmB,qBAC3BI,kBAAmB1mB,KAAK0mB,kBACxBC,gBAAiB3mB,KAAK2mB,gBACtB1F,WAAYjhB,KAAK6C,MAAMoe,WACvBC,OAAQlhB,KAAK6C,MAAMqe,OACnBO,WAAYzhB,KAAKyhB,aAGnB9gB,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,eACb3C,EAAAC,EAAAC,cAACyd,GAAD,CACElR,KAAK,OACLrD,KAAMua,IACNhhB,UAAU,oBACV+K,QAASrO,KAAK4f,YACdxR,YAAY,gCAEdzN,EAAAC,EAAAC,cAACyd,GAAD,CACElR,KAAMpN,KAAK6C,MAAMia,SAAW,aAAe,aAC3C/S,KAAM/J,KAAK6C,MAAMia,SAAWyH,IAAcC,IAC1ClhB,UAAU,oBACV+K,QAASrO,KAAK+c,eACd3O,YAAY,iBAEdzN,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,qBACZgsB,EADH,aACwBC,EADxB,cAIF5uB,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,kBAAkBwI,gBAAe9L,KAAK6C,MAAMia,UACzDnc,EAAAC,EAAAC,cAAA,SACEyC,UAAU,qBACVwI,gBAAe9L,KAAK6C,MAAMia,UAE1Bnc,EAAAC,EAAAC,cAACivB,GAAD,MACAnvB,EAAAC,EAAAC,cAACkvB,GAAD,gBA7XYvsB,aAqYlB6gB,GAAe9W,IAAM0E,cAAc,IAEzC4K,GAAYrS,YAAQ,SAAC3H,GAAD,MAAY,CAC9BoO,WAAYpO,EAAMoO,WAClBC,WAAYrO,EAAMqO,WAClBrG,UAAWhI,EAAMgI,UACjByG,YAAazO,EAAMyO,cAJT9G,CAKRqS,QAIE8H,oLAEK,IAAAzO,EAAAlW,KAEHoO,EAAc,GACdpO,KAAKgC,MAAMuN,iBAAiBuO,aAC9B1P,EAAWhP,OAAA2e,EAAA,EAAA3e,CAAA,GACNgP,EACApO,KAAKgC,MAAMuN,iBAAiBuO,WAAWE,OACvChe,KAAKgC,MAAMuN,iBAAiBuO,WAAWG,QAG9C7P,EAAWhP,OAAA2e,EAAA,EAAA3e,CAAA,GAAQgP,EAAgBpO,KAAKgC,MAAMkc,oBAG9C,IAAM2G,EACJlkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyM,SAAA,KACE1M,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,UACZ3C,EAAAC,EAAAC,cAACmvB,GAAD,CACElhB,QAAS9O,KAAKgY,QAAQgJ,WACtB3S,QAAS,kBAAM6H,EAAK8B,QAAQmJ,oBAC5B5S,YAAa,kBAAM2H,EAAK8B,QAAQmJ,oBAChC/S,YAAY,oBAGhBzN,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,UACZ3C,EAAAC,EAAAC,cAACovB,GAAD,CACEnhB,QAAS9O,KAAKgY,QAAQqO,eACtBhY,QAAS,kBAAM6H,EAAK8B,QAAQsO,wBAC5B/X,YAAa,kBAAM2H,EAAK8B,QAAQsO,wBAChClY,YAAY,yBAGhBzN,EAAAC,EAAAC,cAACqvB,GAAD,CACE5sB,UAAU,aACV0hB,YAAY,OACZC,UAAU,WACV7W,YAAaA,EAAW,SACxBhB,KAAK,aAEPzM,EAAAC,EAAAC,cAACqvB,GAAD,CACE5sB,UAAU,cACV0hB,YAAY,OACZC,UAAU,kBACV7W,YAAaA,EAAW,KACxBhB,KAAK,SAEPzM,EAAAC,EAAAC,cAACqvB,GAAD,CACE5sB,UAAU,QACV2hB,UAAU,QACV7W,YAAaA,EAAW,MACxBhB,KAAK,eAEPzM,EAAAC,EAAAC,cAACqvB,GAAD,CACE5sB,UAAU,QACV2hB,UAAU,kBACV7W,YAAaA,EAAW,gBACxBhB,KAAK,eAKX,OACEzM,EAAAC,EAAAC,cAAA,SAAOyC,UAAU,eACf3C,EAAAC,EAAAC,cAAA,UAAKgkB,WAhEWrhB,aAsExBmhB,GAAU5L,YAAcsL,GAExBM,GAAYna,YAAQ,SAAC3H,GAAD,MAAY,CAC9B0M,iBAAkB1M,EAAM0M,iBACxB2O,mBAAoBrb,EAAMqb,qBAFhB1T,CAGRma,QAGEQ,oLAGF,OACExkB,EAAAC,EAAAC,cAAA,MAAIyC,UAAWtD,KAAKgC,MAAMsB,WACxB3C,EAAAC,EAAAC,cAACsvB,GAAD,CACE/iB,KAAMpN,KAAKgC,MAAMoL,KACjBgB,YAAapO,KAAKgC,MAAMoM,YACxB6W,UAAWjlB,KAAKgC,MAAMijB,UACtB3hB,UAAWtD,KAAKgC,MAAMgjB,sBATJxhB,aAiBtB6hB,oLAEK,IAAA9O,EAAAvW,KACP,OACEW,EAAAC,EAAAC,cAAC8N,GAAD,CACEP,YAAapO,KAAKgC,MAAMoM,YACxB9K,UAAW,gBAAkBtD,KAAKgC,MAAMsB,WAAa,IACrD+K,QAAS,kBAAMkI,EAAKyB,QAAQyJ,WAAWlL,EAAKvU,MAAMijB,aAEjDjlB,KAAKgC,MAAMoL,KACZzM,EAAAC,EAAAC,cAAC+N,EAAA,EAAD,CACE7E,KACE/J,KAAKgC,MAAMijB,YAAcjlB,KAAKgY,QAAQiJ,WAClCjhB,KAAKgY,QAAQkJ,OACXoE,IACAC,IACFC,cAhBShiB,aAwBzB6hB,GAAWtM,YAAcsL,OAInBoB,oLAGF,OACE9kB,EAAAC,EAAAC,cAAA,aACGb,KAAKgY,QAAQ+W,YAAY3jB,IAAI,SAACF,EAAMI,GAAP,OAC5B3K,EAAAC,EAAAC,cAACuvB,GAAD,CACEzwB,IAAK2L,EACLJ,KAAMA,EACN4D,QAAS5D,EAAK4D,QACd4Z,YAAaxd,EAAKwd,wBAVNllB,aAkBxBiiB,GAAU1M,YAAcsL,GAExBoB,GAAYjb,YAAQ,SAAC3H,GAAD,MAAY,CAC9ByO,YAAazO,EAAMyO,cADT9G,CAERib,QAIEE,oLAEK,IAAAjP,EAAA1W,KACDkL,EAAOlL,KAAKgC,MAAMkJ,KAGlB2Z,EACJlkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyM,SAAA,KACE1M,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACmvB,GAAD,CACElhB,QAAS9O,KAAKgC,MAAM8M,QACpBT,QAAS,kBAAMqI,EAAKsB,QAAQuJ,cAAc7K,EAAK1U,MAAMkJ,OACrDqD,YAAa,kBAAMmI,EAAKsB,QAAQwJ,YAAY9K,EAAK1U,MAAMkJ,OACvDkD,YAAY,yCAGhBzN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACovB,GAAD,CACEnhB,QAAS9O,KAAKgC,MAAM0mB,YACpBra,QAAS,kBAAMqI,EAAKsB,QAAQ0O,kBAAkBhQ,EAAK1U,MAAMkJ,OACzDqD,YAAa,kBAAMmI,EAAKsB,QAAQ2O,gBAAgBjQ,EAAK1U,MAAMkJ,OAC3DkD,YAAY,8CAGhBzN,EAAAC,EAAAC,cAACwvB,GAAD,CACE/sB,UAAU,aACVwiB,WAAW,OACX1iB,MAAO8H,EAAKwF,SACZgL,UAAWxQ,EAAKwF,WAElB/P,EAAAC,EAAAC,cAACwvB,GAAD,CACE/sB,UAAU,aACVwiB,WAAW,OACX1iB,MAAO8H,EAAKmkB,gBACZ3T,UAAWxQ,EAAKqiB,kBAElB5sB,EAAAC,EAAAC,cAACwvB,GAAD,CACEjtB,MAAO8H,EAAKyiB,MAAQ9O,GAAQ3T,EAAKyiB,OAAS,IAC1CjS,UAAWxQ,EAAKyiB,OAAS,MAE3BhtB,EAAAC,EAAAC,cAACwvB,GAAD,CACEjtB,MAAOyb,GAAQ3T,EAAK0iB,iBACpBlS,UAAWxQ,EAAK0iB,mBAKtB,OAAOjtB,EAAAC,EAAAC,cAAA,UAAKgkB,UA/CWrhB,aAmD3BmiB,GAAa5M,YAAcsL,OAGrB4B,oLAGF,OACEtlB,EAAAC,EAAAC,cAAA,MAAIyC,UAAWtD,KAAKgC,MAAMsB,UAAW6G,MAAOnK,KAAKgC,MAAMmI,OACrDxJ,EAAAC,EAAAC,cAACsd,GAAD,CACE/a,MAAOpD,KAAKgC,MAAMoB,MAClBsY,UAAW1b,KAAKgC,MAAM0Z,UACtBpY,UAAWtD,KAAKgC,MAAM8jB,qBARJtiB,aAgBtB+a,oLAGF,OACE5d,EAAAC,EAAAC,cAAA,SAAOyC,UAAU,0BACf3C,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,gBAAd,gCAPaE,aAgBzB,SAASgqB,GAAatiB,EAAM+S,EAAO2H,GACjC,IAAM0K,EAAY,GADsBC,GAAA,EAAAC,GAAA,EAAAC,OAAA/d,EAAA,IAExC,QAAAge,EAAAC,EAAqBzlB,EAAK+gB,SAA1BpZ,OAAAC,cAAAyd,GAAAG,EAAAC,EAAA5d,QAAAC,MAAAud,GAAA,EAAoC,KAC5BxZ,EAAOkH,EADqByS,EAAAttB,OAE7B2T,GAGLuZ,EAAUpd,KAAK,CACb3H,QAAS,OACTvB,KAAM+M,EAAKwC,SACX9N,KAAMsL,EAAKe,KAAKrM,QAVoB,MAAA2H,GAAAod,GAAA,EAAAC,EAAArd,EAAA,YAAAmd,GAAA,MAAAI,EAAAtd,QAAAsd,EAAAtd,SAAA,WAAAmd,EAAA,MAAAC,GAexC,IADA,IAAMG,EAAY,GACTtlB,EAAQ,EAAGA,EAAQJ,EAAKghB,QAAQzsB,OAAQ6L,IAAS,CACxD,IAAMulB,EAAOjL,EAAM1a,EAAKghB,QAAQ5gB,IAC1BwlB,EAAW7S,EAAM/S,EAAK+gB,SAAS3gB,IACrC,GAAKulB,GAASC,EAAd,CAGA,IAAInmB,EAAY,GACZkmB,EAAKE,WAELpmB,EADEkmB,EAAKG,kBAAoBF,EAASG,SACxB,UAEA,YAGhBL,EAAU1d,KAAK,CACb3H,QAAS,OACTvB,KAAM6mB,EAAKK,KACXvmB,UAAWA,KAKf,IADA,IAAMwmB,EAAgB,GApCkB1T,EAqCrB6S,EAAnB5S,EAAA,EAAAA,EAAAD,EAAAhe,OAAAie,IAA8B,CAAzB,IAAM3G,EAAI0G,EAAAC,GACbyT,EAAcje,KAAK6D,GACf6Z,EAAUnxB,OAAS,GACrB0xB,EAAcje,KAAK0d,EAAUQ,SAGjC,OAAOD,EAIT,SAAS5D,GAAgBriB,GACvB,OAAOA,EAAKE,IAAI,SAACC,GACf,GAAsB,SAAlBA,EAAME,QACR,OAAOF,EAAMI,KACf,GAAsB,SAAlBJ,EAAME,QAAoB,CAC5B,IAAI8lB,EAAQ,SAKZ,MAJwB,YAApBhmB,EAAMV,UACR0mB,EAAQ,SACmB,aAApBhmB,EAAMV,YACb0mB,EAAQ,UACH,CAAC,GAAIA,EAAOhmB,EAAMrB,KAAMqnB,EAAO,IAAIpb,KAAK,KAEjD,MAAO,gBC7sBLqb,eAEJ,SAAAA,EAAYtvB,GAAO,IAAAS,EAAA,OAAArD,OAAAsD,EAAA,EAAAtD,CAAAY,KAAAsxB,IACjB7uB,EAAArD,OAAAuD,EAAA,EAAAvD,CAAAY,KAAAZ,OAAAwD,EAAA,EAAAxD,CAAAkyB,GAAAxxB,KAAAE,KAAMgC,KAEDuvB,iBAAmB9uB,EAAK8uB,iBAAiBplB,KAAtB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACxBA,EAAK+uB,mBAAqB/uB,EAAK+uB,mBAAmBrlB,KAAxB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KAC1BA,EAAK0O,gBAAkB1O,EAAK0O,gBAAgBhF,KAArB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACvBA,EAAKgvB,cAAgBhvB,EAAKgvB,cAActlB,KAAnB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACrBA,EAAKivB,YAAcjvB,EAAKivB,YAAYvlB,KAAjB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KACnBA,EAAKkvB,YAAclvB,EAAKkvB,YAAYxlB,KAAjB/M,OAAAgN,EAAA,EAAAhN,QAAAgN,EAAA,EAAAhN,CAAAqD,KAGnBA,EAAK8uB,mBAEL9uB,EAAK+uB,qBAELzuB,OAAO6uB,iBAAiB,WAAYnvB,EAAK+uB,oBAfxB/uB,kFAmBA4P,GAEfA,EAAUpB,aAAejR,KAAKgC,MAAMiP,YACpCoB,EAAUnB,aAAelR,KAAKgC,MAAMkP,YAEpClR,KAAK6xB,eACHxf,EAAUjB,YAAcpR,KAAKgC,MAAMoP,WACrCpR,KAAK8xB,8DAKP9xB,KAAKgC,MAAM4U,SAAS,SAACA,GAEnB,IAAMmb,EAAW,CTzBdpiB,GAAUL,IAKVK,GAAUJ,IAKVI,GAAUvF,IAKV8T,ISgBH8T,QAAQC,IAAIF,GAAUjiB,KAAK,SAACG,GR7D3B,IAAAnO,EQ8DC8U,ERxDC,CACL5M,KAAM,kBACNgH,QAAS,CACPnG,WATC/I,EQ+DkB,CACb+I,UAAWoF,EAAQ,GACnBV,iBAAkBU,EAAQ,GAC1B7F,YAAa6F,EAAQ,GACrBiO,mBAAoBjO,EAAQ,KRlEtCpF,UASI0E,iBALHzN,EAHDyN,iBASInF,YANHtI,EAFDsI,YASI8T,mBAPHpc,EADDoc,uEQwEEle,KAAKgC,MAAM4U,SAAS,SAACA,GACnB,IAAMjG,EAAS,IAAIC,gBAAgB7N,OAAOmvB,SAASC,QAC7CC,EAAezhB,EAAO0hB,IAAI,UAC1BC,EAAe3hB,EAAO0hB,IAAI,UAG1BN,EAAW,CACfzhB,GAAe8hB,GACf9hB,GAAegiB,IAEjBN,QAAQC,IAAIF,GAAUjiB,KAAK,SAACG,GAC1B2G,EACE7F,GAAwB,CACtBE,WAAYhB,EAAQ,GACpBiB,WAAYjB,EAAQ,iDAW5BjQ,KAAKmR,kBACLnR,KAAKyxB,gBACLzxB,KAAK0xB,wDAIW,IAAAllB,EAAAxM,KAChBA,KAAKgC,MAAM4U,SAAS,SAACA,GAAD,OTrCjB,SAAyBpG,EAAUC,GACxC,IAAME,EAAS,IAAIC,gBAInB,OAHAD,EAAOE,IAAI,SAAUL,GAAY,IACjCG,EAAOE,IAAI,SAAUJ,GAAY,IAE1Bd,GADOF,GAAuB,IAAMkB,EAAOG,YAC1BhB,KAAK,SAACG,GAC5B,OAAOA,EAAQsiB,cSgCbC,CAAgBhmB,EAAKxK,MAAMiP,WAAWlQ,GAAIyL,EAAKxK,MAAMkP,WAAWnQ,IAAI+O,KAClE,SAACG,GAAD,OACE2G,EACEzF,GAAgB,CACdC,UAAWnB,iDASrB,IAAMwiB,EAAY,IAAI7hB,gBAAgB7N,OAAOmvB,SAASC,QAChDO,EAAY,IAAI9hB,gBAUtB,GARI5Q,KAAKgC,MAAMiP,WAAWlQ,IACxB2xB,EAAU7hB,IAAI,SAAU7Q,KAAKgC,MAAMiP,WAAWlQ,IAC5Cf,KAAKgC,MAAMkP,WAAWnQ,IACxB2xB,EAAU7hB,IAAI,SAAU7Q,KAAKgC,MAAMkP,WAAWnQ,MAM7C0xB,EAAUJ,IAAI,YAAcK,EAAUL,IAAI,UAC1CI,EAAUJ,IAAI,YAAcK,EAAUL,IAAI,WAF7C,CAMA,IAAIF,EAASO,EAAU5hB,WACnBqhB,EAAO1yB,OAAS,IAClB0yB,EAAS,IAAMA,GAEjB,IAAMviB,EAAM7M,OAAOmvB,SAASS,OAAS5vB,OAAOmvB,SAASU,SAAWT,EAChEpvB,OAAO8vB,QAAQC,UAAU,GAAI,GAAIljB,0CAKjC,GAAK5P,KAAKgC,MAAMiP,WAAWlQ,IAAOf,KAAKgC,MAAMkP,WAAWnQ,GAAxD,CAEA,IAAMgyB,EACJ,iBACC/yB,KAAKgC,MAAMiP,WAAWxF,MAAQ,OAC/B,YACCzL,KAAKgC,MAAMkP,WAAWzF,MAAQ,OACjCmB,SAASmmB,MAAQA,8CAKjB/yB,KAAK2xB,oDAIO,IAAAzb,EAAAlW,KACZA,KAAKgC,MAAM4U,SAAS,SAACA,GAEnB,IAAMmb,EAAW,GAFexf,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAGhC,QAAAC,EAAAC,EAAuBsD,EAAKlU,MAAMoP,UAAlCyB,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA6C,KAAlC7B,EAAkCiC,EAAAvP,MACvCsN,EAAS5B,SACXijB,EAAS7e,KACP3C,GACE2F,EAAKlU,MAAMiP,WAAWlQ,GACtBmV,EAAKlU,MAAMkP,WAAWnQ,GACtB2P,EAASwR,yBATe,MAAA9O,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,GAgBhCuf,QAAQC,IAAIF,GAAUjiB,KAAK,SAACG,GAC1B2G,EACEvF,GAAkB,CAChBC,YAAarB,0CASrB,OACEtP,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyM,SAAA,KACE1M,EAAAC,EAAAC,cAACmyB,EAAD,MACAryB,EAAAC,EAAAC,cAACoyB,GAAD,MACAtyB,EAAAC,EAAAC,cAACqyB,GAAD,MACAvyB,EAAAC,EAAAC,cAACsyB,GAAD,MACAxyB,EAAAC,EAAAC,cAACuyB,GAAD,cApLU5vB,aA0LlB8tB,GAAM9mB,YAAQ,SAAC3H,GAAD,MAAY,CACxBoO,WAAYpO,EAAMoO,WAClBC,WAAYrO,EAAMqO,WAClBE,UAAWvO,EAAMuO,YAHb5G,CAIF8mB,IC1MJ,IAAM+B,GAAQC,YCVP,WAA6C,IAA5BC,EAA4B/zB,UAAAC,OAAA,QAAAiT,IAAAlT,UAAA,GAAAA,UAAA,GAAZ,GAAIg0B,EAAQh0B,UAAAC,OAAA,EAAAD,UAAA,QAAAkT,EAE5CkP,EAAQxiB,OAAA2e,EAAA,EAAA3e,CAAA,GAAQm0B,GAGtB,OAAQC,EAAOxpB,MAEb,IAAK,uBAC8B0I,IAA7B8gB,EAAOxiB,QAAQnG,YACjB+W,EAAS/W,UAAY2oB,EAAOxiB,QAAQnG,gBACE6H,IAApC8gB,EAAOxiB,QAAQzB,mBACjBqS,EAASrS,iBAAmBikB,EAAOxiB,QAAQzB,uBACVmD,IAA/B8gB,EAAOxiB,QAAQ5G,cACjBwX,EAASxX,YAAcopB,EAAOxiB,QAAQ5G,kBACEsI,IAAtC8gB,EAAOxiB,QAAQkN,qBACjB0D,EAAS1D,mBAAqBsV,EAAOxiB,QAAQkN,oBAC/C,MAGF,IAAK,kCAC+BxL,IAA9B8gB,EAAOxiB,QAAQC,aACjB2Q,EAAS3Q,WAAauiB,EAAOxiB,QAAQC,iBACLyB,IAA9B8gB,EAAOxiB,QAAQE,aACjB0Q,EAAS1Q,WAAasiB,EAAOxiB,QAAQE,YACvC,MAGF,IAAK,2BACCqiB,EAActiB,YAAcsiB,EAAcriB,aAC5C0Q,EAAS3Q,WAAasiB,EAAcriB,WACpC0Q,EAAS1Q,WAAaqiB,EAActiB,YAEtC,MAGF,IAAK,wBAC8ByB,IAA7B8gB,EAAOxiB,QAAQI,YACjBwQ,EAASxQ,UAAYoiB,EAAOxiB,QAAQI,WACtC,MAGF,IAAK,2BACgCsB,IAA/B8gB,EAAOxiB,QAAQM,cACjBsQ,EAAStQ,YAAckiB,EAAOxiB,QAAQM,aA0B5C,OAlBKsQ,EAAS/W,YACZ+W,EAAS/W,UAAY,IAClB+W,EAASrS,mBACZqS,EAASrS,iBAAmB,IACzBqS,EAASxX,cACZwX,EAASxX,YAAc,IACpBwX,EAAS1D,qBACZ0D,EAAS1D,mBAAqB,IAC3B0D,EAAS3Q,aACZ2Q,EAAS3Q,WAAa,IACnB2Q,EAAS1Q,aACZ0Q,EAAS1Q,WAAa,IACnB0Q,EAASxQ,YACZwQ,EAASxQ,UAAY,IAClBwQ,EAAStQ,cACZsQ,EAAStQ,YAAc,IAGlBsQ,GD3D0B6R,YAAgBC,MAGnDC,iBACEhzB,EAAAC,EAAAC,cAAC+yB,EAAA,EAAD,CAAUP,MAAOA,IACf1yB,EAAAC,EAAAC,cAACgzB,GAAD,OAEFjnB,SAASknB,eAAe","file":"static/js/main.93747e3e.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"style\", null, \"\\n    #back_line,\\n    #front_line,\\n    #circle_1,\\n    #circle_2,\\n    #circle_3,\\n    #circle_4 {\\n      animation-duration: 1.5s;\\n      animation-timing-function: ease;\\n      animation-fill-mode: forwards;\\n    }\\n    #back_line {\\n      animation-name: draw_back_line;\\n    }\\n    @keyframes draw_back_line {\\n      0% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 60;\\n      }\\n      60% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 60;\\n      }\\n      100% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 0;\\n      }\\n    }\\n    #front_line {\\n      animation-name: draw_front_line;\\n    }\\n    @keyframes draw_front_line {\\n      0% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 158;\\n      }\\n      60% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 0;\\n      }\\n      100% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 0;\\n      }\\n    }\\n    #circle_1 {\\n      animation-name: draw_circle_1;\\n    }\\n    #circle_2 {\\n      animation-name: draw_circle_2;\\n    }\\n    #circle_3 {\\n      animation-name: draw_circle_3;\\n    }\\n    #circle_4 {\\n      animation-name: draw_circle_4;\\n    }\\n    @keyframes draw_circle_1 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      20% {\\n        transform: scale(0);\\n      }\\n      40% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_2 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      30% {\\n        transform: scale(0);\\n      }\\n      50% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_3 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      40% {\\n        transform: scale(0);\\n      }\\n      60% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_4 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      50% {\\n        transform: scale(0);\\n      }\\n      70% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n  \");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"back_line\",\n  stroke: \"#bdbdbd\",\n  strokeWidth: 5,\n  fill: \"none\",\n  d: \"       M 20 50       L 80 50     \"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"front_line\",\n  stroke: \"#424242\",\n  strokeWidth: 7.5,\n  fill: \"none\",\n  d: \"       M 0 50       L 20 50       L 40 75       L 60 25       L 80 50       L 100 50     \"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(20,50)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_1\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#02b3e4\"\n}));\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(40,75)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_2\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#c341d8\"\n}));\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(60,25)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_3\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#fa750f\"\n}));\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(80,50)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_4\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#e91e63\"\n}));\n\nvar SvgLogoAnimated = function SvgLogoAnimated(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogoAnimated, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo-animated.94624129.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Component } from 'react';\n\nimport { ReactComponent as Logo } from './logo-animated.svg';\n\n// page header display component\nexport class Header extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.showLogo = false;\n\n    // wait a bit for page to load before starting logo animation\n    window.setTimeout(() => this.setState({ showLogo: true }), 1000);\n  }\n\n  // display component\n  render() {\n    let logo;\n\n    if (this.state.showLogo)\n      logo = <Logo className='logo' />;\n    else\n      logo = <svg className='logo' />;\n    return (\n      <header>\n        {logo}\n        <h1>HETMECH</h1>\n        <h2>\n          A project of the{' '}\n          <a href='http://www.greenelab.com/'>Greene Laboratory</a>\n        </h2>\n      </header>\n    );\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50     \"\n});\n\nvar SvgArrowIconBoth = function SvgArrowIconBoth(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconBoth, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-both.5f01d574.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50       M 70 35       L 90 50       L 70 65     \"\n});\n\nvar SvgArrowIconForward = function SvgArrowIconForward(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconForward, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-forward.43aa27a1.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50       M 30 35       L 10 50       L 30 65     \"\n});\n\nvar SvgArrowIconBackward = function SvgArrowIconBackward(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconBackward, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-backward.c6a85500.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746       L 78.2842755245486 50       L 50 50     \"\n});\n\nvar SvgChipGene = function SvgChipGene(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipGene, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-gene.6afa0a5b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipCompound = function SvgChipCompound(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipCompound, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-compound.90909a37.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  clipPath: \"url(#clip)\",\n  d: \"         M 10 110         L 50 0         L 90 110         M 30 70         L 70 70       \"\n}));\n\nvar SvgChipAnatomy = function SvgChipAnatomy(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipAnatomy, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-anatomy.b055d214.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 25 10       L 50 10       A 40 40 0 0 1 50 90       L 25 90       Z     \"\n});\n\nvar SvgChipDisease = function SvgChipDisease(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipDisease, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-disease.1a26261b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 80 18       C 70 14 62 10 50 10       C 42 10 22 14 22 30       C 22 46 38 48.4 50 50       C 62 51.6 78 54 78 70       C 78 86 59 90 50 90       C 38 90 30 86 20 82     \"\n});\n\nvar SvgChipSymptom = function SvgChipSymptom(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipSymptom, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-symptom.2689ac77.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-42,0)\",\n  d: \"       M 80 18       C 70 14 62 10 50 10       C 42 10 22 14 22 30       C 22 46 38 48.4 50 50       C 62 51.6 78 54 78 70       C 78 86 59 90 50 90       C 38 90 30 86 20 82     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(42,0)\",\n  d: \"       M 75 10       L 25 10       L 25 90       L 75 90       M 30 50       L 65 50     \"\n});\n\nvar SvgChipSideEffect = function SvgChipSideEffect(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipSideEffect, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-side-effect.dbe94434.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-44,0)\",\n  d: \"       M 25 10       L 60 10       A 20 20 0 0 1 60 50       A 20 20 0 0 1 60 90       L 25 90       Z       M 30 50       L 60 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(44,0)\",\n  d: \"       M 25 90       L 25 10       L 60 10       A 20 20 0 0 1 60 50       L 30 50     \"\n});\n\nvar SvgChipBiologicalProcess = function SvgChipBiologicalProcess(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipBiologicalProcess, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-biological-process.979f4ab8.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-43,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(48,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipCellularComponent = function SvgChipCellularComponent(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipCellularComponent, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-cellular-component.b874e365.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  strokeLinejoin: \"bevel\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-40,0)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 10 90       L 10 -10       L 50 65       L 90 -10       L 90 90     \"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(60,0)\",\n  d: \"       M 75 10       L 25 10       L 25 90       M 30 50       L 65 50     \"\n});\n\nvar SvgChipMolecularFunction = function SvgChipMolecularFunction(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipMolecularFunction, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-molecular-function.787806a8.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-52,0)\",\n  d: \"     M 25 90     L 25 10     L 60 10     A 20 20 0 0 1 60 50     L 30 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  strokeLinejoin: \"bevel\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(45,0)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 10 -10       L 25 100       L 50 35       L 75 100       L 90 -10     \"\n});\n\nvar SvgChipPathway = function SvgChipPathway(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipPathway, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-pathway.543f179a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-50,0)\",\n  d: \"       M 25 90       L 25 10       L 60 10       A 20 20 0 0 1 60 50       L 30 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(48,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipPharmacologicClass = function SvgChipPharmacologicClass(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipPharmacologicClass, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-pharmacologic-class.b1fbdc49.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './chips.css';\n\nimport { ReactComponent as ArrowBoth } from './arrow-icon-both.svg';\nimport { ReactComponent as ArrowForward } from './arrow-icon-forward.svg';\nimport { ReactComponent as ArrowBackward } from './arrow-icon-backward.svg';\n\nimport { ReactComponent as Gene } from './chip-gene.svg';\nimport { ReactComponent as Compound } from './chip-compound.svg';\nimport { ReactComponent as Anatomy } from './chip-anatomy.svg';\nimport { ReactComponent as Disease } from './chip-disease.svg';\nimport { ReactComponent as Symptom } from './chip-symptom.svg';\nimport { ReactComponent as SideEffect } from './chip-side-effect.svg';\nimport { ReactComponent as BiologicalProcess } from './chip-biological-process.svg';\nimport { ReactComponent as CellularComponent } from './chip-cellular-component.svg';\nimport { ReactComponent as MolecularFunction } from './chip-molecular-function.svg';\nimport { ReactComponent as Pathway } from './chip-pathway.svg';\nimport { ReactComponent as PharmacologicClass } from './chip-pharmacologic-class.svg';\n\n// metanode 'chip' component\n// colored circle with abbreviation text in middle\n// eg (G) for 'gene'\nexport class MetanodeChip extends Component {\n  // display component\n  render() {\n    // get icon\n    let icon;\n    switch (this.props.type) {\n      case 'Gene':\n        icon = <Gene />;\n        break;\n      case 'Compound':\n        icon = <Compound />;\n        break;\n      case 'Anatomy':\n        icon = <Anatomy />;\n        break;\n      case 'Disease':\n        icon = <Disease />;\n        break;\n      case 'Symptom':\n        icon = <Symptom />;\n        break;\n      case 'Side Effect':\n        icon = <SideEffect />;\n        break;\n      case 'Biological Process':\n        icon = <BiologicalProcess />;\n        break;\n      case 'Cellular Component':\n        icon = <CellularComponent />;\n        break;\n      case 'Molecular Function':\n        icon = <MolecularFunction />;\n        break;\n      case 'Pathway':\n        icon = <Pathway />;\n        break;\n      case 'Pharmacologic Class':\n        icon = <PharmacologicClass />;\n        break;\n      default:\n        break;\n    }\n\n    let fillColor = '#424242';\n    let textColor = '#fafafa';\n    const style = this.props.hetioStyles[this.props.type];\n    if (style && style.fill_color)\n      fillColor = style.fill_color;\n    if (style && style.text_color)\n      textColor = style.text_color;\n\n    return (\n      <div className='metanode_chip' style={{ color: textColor }}>\n        <svg viewBox='0 0 100 100'>\n          <circle cx='50' cy='50' r='49' fill={fillColor} />\n        </svg>\n        {icon}\n      </div>\n    );\n  }\n}\n// connect component to global state\nMetanodeChip = connect((state) => ({\n  hetioStyles: state.hetioStyles\n}))(MetanodeChip);\n\n// metaedge 'chip' component\n// svg arrow with abbreviation text above\nexport class MetaedgeChip extends Component {\n  // display component\n  render() {\n    // get edge direction icon\n    let icon;\n    switch (this.props.direction) {\n      case 'backward':\n        icon = <ArrowBackward />;\n        break;\n      case 'forward':\n        icon = <ArrowForward />;\n        break;\n      default:\n        icon = <ArrowBoth />;\n        break;\n    }\n\n    let abbreviation = '';\n    if (this.props.metagraph.kind_to_abbrev)\n      abbreviation = this.props.metagraph.kind_to_abbrev[this.props.type];\n\n    return (\n      <div\n        className='metaedge_chip'\n        data-name={this.props.type}\n        data-abbreviation={abbreviation}\n      >\n        {icon}\n      </div>\n    );\n  }\n}\n// connect component to global state\nMetaedgeChip = connect((state) => ({\n  metagraph: state.metagraph\n}))(MetaedgeChip);\n\n// get html of metapath in form of visualization chips\nexport function metapathChips(edges) {\n  const path = edges.map((entry, index) => {\n    return (\n      <React.Fragment key={index}>\n        <MetanodeChip type={entry[0]} />\n        <MetaedgeChip type={entry[2]} direction={entry[3]} />\n        {index === edges.length - 1 && <MetanodeChip type={entry[1]} />}\n      </React.Fragment>\n    );\n  });\n\n  return path;\n}\n\n// get html of path in form of visualization chips\nexport function pathChips(path, expanded) {\n  return path.map((entry, index) => {\n    if (entry.element === 'node') {\n      return (\n        <NodeChip\n          key={index}\n          type={entry.type}\n          name={entry.name}\n          expanded={expanded}\n        />\n      );\n    }\n    if (entry.element === 'edge') {\n      return (\n        <MetaedgeChip\n          key={index}\n          type={entry.type}\n          direction={entry.direction}\n        />\n      );\n    }\n    return '';\n  });\n}\n\n// node 'chip' component\nexport class NodeChip extends Component {\n  // display component\n  render() {\n    let fillColor = '#424242';\n    let textColor = '#fafafa';\n    const style = this.props.hetioStyles[this.props.type];\n    if (style && style.fill_color)\n      fillColor = style.fill_color;\n    if (style && style.text_color)\n      textColor = style.text_color;\n\n    return (\n      <span\n        className='node_chip'\n        style={{ background: fillColor, color: textColor }}\n        data-expanded={this.props.expanded}\n      >\n        {this.props.name}\n      </span>\n    );\n  }\n}\n// connect component to global state\nNodeChip = connect((state) => ({\n  hetioStyles: state.hetioStyles\n}))(NodeChip);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Component } from 'react';\nimport Fade from '@material-ui/core/Fade';\n\nimport './tooltip.css';\n\n// open delay in ms\nconst delay = 1000;\n\n// tooltip (helper text) popup component\nexport class Tooltip extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.open = false;\n    this.state.x = 0;\n    this.state.y = 0;\n    this.state.opacity = 0;\n\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.openTooltip = this.openTooltip.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n  }\n\n  // when mouse enters target\n  onMouseEnter(event) {\n    const target = event.target;\n    // delay opening tooltip\n    window.setTimeout(() => this.openTooltip(target), delay);\n    // track hover state\n    this.setState({ hover: true });\n  }\n\n  // open tooltip\n  openTooltip(target) {\n    // if target not being hovered anymore, cancel open\n    // if target not specified, exit\n    if (!this.state.hover || !target)\n      return;\n\n    // get x/y position of target to pass to tooltip popup\n    const left =\n      target.getBoundingClientRect().left + document.documentElement.scrollLeft;\n    const top =\n      target.getBoundingClientRect().top + document.documentElement.scrollTop;\n\n    // avoid scrunching tooltip too skinny when close to right side of view\n    const x = Math.min(left, window.innerWidth - 200);\n    const y = top;\n\n    // open tooltip and update x/y position\n    this.setState({ open: true, x: x, y: y });\n  }\n\n  // when mouse leaves target\n  onMouseLeave() {\n    this.setState({ hover: false, open: false });\n  }\n\n  // display component\n  render() {\n    // if no specified text, skip attaching events and render\n    if (!this.props.text)\n      return <>{this.props.children}</>;\n\n    // mouse handler props to attach to children\n    const props = {\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave\n    };\n\n    // attach handler props to children\n    const children = React.Children.map(this.props.children, (element) => {\n      // if element is react element, create clone with attached props\n      if (React.isValidElement(element))\n        return React.cloneElement(element, props);\n      // if element is text node, wrap in span and attach props\n      else if (typeof element === 'string')\n        return <span {...props}>{element}</span>;\n      // otherwise, pass element through untouched\n      else\n        return element;\n    });\n\n    return (\n      <>\n        {children}\n        {this.state.open && this.props.text && (\n          <Popup\n            text={this.props.text}\n            open={this.state.open}\n            x={this.state.x}\n            y={this.state.y}\n          />\n        )}\n      </>\n    );\n  }\n}\n\n// popup component to display tooltip and text\n// make React 'portal' to append tooltip to body instead of parent\n// (allows tooltip to pop out of containing elements like tables)\nclass Popup extends Component {\n  render() {\n    return ReactDOM.createPortal(\n      <Fade in={this.props.open}>\n        <div\n          className='tooltip'\n          style={{\n            left: this.props.x + 'px',\n            top: this.props.y + 'px'\n          }}\n        >\n          {this.props.text}\n        </div>\n      </Fade>,\n      document.body\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faHighlighter } from '@fortawesome/free-solid-svg-icons';\n\nimport { Tooltip } from './tooltip.js';\nimport './buttons.css';\n\n// button component\nexport class Button extends Component {\n  // display component\n  render() {\n    return (\n      <Tooltip text={this.props.tooltipText}>\n        <button\n          className={this.props.className}\n          onClick={(event) => {\n            if (event.ctrlKey) {\n              if (this.props.onCtrlClick)\n                this.props.onCtrlClick();\n            } else if (event.shiftKey) {\n              if (this.props.onShiftClick)\n                this.props.onShiftClick();\n            } else if (this.props.onClick)\n              this.props.onClick();\n          }}\n        >\n          {this.props.children}\n        </button>\n      </Tooltip>\n    );\n  }\n}\n\n// text button component\n// link colored button with text and icon to right\nexport class TextButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='text_button small'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.text}\n        <FontAwesomeIcon icon={this.props.icon} className='text_button_icon' />\n      </Button>\n    );\n  }\n}\n\n// checkbox button component\nexport class Checkbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faCheck} />\n        )}\n      </Button>\n    );\n  }\n}\n\n// eye checkbox button component\nexport class EyeCheckbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faEye} />\n        )}\n      </Button>\n    );\n  }\n}\n\n// highlighter checkbox button component\nexport class HighlighterCheckbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faHighlighter} />\n        )}\n      </Button>\n    );\n  }\n}\n","// url for hetmech specific definitions (path count, p value, dwpc, etc)\nimport hetmechDefinitions from './definitions.json';\n// url for metagraph (node and edge metatypes and abbreviations)\nconst metagraphUrl =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/hetnet/json/hetionet-v1.0-metagraph.json';\n// url for hetio definitions (metanodes, properties, etc)\nconst hetioDefinitions =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/describe/definitions.json';\n// url for hetio styles (metanode fill/text color, etc)\nconst hetioStyles =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/describe/styles.json';\n// url for node search\nconst nodeSearchServer = 'https://search-api.het.io/v1/nodes/';\n// url for metapaths search\nconst metapathSearchServer = 'https://search-api.het.io/v1/query-metapaths/';\n// url for paths search\nconst pathSearchServer = 'https://search-api.het.io/v1/query-paths/';\n\n// get resource at url and parse as json\nexport function fetchJson(url) {\n  return fetch(url)\n    .then((response) => response.json())\n    .then((results) => {\n      return results || {};\n    })\n    .catch((error) => {\n      console.log(error);\n      return {};\n    });\n}\n\n// get metagraph\nexport function getMetagraph() {\n  return fetchJson(metagraphUrl);\n}\n\n// get hetio definitions\nexport function getHetioDefinitions() {\n  return fetchJson(hetioDefinitions);\n}\n\n// get hetio styles\nexport function getHetioStyles() {\n  return fetchJson(hetioStyles);\n}\n\n// get hetmech definitions\nexport function getHetmechDefinitions() {\n  return hetmechDefinitions;\n}\n\n// lookup node by id\nexport function lookupNodeById(id) {\n  if (!id)\n    return null;\n  const query = nodeSearchServer + id;\n  return fetchJson(query);\n}\n\n// search for nodes by string, and with metatype filter list\n// accepts comma-separated list of abbreviations of metatypes to include\nexport function searchNodes(searchString, metatypes) {\n  const params = new URLSearchParams();\n  params.set('search', searchString);\n  params.set('limit', '100');\n  if (metatypes)\n    params.set('metanodes', metatypes);\n  const query = nodeSearchServer + '?' + params.toString();\n  return fetchJson(query).then((data) => {\n    return data.results;\n  });\n}\n\n// search for metapaths by source/target id\nexport function searchMetapaths(sourceId, targetId) {\n  const params = new URLSearchParams();\n  params.set('source', sourceId || '');\n  params.set('target', targetId || '');\n  const query = metapathSearchServer + '?' + params.toString();\n  return fetchJson(query).then((results) => {\n    return results.path_counts;\n  });\n}\n\n// search for paths by metapaths\nexport function searchPaths(sourceId, targetId, metapath) {\n  const params = new URLSearchParams();\n  params.set('source', sourceId || '');\n  params.set('target', targetId || '');\n  params.set('metapath', metapath || '');\n  const query = pathSearchServer + '?' + params.toString();\n  return fetchJson(query).then((results) => {\n    return results;\n  });\n}\n","// actions to update global state variables\n\n// set definitions\nexport function setDefinitions({\n  metagraph,\n  hetioDefinitions,\n  hetioStyles,\n  hetmechDefinitions\n}) {\n  return {\n    type: 'set_definitions',\n    payload: {\n      metagraph: metagraph,\n      hetioDefinitions: hetioDefinitions,\n      hetioStyles: hetioStyles,\n      hetmechDefinitions: hetmechDefinitions\n    }\n  };\n}\n\n// update source and/or target node\nexport function updateSourceTargetNodes({ sourceNode, targetNode }) {\n  return {\n    type: 'update_source_target_nodes',\n    payload: { sourceNode: sourceNode, targetNode: targetNode }\n  };\n}\n\n// swap source/target node\nexport function swapSourceTargetNodes() {\n  return {\n    type: 'swap_source_target_nodes'\n  };\n}\n\n// update metapaths\nexport function updateMetapaths({ metapaths }) {\n  return {\n    type: 'update_metapaths',\n    payload: { metapaths: metapaths }\n  };\n}\n\n// update path queries\nexport function updatePathQueries({ pathQueries }) {\n  return {\n    type: 'update_path_queries',\n    payload: { pathQueries: pathQueries }\n  };\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Downshift from 'downshift';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport { MetanodeChip } from './chips.js';\nimport { Tooltip } from './tooltip.js';\nimport { Button } from './buttons.js';\nimport { searchNodes } from './backend-query.js';\nimport { updateSourceTargetNodes } from './actions.js';\nimport { swapSourceTargetNodes } from './actions.js';\nimport './node-search.css';\n\n// node search section component\n// target and source node search boxes and swap button\nexport class NodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.filters = [];\n    this.state.filterString = '';\n\n    this.updateFilters = this.updateFilters.bind(this);\n  }\n\n  // get filter state from filter child component\n  updateFilters(filters, filterString) {\n    this.setState({ filters: filters, filterString: filterString });\n  }\n\n  // display component\n  render() {\n    return (\n      <section className='center'>\n        <NodeSearchContext.Provider\n          value={{\n            filterString: this.state.filterString\n          }}\n        >\n          <Filters\n            filters={this.state.filters}\n            filterString={this.state.filterString}\n            updateFilters={this.updateFilters}\n          />\n          <SourceNodeSearch />\n          <SwapButton />\n          <TargetNodeSearch />\n        </NodeSearchContext.Provider>\n      </section>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst NodeSearchContext = React.createContext({});\n\n// filter filter component\n// toggle buttons to specify which types of nodes to limit search to\nclass Filters extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.solo = this.solo.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.metagraph.metanode_kinds === this.props.metagraph.metanode_kinds\n    )\n      return;\n\n    // initialize filters\n    let filters = [];\n    const filterString = '';\n\n    for (const filter of this.props.metagraph.metanode_kinds)\n      filters.push({ name: filter, active: true });\n\n    // display filters in custom order\n    const order = {\n      'Gene': 1,\n      'Compound': 2,\n      'Anatomy': 3,\n      'Disease': 4,\n      'Symptom': 5,\n      'Side Effect': 6,\n      'Biological Process': 7,\n      'Cellular Component': 8,\n      'Molecular Function': 9,\n      'Pathway': 10,\n      'Pharmacolocic Class': 11\n    };\n\n    filters = filters.sort((a, b) => {\n      if (order[a.name] && order[b.name])\n        return order[a.name] - order[b.name];\n      else if (order[a.name])\n        return -1;\n      else if (order[b.name])\n        return 1;\n      else\n        return b.name - a.name;\n    });\n\n    this.props.updateFilters(filters, filterString);\n  }\n\n  // checks whether all filters are active\n  allOn(filters) {\n    for (const filter of filters) {\n      if (!filter.active)\n        return false;\n    }\n\n    return true;\n  }\n\n  // checks whether all filters besides the specified filter are off\n  allOthersOff(filters, type) {\n    for (const filter of filters) {\n      if (type !== filter.name && filter.active)\n        return false;\n    }\n\n    return true;\n  }\n\n  // toggles the specified filters on/off\n  toggle(type) {\n    const filters = this.props.filters.slice();\n\n    for (const filter of filters) {\n      if (filter.name === type)\n        filter.active = !filter.active;\n    }\n\n    this.props.updateFilters(filters, this.toString(filters));\n  }\n\n  // solo filter (turn all others off)\n  solo(type) {\n    const filters = this.props.filters.slice();\n    const allOthersOff = this.allOthersOff(filters, type);\n\n    for (const filter of filters) {\n      if (allOthersOff)\n        filter.active = true;\n      else {\n        if (type === filter.name)\n          filter.active = true;\n        else\n          filter.active = false;\n      }\n    }\n\n    this.props.updateFilters(filters, this.toString(filters));\n  }\n\n  // turn state of filters into string query list of metanode metagraph\n  toString(filters) {\n    if (this.allOn(filters))\n      return '';\n\n    const list = [];\n    for (const filter of filters) {\n      if (filter.active)\n        list.push(this.props.metagraph.kind_to_abbrev[filter.name]);\n    }\n\n    return list.join(',');\n  }\n\n  // display component\n  render() {\n    // make list of filter buttons\n    const buttons = this.props.filters.map((filter, index) => (\n      <FilterButton\n        key={index}\n        name={filter.name}\n        tooltipText={this.props.hetioDefinitions.metanodes[filter.name]}\n        active={filter.active}\n        toggle={this.toggle}\n        solo={this.solo}\n      />\n    ));\n\n    return <>{buttons}</>;\n  }\n}\n// connect component to global state\nFilters = connect((state) => ({\n  metagraph: state.metagraph,\n  hetioDefinitions: state.hetioDefinitions\n}))(Filters);\n\n// filter button component\nclass FilterButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className={\n          'node_search_filter_button' +\n          (this.props.active ? '' : ' node_search_filter_button_off')\n        }\n        tooltipText={this.props.tooltipText}\n        onClick={() => this.props.toggle(this.props.name)}\n        onCtrlClick={() => this.props.solo(this.props.name)}\n      >\n        <MetanodeChip type={this.props.name} />\n        {this.props.name}\n      </Button>\n    );\n  }\n}\n\n// source node search box component\nclass SourceNodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  // when user makes a new node selection\n  onChange(value) {\n    this.props.dispatch(updateSourceTargetNodes({ sourceNode: value }));\n  }\n\n  // display component\n  render() {\n    return (\n      <SearchBox\n        label='Source Node'\n        tooltipText='The starting node of the paths'\n        value={this.props.node}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n// connect component to global state\nSourceNodeSearch = connect((state) => ({\n  node: state.sourceNode\n}))(SourceNodeSearch);\n\n// source node search box component\nclass TargetNodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  // when user makes a new node selection\n  onChange(value) {\n    this.props.dispatch(updateSourceTargetNodes({ targetNode: value }));\n    if (value)\n      document.activeElement.blur();\n  }\n\n  // display component\n  render() {\n    return (\n      <SearchBox\n        label='Target Node'\n        tooltipText='The ending node of the paths'\n        value={this.props.node}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n// connect component to global state\nTargetNodeSearch = connect((state) => ({\n  node: state.targetNode\n}))(TargetNodeSearch);\n\n// search box component with dropdown autocomplete/autosuggest\nclass SearchBox extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.searchResults = [];\n\n    this.inputRef = React.createRef();\n    this.formRef = React.createRef();\n\n    this.onInput = this.onInput.bind(this);\n  }\n\n  // when user types into or modifies text in text box\n  onInput(searchString) {\n    searchNodes(searchString, this.context.filterString).then((results) =>\n      this.setState({ searchResults: results || [] })\n    );\n  }\n\n  // convert result/selection item to string to display in text box\n  itemToString(item) {\n    if (item && item.name)\n      return item.name;\n    else\n      return '';\n  }\n\n  // display component\n  render() {\n    return (\n      <Downshift\n        onChange={this.props.onChange}\n        onInputValueChange={this.onInput}\n        itemToString={this.itemToString}\n        selectedItem={this.props.value}\n      >\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          isOpen,\n          selectedItem,\n          highlightedIndex,\n          clearSelection\n        }) => (\n          <div className='node_search_form' ref={this.formRef}>\n            <span className='small light node_search_form_label'>\n              <Tooltip text={this.props.tooltipText}>\n                {this.props.label}\n              </Tooltip>\n            </span>\n            <TextBox\n              inputRef={this.inputRef}\n              getInputProps={getInputProps}\n              clearSelection={clearSelection}\n              selectedItem={selectedItem}\n            />\n            <Dropdown\n              isOpen={isOpen}\n              inputRef={this.inputRef}\n              formRef={this.formRef}\n              getMenuProps={getMenuProps}\n              searchResults={this.state.searchResults}\n              selectedItem={selectedItem}\n              highlightedIndex={highlightedIndex}\n              getItemProps={getItemProps}\n            />\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n// connect component to context component\nSearchBox.contextType = NodeSearchContext;\n\n// text box sub-component of search box component\nclass TextBox extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.focused = false;\n\n    this.onInput = this.onInput.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  // when user types into text box\n  onInput(event) {\n    if (event.target.value === '')\n      this.props.clearSelection();\n  }\n\n  // when user focuses text box\n  onFocus() {\n    this.setState({ focused: true });\n  }\n\n  // when user unfocuses text box\n  onBlur() {\n    this.setState({ focused: false });\n  }\n\n  // display component\n  render() {\n    let overlay = <></>;\n\n    const showOverlay =\n      !this.state.focused &&\n      this.props.selectedItem.metanode &&\n      this.props.selectedItem.name;\n\n    if (showOverlay) {\n      overlay = (\n        <div className='node_search_field_overlay'>\n          <MetanodeChip type={this.props.selectedItem.metanode} />\n          <span className='node_search_results_item_name nowrap'>\n            {this.props.selectedItem.name}\n          </span>\n        </div>\n      );\n    }\n    return (\n      <>\n        <TextField\n          {...this.props.getInputProps({\n            onChange: this.onInput\n          })}\n          inputRef={this.props.inputRef}\n          placeholder='id, name, or metanode'\n          classes={{ root: 'node_search_field_container' }}\n          InputProps={{\n            classes: {\n              root: 'node_search_field',\n              focused: 'node_search_field_focused',\n              input: showOverlay\n                ? 'node_search_input_blank'\n                : 'node_search_input'\n            }\n          }}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n        />\n        {overlay}\n        <div className='node_search_icon'>\n          <FontAwesomeIcon icon={faSearch} />\n        </div>\n      </>\n    );\n  }\n}\n\n// dropdown sub-component of search box component\nclass Dropdown extends Component {\n  // display component\n  render() {\n    return (\n      <Popper\n        open={this.props.isOpen}\n        anchorEl={this.props.inputRef.current}\n        placement='bottom-start'\n        className='node_search_results_popper'\n        container={this.props.formRef.current}\n        disablePortal={true}\n        {...this.props.getMenuProps()}\n      >\n        <Paper className='node_search_results_paper'>\n          {this.props.searchResults.map((result, index) => (\n            <MenuItem\n              className={\n                'node_search_results_item' +\n                (this.props.selectedItem.id === result.id\n                  ? ' node_search_results_item_selected'\n                  : '') +\n                (this.props.highlightedIndex === index\n                  ? ' node_search_results_item_selected'\n                  : '')\n              }\n              {...this.props.getItemProps({\n                item: result,\n                key: index\n              })}\n            >\n              <MetanodeChip type={result.metanode} />\n              <span className='node_search_results_item_name'>\n                {result.name}\n              </span>\n              <span className='node_search_results_item_identifier'>\n                {result.identifier}\n              </span>\n            </MenuItem>\n          ))}\n        </Paper>\n      </Popper>\n    );\n  }\n}\n\n// swap button component\n// switches source/target node\nclass SwapButton extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  // when user clicks button\n  onClick() {\n    this.props.dispatch(swapSourceTargetNodes());\n  }\n\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText='Swap source and target node'\n        className='node_search_swap_button'\n        onClick={this.onClick}\n      >\n        <FontAwesomeIcon icon={faExchangeAlt} />\n      </Button>\n    );\n  }\n}\n// connect component to global state\nSwapButton = connect()(SwapButton);\n","import React from 'react';\nimport { Component } from 'react';\n\nimport './dynamic-field.css';\n\n// expandable textbox-like component, similar to excel spreadsheet cell\n// when focused, field expands and prop 'fullValue' displayed,\n// otherwise, prop 'value' displayed (often 'fullValue' rounded off)\nexport class DynamicField extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.focused = false;\n    this.field = React.createRef();\n\n    this.onClick = this.onClick.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n  }\n\n  // when field is clicked or touched\n  onClick(event) {\n    // force click on link in field if link was target of click\n    if (event && event.target && event.target.tagName.toLowerCase() === 'a')\n      event.target.click();\n    // force focus on field\n    this.field.current.focus();\n  }\n\n  // when field loses focus\n  onBlur() {\n    this.setState({ focused: false }, this.deselectAll);\n  }\n\n  // when field is focused (tabbed to, clicked, etc)\n  onFocus() {\n    this.setState({ focused: true }, this.selectAll);\n  }\n\n  // deselect any selected text in window\n  deselectAll() {\n    window.getSelection().empty();\n  }\n\n  // select contents of field\n  selectAll() {\n    // set delay for select to make sure component has rendered\n    window.setTimeout(function() {\n      window.getSelection().empty();\n      window.getSelection().selectAllChildren(document.activeElement);\n    }, 10);\n  }\n\n  // display component\n  render() {\n    let displayValue;\n\n    // show full value if focused, or short value if not\n    if (this.state.focused)\n      displayValue = this.props.fullValue || this.props.value;\n    else\n      displayValue = this.props.value;\n\n    // if value just text, set 'nowrap' to truncate with ellipsis\n    if (typeof displayValue === 'string')\n      displayValue = <span className='nowrap'>{displayValue}</span>;\n\n    return (\n      <div\n        ref={this.field}\n        tabIndex='0'\n        onClick={this.onClick}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        className={'dynamic_field ' + (this.props.className || '')}\n        data-expanded={this.state.focused}\n      >\n        {displayValue}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { Button } from './buttons.js';\nimport './collapsible-section.css';\n\n// accordion (collapse/expand) section component\nexport class CollapsibleSection extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.collapsed = false;\n\n    this.loadState = this.loadState.bind(this);\n    this.saveState = this.saveState.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  // when component mounts\n  componentDidMount() {\n    if (this.loadState())\n      this.setState({ collapsed: true });\n  }\n\n  // load collapsed state from local storage if exists\n  loadState() {\n    const key = this.props.label;\n    return key && window.localStorage.getItem(key) === 'true';\n  }\n\n  // save collapse state to local storage\n  saveState(collapsed) {\n    const key = this.props.label;\n    if (key)\n      window.localStorage.setItem(key, String(String(collapsed) === 'true'));\n  }\n\n  // toggle collapse/expand\n  toggle() {\n    this.setState({ collapsed: !this.state.collapsed });\n    this.saveState(!this.state.collapsed);\n  }\n\n  // display component\n  render() {\n    return (\n      <div\n        className='collapsible_section'\n        data-collapsed={this.state.collapsed}\n      >\n        <Button\n          tooltipText={this.props.tooltipText}\n          className='collapsible_section_header'\n          onClick={this.toggle}\n        >\n          <div>{this.props.label}</div>\n          <FontAwesomeIcon\n            icon={this.state.collapsed ? faAngleUp : faAngleDown}\n          />\n        </Button>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { MetanodeChip } from './chips.js';\nimport { Tooltip } from './tooltip.js';\nimport { TextButton } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { CollapsibleSection } from './collapsible-section.js';\n\n// node results section component\n// details about source/target nodes\nexport class NodeResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <NodeCard label='Source Node' node={this.props.sourceNode} />\n        <NodeCard label='Target Node' node={this.props.targetNode} />\n      </section>\n    );\n  }\n}\n// connect component to global state\nNodeResults = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode\n}))(NodeResults);\n\n// node 'card' component\n// displays details about source/target node\nclass NodeCard extends Component {\n  // display component\n  render() {\n    return (\n      <CollapsibleSection\n        label={this.props.label}\n        tooltipText={'Details about the ' + this.props.label.toLowerCase()}\n      >\n        {this.props.node.name ? (\n          <TableFull node={this.props.node} />\n        ) : (\n          <TableEmpty label={this.props.label} />\n        )}\n      </CollapsibleSection>\n    );\n  }\n}\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.showMore = false;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n  }\n\n  // toggle show/hide extra fields\n  toggleShowMore() {\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // display row entries\n  rows() {\n    // explicitly specify and order primary fields\n    let fields = ['name', 'metanode', 'identifier', 'source'];\n\n    if (this.state.showMore) {\n      // get 'extra fields' from node 'data' field\n      let extraFields = Object.keys(this.props.node.data);\n      // remove unnecessary fields\n      extraFields.splice(extraFields.indexOf('source'), 1);\n      extraFields.splice(extraFields.indexOf('url'), 1);\n      // sort extra fields alphabetically\n      extraFields = extraFields.sort();\n      // add 'id' to beginning of extra fields\n      extraFields.unshift('id');\n      // append 'extraFields' to primary 'fields'\n      fields = fields.concat(extraFields);\n    }\n\n    // determine contents of first and second column for each row entry\n    return fields.map((field, index) => {\n      // set first col to field name\n      const firstCol = field;\n      // default second col to field value in node\n      let secondCol =\n        this.props.node[field] || this.props.node.data[field] || '';\n\n      // handle special field cases\n      if (field === 'metanode') {\n        // make text with metanode chip\n        secondCol = (\n          <>\n            <MetanodeChip type={this.props.node[field]} />\n            <span className='nowrap'>{this.props.node[field]}</span>\n          </>\n        );\n      } else if (field === 'source') {\n        // make link\n        const linkUrl = this.props.node.url || this.props.node.data.url || '';\n        let linkText = this.props.node.data.source || linkUrl;\n        linkText = shortenUrl(linkText);\n        secondCol = (\n          <a className='nowrap' href={linkUrl}>\n            {linkText}\n          </a>\n        );\n      }\n\n      // helper text when user hovers over given field\n      let tooltipText = {};\n      if (this.props.hetioDefinitions.properties) {\n        tooltipText = {\n          ...tooltipText,\n          ...this.props.hetioDefinitions.properties.common,\n          ...this.props.hetioDefinitions.properties.nodes\n        };\n      }\n      tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n      // return row entry\n      return (\n        <tr key={index}>\n          <td className='col_s small light left'>\n            <Tooltip text={tooltipText[field]}>{firstCol}</Tooltip>\n          </td>\n          <td>\n            <DynamicField value={secondCol} className='left' />\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  // display component\n  render() {\n    return (\n      <table className='node_results_table'>\n        <tbody>\n          {this.rows()}\n          <tr>\n            <td className='center' colSpan='2'>\n              <TextButton\n                text={this.state.showMore ? 'show less ' : 'show more '}\n                icon={this.state.showMore ? faAngleUp : faAngleDown}\n                className='link_button small'\n                onClick={this.toggleShowMore}\n                tooltipText='Show more information about the node'\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n// connect component to global state\nTableFull = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableFull);\n\n// table with no results component\nclass TableEmpty extends Component {\n  render() {\n    return (\n      <table className='node_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>\n              select a {this.props.label.toLowerCase()}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// remove unnecessary preceding 'www.' and etc from url\nfunction shortenUrl(url) {\n  const remove = ['http://', 'https://', 'www.'];\n  for (const str of remove)\n    url = url.replace(str, '');\n\n  return url;\n}\n","import React from 'react';\n\n// get html of number in exponential form\nexport function toExponential(number) {\n  number = parseFloat(number).toExponential(1);\n  const mantissa = parseFloat(number.split('e')[0]).toFixed(1);\n  const exponent = parseInt(number.split('e')[1]);\n  return (\n    <span>\n      {mantissa} &times; 10<sup>{exponent}</sup>\n    </span>\n  );\n}\n\n// get html of number in regular form, rounded to 1 decimal digit\nexport function toFixed(number) {\n  return <span>{parseFloat(number).toFixed(1)}</span>;\n}\n\n// map number to css color (rgba or hex) based on specified gradient\nexport function toGradient(number) {\n  // pretty gradient\n  let gradient = [\n    'rgba(255, 255, 255, 0)',\n    'rgba(255, 249, 196, 1)',\n    'rgba(255, 236, 179, 1)',\n    'rgba(255, 224, 178, 1)',\n    'rgba(255, 204, 188, 1)',\n    'rgba(248, 187, 208, 1)'\n  ];\n\n  // split each gradient color into component rgba values\n  gradient = gradient.map((color) => {\n    color = color.split(/[^0-9,]/).join('');\n    color = {\n      r: parseInt(color.split(',')[0]),\n      g: parseInt(color.split(',')[1]),\n      b: parseInt(color.split(',')[2]),\n      a: parseFloat(color.split(',')[3])\n    };\n    return color;\n  });\n\n  // take log of number\n  // (equivalent of getting exponent of number in exponential notation)\n  number = Math.log10(number);\n\n  // start/end cutoffs for exponent\n  const rangeStart = -1;\n  const rangeEnd = -10;\n\n  // get percent that number is through range\n  let percent = (number - rangeStart) / (rangeEnd - rangeStart);\n  percent = Math.min(Math.max(0, percent), 1);\n\n  // map percent to float gradient index\n  const gradientIndex = (gradient.length - 1) * percent;\n  // get integer indices below/above float index\n  const lowerColor = gradient[Math.floor(gradientIndex)];\n  const higherColor = gradient[Math.ceil(gradientIndex)];\n  // get percent that float index is between nearest integer indices\n  const percentBetween = gradientIndex % 1;\n\n  // interpolate color between gradient colors below/above float index\n  let color = {\n    r: lowerColor.r + (higherColor.r - lowerColor.r) * percentBetween,\n    g: lowerColor.g + (higherColor.g - lowerColor.g) * percentBetween,\n    b: lowerColor.b + (higherColor.b - lowerColor.b) * percentBetween,\n    a: lowerColor.a + (higherColor.a - lowerColor.a) * percentBetween\n  };\n\n  // clean rgba values\n  color.r = Math.floor(color.r);\n  color.g = Math.floor(color.g);\n  color.b = Math.floor(color.b);\n  color.a = color.a.toFixed(3);\n\n  // convert color in rgba format to css color string\n  color =\n    'rgba(' + color.r + ', ' + color.g + ', ' + color.b + ', ' + color.a + ')';\n\n  // return color\n  return color || '#ffffff';\n}\n\n// downloads provided data as csv file\n// data in format [ [A1, B1] , [A2, B2] ]\nexport function downloadCsv(data, filename) {\n  const fileContent = data.map((cell) => cell.join(',')).join('\\n');\n  const blob = new Blob([fileContent], { type: 'text/csv' });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  document.body.appendChild(link);\n  link.href = url;\n  link.download = (filename || 'data') + '.csv';\n  link.click();\n  window.URL.revokeObjectURL(url);\n  link.remove();\n}\n\n// make OS-friendly filename\nexport function makeFilenameFriendly(string) {\n  // remove leading and trailing whitespace\n  string = string.trim();\n  // replace special characters with dashes\n  string = string.replace(/[^0-9A-Za-z]/gi, '-');\n  // shorten if too long\n  string = string.substring(0, 15);\n  return string;\n}\n\nexport function downloadSvg(data, filename) {\n  const fileContent = new XMLSerializer().serializeToString(data);\n  const blob = new Blob([fileContent], { type: 'image/svg+xml' });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  document.body.appendChild(link);\n  link.href = url;\n  link.download = (filename || 'data') + '.svg';\n  link.click();\n  window.URL.revokeObjectURL(url);\n  link.remove();\n}\n\nexport function debug(...args) {\n  let div = document.getElementById('_debug');\n  if (!div) {\n    div = document.createElement('div');\n    div.id = '_debug';\n    div.style.position = 'fixed';\n    div.style.left = 0;\n    div.style.top = 0;\n    div.style.background = 'rgba(255, 255, 255, 0.75)';\n    div.style.fontFamily = 'monospace';\n    div.style.fontSize = '10px';\n    div.style.color = '#ff00ff';\n    div.style.zIndex = 99999;\n    document.body.appendChild(div);\n  }\n  div.innerHTML += args.join(' | ');\n  div.innerHTML += '<br>';\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { metapathChips } from './chips.js';\nimport { Button } from './buttons.js';\nimport { TextButton } from './buttons.js';\nimport { Checkbox } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { makeFilenameFriendly } from './util.js';\nimport { downloadCsv } from './util.js';\nimport { toFixed } from './util.js';\nimport { toExponential } from './util.js';\nimport { toGradient } from './util.js';\nimport { updateMetapaths } from './actions.js';\nimport './metapath-results.css';\n\n// path results section component\nexport class MetapathResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <CollapsibleSection\n          label='Metapaths'\n          tooltipText='Metapath results with p-value <= 0.1 and length (# of edges) <= 3'\n        >\n          {this.props.metapaths.length > 0 ? <TableFull /> : <TableEmpty />}\n        </CollapsibleSection>\n      </section>\n    );\n  }\n}\n// connect component to global state\nMetapathResults = connect((state) => ({\n  metapaths: state.metapaths\n}))(MetapathResults);\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.showMore = false;\n    this.state.allChecked = false;\n    this.state.sortColumn = 'p_value';\n    this.state.sortUp = false;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n    this.toggleAllChecked = this.toggleAllChecked.bind(this);\n    this.allChecked = this.allChecked.bind(this);\n    this.checkAll = this.checkAll.bind(this);\n    this.uncheckAll = this.uncheckAll.bind(this);\n    this.allOthersUnchecked = this.allOthersUnchecked.bind(this);\n    this.toggleChecked = this.toggleChecked.bind(this);\n    this.soloChecked = this.soloChecked.bind(this);\n    this.changeSort = this.changeSort.bind(this);\n    this.downloadCsv = this.downloadCsv.bind(this);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (this.props.metapaths !== prevProps.metapaths)\n      this.updateAllChecked();\n  }\n\n  // checks if all rows checked and updates state\n  updateAllChecked() {\n    if (this.allChecked())\n      this.setState({ allChecked: true });\n    else\n      this.setState({ allChecked: false });\n  }\n\n  // toggle show more/less\n  toggleShowMore(event) {\n    if (event)\n      event.preventDefault();\n\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // toggle check/uncheck all\n  toggleAllChecked() {\n    if (this.allChecked())\n      this.uncheckAll();\n    else\n      this.checkAll();\n  }\n\n  // checks whether all metapaths are checked\n  allChecked() {\n    for (const metapath of this.props.metapaths) {\n      if (!metapath.checked)\n        return false;\n    }\n\n    return true;\n  }\n\n  // makes all metapaths checked\n  checkAll() {\n    const metapaths = this.props.metapaths.slice();\n\n    for (const metapath of this.props.metapaths)\n      metapath.checked = true;\n\n    this.props.dispatch(updateMetapaths({ metapaths: metapaths }));\n  }\n\n  // makes all metapaths unchecked\n  uncheckAll() {\n    const metapaths = this.props.metapaths.slice();\n\n    for (const metapath of this.props.metapaths)\n      metapath.checked = false;\n\n    this.props.dispatch(updateMetapaths({ metapaths: metapaths }));\n  }\n\n  // checks whether all metapaths besides the specified are unchecked\n  allOthersUnchecked(id) {\n    for (const metapath of this.props.metapaths) {\n      if (id !== metapath.id && metapath.checked)\n        return false;\n    }\n\n    return true;\n  }\n\n  // toggles the specified metapaths on/off\n  toggleChecked(id) {\n    const metapaths = this.props.metapaths.slice();\n\n    for (const metapath of metapaths) {\n      if (metapath.id === id)\n        metapath.checked = !metapath.checked;\n    }\n\n    this.props.dispatch(updateMetapaths({ metapaths: metapaths }));\n  }\n\n  // solo metapath (turn all others off)\n  soloChecked(id) {\n    const metapaths = this.props.metapaths.slice();\n    const allOthersUnchecked = this.allOthersUnchecked(id);\n\n    for (const metapath of metapaths) {\n      if (allOthersUnchecked || id === metapath.id)\n        metapath.checked = true;\n      else\n        metapath.checked = false;\n    }\n\n    this.props.dispatch(updateMetapaths({ metapaths: metapaths }));\n  }\n\n  // change which column table is sorted by\n  changeSort(sortColumn) {\n    const newState = {};\n    newState.sortColumn = sortColumn;\n\n    if (sortColumn === this.state.sortColumn)\n      newState.sortUp = !this.state.sortUp;\n    else\n      newState.sortUp = true;\n\n    this.setState(newState);\n  }\n\n  // compare numbers (for sorting)\n  compareNumbers(a, b, key) {\n    // parse as numbers\n    const comparison = Number(a[key]) - Number(b[key]);\n    if (!Number.isNaN(comparison))\n      return comparison;\n\n    // otherwise parse as strings and compare alphabetically\n    if (a[key] < b[key])\n      return -1;\n    else if (a[key] > b[key])\n      return 1;\n    else\n      return 0;\n  }\n\n  // compare metapaths (for sorting)\n  compareMetapaths(a, b, key) {\n    a = a[key];\n    b = b[key];\n    // first by length\n    if (a.length < b.length)\n      return -1;\n    else if (a.length > b.length)\n      return 1;\n    else {\n      // then alphabetically\n      if (a < b)\n        return -1;\n      else if (a > b)\n        return 1;\n      else\n        return 0;\n    }\n  }\n\n  // download table data as .csv file\n  downloadCsv() {\n    if (\n      !this.props.metapaths.length ||\n      !this.props.sourceNode.name ||\n      !this.props.targetNode.name\n    )\n      return;\n\n    const tableData = makeMetapathsTable(this.props.metapaths);\n    const filename = [\n      'metapaths',\n      makeFilenameFriendly(this.props.sourceNode.name),\n      makeFilenameFriendly(this.props.targetNode.name)\n    ].join('_');\n    downloadCsv(tableData, filename);\n  }\n\n  // display component\n  render() {\n    // sort metapaths by specified column\n    const sortedMetapaths = this.props.metapaths;\n    const sortColumn = this.state.sortColumn;\n\n    // sort by appropriate field\n    if (sortColumn === 'metapath_metaedges')\n      sortedMetapaths.sort((a, b) => this.compareMetapaths(a, b, sortColumn));\n    else\n      sortedMetapaths.sort((a, b) => this.compareNumbers(a, b, sortColumn));\n\n    // reverse sort direction\n    if (this.state.sortUp)\n      sortedMetapaths.reverse();\n\n    const metapathCount = sortedMetapaths.length;\n    let metapathSelectedCount = 0;\n    for (const metapath of sortedMetapaths) {\n      if (metapath.checked)\n        metapathSelectedCount++;\n    }\n\n    return (\n      <TableContext.Provider\n        value={{\n          sortedMetapaths: sortedMetapaths,\n          showMore: this.state.showMore,\n          allChecked: this.state.allChecked,\n          toggleAllChecked: this.toggleAllChecked,\n          toggleChecked: this.toggleChecked,\n          soloChecked: this.soloChecked,\n          sortColumn: this.state.sortColumn,\n          sortUp: this.state.sortUp,\n          changeSort: this.changeSort\n        }}\n      >\n        <div className='table_attic'>\n          <TextButton\n            text='.csv'\n            icon={faDownload}\n            className='link_button small'\n            onClick={this.downloadCsv}\n            tooltipText='Download table as .csv file'\n          />\n          <TextButton\n            text={this.state.showMore ? 'show less ' : 'show more '}\n            icon={this.state.showMore ? faAngleLeft : faAngleRight}\n            className='link_button small'\n            onClick={this.toggleShowMore}\n            tooltipText='Expand table and show more columns'\n          />\n          <div className='small light right'>\n            {metapathCount} results, {metapathSelectedCount} selected\n          </div>\n        </div>\n        <div className='table_container' data-expanded={this.state.showMore}>\n          <table className='metapath_results_table'>\n            <TableHead />\n            <TableBody />\n          </table>\n        </div>\n      </TableContext.Provider>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst TableContext = React.createContext({});\n// connect component to global state\nTableFull = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metapaths: state.metapaths\n}))(TableFull);\n\n// table header component\n// contains column labels and sort buttons\nclass TableHead extends Component {\n  // display component\n  render() {\n    // extra 'super-grouping' row at top of table\n    const extraRow = (\n      <tr>\n        <td className='col_xs' />\n        <td className='col_l' />\n        <td className='col_s' />\n        <td className='col_m' />\n        <td className='col_s' />\n        <td className='col_s' />\n        <td className='col_s' />\n        <td className='col_xxl center' colSpan='4'>\n          <div className='divider'>Null DWPC distribution information</div>\n        </td>\n      </tr>\n    );\n\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.nodes\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n    // primary columns\n    const cols = (\n      <>\n        <td className='col_xs'>\n          <Checkbox\n            checked={this.context.allChecked}\n            onClick={() => this.context.toggleAllChecked()}\n            onCtrlClick={() => this.context.toggleAllChecked()}\n            tooltipText='Show all paths'\n          />\n        </td>\n        <TableHeadCell\n          className='col_l left'\n          buttonClass='left'\n          fieldName='metapath_metaedges'\n          tooltipText={tooltipText['metapath']}\n          text='metapath'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='path_count'\n          tooltipText={tooltipText['path_count']}\n          text='path count'\n        />\n        <TableHeadCell\n          className='col_m'\n          fieldName='p_value'\n          tooltipText={tooltipText['p_value']}\n          text={\n            <>\n              <i>p</i>-value\n            </>\n          }\n        />\n      </>\n    );\n\n    // extra columns\n    const extraCols = (\n      <>\n        <TableHeadCell\n          className='col_s'\n          fieldName='dwpc'\n          tooltipText={tooltipText['dwpc']}\n          text='DWPC'\n        />\n        <TableHeadCell\n          fieldName='dgp_source_degree'\n          tooltipText={tooltipText['dgp_source_degree']}\n          text='source degree'\n        />\n        <TableHeadCell\n          fieldName='dgp_target_degree'\n          tooltipText={tooltipText['dgp_target_degree']}\n          text='target degree'\n        />\n        <TableHeadCell\n          fieldName='dgp_n_dwpcs'\n          tooltipText={tooltipText['dgp_n_dwpcs']}\n          text=\"# DWPC's\"\n        />\n        <TableHeadCell\n          fieldName='dgp_n_nonzero_dwpcs'\n          tooltipText={tooltipText['dgp_n_nonzero_dwpcs']}\n          text=\"# non-0 DWPC's\"\n        />\n        <TableHeadCell\n          fieldName='dgp_nonzero_mean'\n          tooltipText={tooltipText['dgp_nonzero_mean']}\n          text='non-0 mean'\n        />\n        <TableHeadCell\n          fieldName='dgp_nonzero_sd'\n          tooltipText={tooltipText['dgp_nonzero_sd']}\n          text={<>non-0 &sigma;</>}\n        />\n      </>\n    );\n\n    return (\n      <thead className='small light'>\n        {this.context.showMore && extraRow}\n        <tr>\n          {cols}\n          {this.context.showMore && extraCols}\n        </tr>\n      </thead>\n    );\n  }\n}\n// connect component to context component\nTableHead.contextType = TableContext;\n// connect component to global state\nTableHead = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableHead);\n\n// table header cell component\nclass TableHeadCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className}>\n        <SortButton\n          text={this.props.text}\n          tooltipText={this.props.tooltipText}\n          fieldName={this.props.fieldName}\n          className={this.props.buttonClass}\n        />\n      </td>\n    );\n  }\n}\n\n// column sort button component\nclass SortButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText={this.props.tooltipText}\n        className={'sort_button ' + (this.props.className || '')}\n        onClick={() => this.context.changeSort(this.props.fieldName)}\n      >\n        {this.props.text}\n        <FontAwesomeIcon\n          icon={\n            this.props.fieldName === this.context.sortColumn\n              ? this.context.sortUp\n                ? faSortUp\n                : faSortDown\n              : faSort\n          }\n        />\n      </Button>\n    );\n  }\n}\n// connect component to context component\nSortButton.contextType = TableContext;\n\n// table body component\n// contains actual data\nclass TableBody extends Component {\n  // display component\n  render() {\n    return (\n      <tbody>\n        {this.context.sortedMetapaths.map((metapath, index) => (\n          <TableBodyRow\n            key={index}\n            metapath={metapath}\n            checked={metapath.checked}\n            showMore={this.props.showMore}\n          />\n        ))}\n      </tbody>\n    );\n  }\n}\n// connect component to context component\nTableBody.contextType = TableContext;\n\n// table body row component\n// contains column data for one metapath\nclass TableBodyRow extends Component {\n  // display component\n  render() {\n    const metapath = this.props.metapath;\n\n    // primary columns\n    const cols = (\n      <>\n        <td>\n          <Checkbox\n            checked={this.props.checked}\n            onClick={() => this.context.toggleChecked(this.props.metapath.id)}\n            onCtrlClick={() => this.context.soloChecked(this.props.metapath.id)}\n            tooltipText={\n              'Show these ' +\n              (this.props.metapath.path_count || '') +\n              ' paths in the paths table'\n            }\n          />\n        </td>\n        <TableBodyCell\n          className='left'\n          fieldClass='left'\n          value={metapathChips(metapath.metapath_metaedges)}\n          fullValue={metapath.metapath_name}\n        />\n        <TableBodyCell value={metapath.path_count} />\n        <TableBodyCell\n          className='right'\n          style={{ backgroundColor: toGradient(metapath.p_value) }}\n          value={toExponential(metapath.p_value)}\n          fullValue={metapath.p_value}\n        />\n      </>\n    );\n\n    // extra columns\n    const extraCols = (\n      <>\n        <TableBodyCell\n          value={toFixed(metapath.dwpc)}\n          fullValue={metapath.dwpc}\n        />\n        <TableBodyCell value={metapath.dgp_source_degree} />\n        <TableBodyCell value={metapath.dgp_target_degree} />\n        <TableBodyCell value={metapath.dgp_n_dwpcs} />\n        <TableBodyCell value={metapath.dgp_n_nonzero_dwpcs} />\n        <TableBodyCell\n          value={toFixed(metapath.dgp_nonzero_mean)}\n          fullValue={metapath.dgp_nonzero_mean}\n        />\n        <TableBodyCell\n          value={toFixed(metapath.dgp_nonzero_sd)}\n          fullValue={metapath.dgp_nonzero_sd}\n        />\n      </>\n    );\n\n    return (\n      <tr>\n        {cols}\n        {this.context.showMore && extraCols}\n      </tr>\n    );\n  }\n}\n// connect component to context component\nTableBodyRow.contextType = TableContext;\n\n// table body cell component\nclass TableBodyCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className} style={this.props.style}>\n        <DynamicField\n          value={this.props.value}\n          fullValue={this.props.fullValue}\n          className={this.props.fieldClass}\n        />\n      </td>\n    );\n  }\n}\n\n// table with no results component\nclass TableEmpty extends Component {\n  // display component\n  render() {\n    return (\n      <table className='metapath_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>no results to show</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// make table array out of metapaths results object\nfunction makeMetapathsTable(metapaths) {\n  let headers = [];\n  for (const field of Object.keys(metapaths[0])) {\n    if (\n      typeof metapaths[0][field] === 'number' ||\n      typeof metapaths[0][field] === 'string'\n    )\n      headers.push(field);\n  }\n\n  // sort headers in custom order\n  const order = {\n    id: 1,\n    metapath_name: 2,\n    metapath_abbreviation: 3,\n    path_count: 4,\n    p_value: 5,\n    dwpc: 6,\n    dgp_source_degree: 7,\n    dgp_target_degree: 8,\n    dgp_n_dwpcs: 9,\n    dgp_n_nonzero_dwpcs: 10,\n    dgp_nonzero_mean: 11,\n    dgp_nonzero_sd: 12\n  };\n  headers = headers.sort((a, b) => {\n    if (order[a] && order[b])\n      return order[a] - order[b];\n    else if (order[a])\n      return -1;\n    else if (order[b])\n      return 1;\n    else\n      return b - a;\n  });\n\n  const table = [];\n  table.push(headers);\n  for (const result of metapaths) {\n    const row = [];\n    for (const header of headers)\n      row.push(result[header]);\n    table.push(row);\n  }\n\n  return table;\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { Button } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { TextButton } from './buttons.js';\nimport { EyeCheckbox } from './buttons.js';\nimport { HighlighterCheckbox } from './buttons.js';\nimport { downloadCsv } from './util.js';\nimport { makeFilenameFriendly } from './util.js';\nimport { pathChips } from './chips.js';\nimport { updatePathQueries } from './actions.js';\nimport { toFixed } from './util.js';\nimport './path-results.css';\n\n// path results section component\nexport class PathResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <CollapsibleSection\n          label='Paths'\n          tooltipText='Paths of the selected metapaths'\n        >\n          {this.props.pathQueries.length > 0 ? <TableFull /> : <TableEmpty />}\n        </CollapsibleSection>\n      </section>\n    );\n  }\n}\n// connect component to global state\nPathResults = connect((state) => ({\n  pathQueries: state.pathQueries\n}))(PathResults);\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.showMore = false;\n    this.state.allChecked = false;\n    this.state.allHighlighted = false;\n    this.state.sortColumn = 'score';\n    this.state.sortUp = true;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n    this.toggleAllChecked = this.toggleAllChecked.bind(this);\n    this.allChecked = this.allChecked.bind(this);\n    this.checkAll = this.checkAll.bind(this);\n    this.uncheckAll = this.uncheckAll.bind(this);\n    this.allOthersUnchecked = this.allOthersUnchecked.bind(this);\n    this.toggleChecked = this.toggleChecked.bind(this);\n    this.soloChecked = this.soloChecked.bind(this);\n    this.toggleAllHighlighted = this.toggleAllHighlighted.bind(this);\n    this.allHighlighted = this.allHighlighted.bind(this);\n    this.highlightAll = this.highlightAll.bind(this);\n    this.unhighlightAll = this.unhighlightAll.bind(this);\n    this.allOthersUnhighlighted = this.allOthersUnhighlighted.bind(this);\n    this.toggleHighlighted = this.toggleHighlighted.bind(this);\n    this.soloHighlighted = this.soloHighlighted.bind(this);\n    this.changeSort = this.changeSort.bind(this);\n    this.downloadCsv = this.downloadCsv.bind(this);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (this.props.pathQueries !== prevProps.pathQueries) {\n      this.updateAllChecked();\n      this.updateAllHighlighted();\n    }\n  }\n\n  // toggle show more/less\n  toggleShowMore(event) {\n    if (event)\n      event.preventDefault();\n\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // checks if all rows checked and updates state\n  updateAllChecked() {\n    if (this.allChecked())\n      this.setState({ allChecked: true });\n    else\n      this.setState({ allChecked: false });\n  }\n\n  // toggle check/uncheck all\n  toggleAllChecked() {\n    if (this.allChecked())\n      this.uncheckAll();\n    else\n      this.checkAll();\n  }\n\n  // checks whether all paths are checked\n  allChecked() {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!path.checked)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // makes all paths checked\n  checkAll() {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths)\n        path.checked = true;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // makes all paths unchecked\n  uncheckAll() {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths)\n        path.checked = false;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // checks whether all paths besides the specified are unchecked\n  allOthersUnchecked(thePath) {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!this.comparePaths(path, thePath) && path.checked)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // toggles the specified paths on/off\n  toggleChecked(thePath) {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (this.comparePaths(path, thePath))\n          path.checked = !path.checked;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // solo path (turn all others off)\n  soloChecked(thePath) {\n    const pathQueries = this.props.pathQueries.slice();\n    const allOthersUnchecked = this.allOthersUnchecked(thePath);\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (allOthersUnchecked || this.comparePaths(path, thePath))\n          path.checked = true;\n        else\n          path.checked = false;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // checks if all rows highlighted and updates state\n  updateAllHighlighted() {\n    if (this.allHighlighted())\n      this.setState({ allHighlighted: true });\n    else\n      this.setState({ allHighlighted: false });\n  }\n\n  // toggle highlight/unhighlight all\n  toggleAllHighlighted() {\n    if (this.allHighlighted())\n      this.unhighlightAll();\n    else\n      this.highlightAll();\n  }\n\n  // checks whether all paths are highlighted\n  allHighlighted() {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!path.highlighted)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // makes all paths highlighted\n  highlightAll() {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths)\n        path.highlighted = true;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // makes all paths unhighlighted\n  unhighlightAll() {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths)\n        path.highlighted = false;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // checks whether all paths besides the specified are unhighlighted\n  allOthersUnhighlighted(thePath) {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!this.comparePaths(path, thePath) && path.highlighted)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // toggles the specified paths on/off\n  toggleHighlighted(thePath) {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (this.comparePaths(path, thePath))\n          path.highlighted = !path.highlighted;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // solo path (turn all others off)\n  soloHighlighted(thePath) {\n    const pathQueries = this.props.pathQueries.slice();\n    const allOthersUnhighlighted = this.allOthersUnhighlighted(thePath);\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (allOthersUnhighlighted)\n          path.highlighted = true;\n        else {\n          if (this.comparePaths(path, thePath))\n            path.highlighted = true;\n          else\n            path.highlighted = false;\n        }\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // checks if paths are equal\n  comparePaths(path1, path2) {\n    return (\n      JSON.stringify(path1.node_ids) === JSON.stringify(path2.node_ids) &&\n      JSON.stringify(path1.rel_ids) === JSON.stringify(path2.rel_ids)\n    );\n  }\n\n  // change which column table is sorted by\n  changeSort(sortColumn) {\n    const newState = {};\n    newState.sortColumn = sortColumn;\n\n    if (sortColumn === this.state.sortColumn)\n      newState.sortUp = !this.state.sortUp;\n    else\n      newState.sortUp = true;\n\n    this.setState(newState);\n  }\n\n  // compare numbers (for sorting)\n  compareNumbers(a, b, key) {\n    // parse as numbers\n    const comparison = Number(a[key]) - Number(b[key]);\n    if (!Number.isNaN(comparison))\n      return comparison;\n\n    // otherwise parse as strings and compare alphabetically\n    if (a[key] < b[key])\n      return -1;\n    else if (a[key] > b[key])\n      return 1;\n    else\n      return 0;\n  }\n\n  // download table data as .csv file\n  downloadCsv() {\n    if (\n      !this.props.pathQueries.length ||\n      !this.props.sourceNode.name ||\n      !this.props.targetNode.name\n    )\n      return;\n\n    const tableData = makePathsTable(this.props.pathQueries);\n    const filename = [\n      'paths',\n      makeFilenameFriendly(this.props.sourceNode.name),\n      makeFilenameFriendly(this.props.targetNode.name)\n    ].join('_');\n    downloadCsv(tableData, filename);\n  }\n\n  // display component\n  render() {\n    let nodes = {};\n    for (const pathQuery of this.props.pathQueries)\n      nodes = { ...nodes, ...pathQuery.nodes };\n\n    let edges = {};\n    for (const pathQuery of this.props.pathQueries)\n      edges = { ...edges, ...pathQuery.relationships };\n\n    let sortedPaths = [];\n    for (const pathQuery of this.props.pathQueries)\n      sortedPaths = [...sortedPaths, ...pathQuery.paths];\n\n    // construct full path description/name\n    sortedPaths = sortedPaths.map((path) => ({\n      ...path,\n      chipDescription: pathChips(\n        assemblePath(path, nodes, edges),\n        this.state.showMore\n      ),\n      textDescription: textDescription(assemblePath(path, nodes, edges))\n    }));\n\n    // sort paths by specified column\n    const sortColumn = this.state.sortColumn;\n\n    // sort by appropriate field\n    sortedPaths.sort((a, b) => this.compareNumbers(a, b, sortColumn));\n\n    // reverse sort direction\n    if (this.state.sortUp)\n      sortedPaths.reverse();\n\n    //\n    const pathCount = sortedPaths.length;\n    let pathSelectedCount = 0;\n    for (const path of sortedPaths) {\n      if (path.checked)\n        pathSelectedCount++;\n    }\n\n    return (\n      <TableContext.Provider\n        value={{\n          sortedPaths: sortedPaths,\n          showMore: this.state.showMore,\n          allChecked: this.state.allChecked,\n          toggleAllChecked: this.toggleAllChecked,\n          toggleChecked: this.toggleChecked,\n          soloChecked: this.soloChecked,\n          allHighlighted: this.state.allHighlighted,\n          toggleAllHighlighted: this.toggleAllHighlighted,\n          toggleHighlighted: this.toggleHighlighted,\n          soloHighlighted: this.soloHighlighted,\n          sortColumn: this.state.sortColumn,\n          sortUp: this.state.sortUp,\n          changeSort: this.changeSort\n        }}\n      >\n        <div className='table_attic'>\n          <TextButton\n            text='.csv'\n            icon={faDownload}\n            className='link_button small'\n            onClick={this.downloadCsv}\n            tooltipText='Download table as .csv file'\n          />\n          <TextButton\n            text={this.state.showMore ? 'show less ' : 'show more '}\n            icon={this.state.showMore ? faAngleLeft : faAngleRight}\n            className='link_button small'\n            onClick={this.toggleShowMore}\n            tooltipText='Expand table'\n          />\n          <div className='small light right'>\n            {pathCount} results, {pathSelectedCount} selected\n          </div>\n        </div>\n        <div className='table_container' data-expanded={this.state.showMore}>\n          <table\n            className='path_results_table'\n            data-expanded={this.state.showMore}\n          >\n            <TableHead />\n            <TableBody />\n          </table>\n        </div>\n      </TableContext.Provider>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst TableContext = React.createContext({});\n// connect component to global state\nTableFull = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metagraph: state.metagraph,\n  pathQueries: state.pathQueries\n}))(TableFull);\n\n// table header component\n// contains column labels and sort buttons\nclass TableHead extends Component {\n  // display component\n  render() {\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.nodes\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n    // primary columns\n    const cols = (\n      <>\n        <td className='col_xs'>\n          <EyeCheckbox\n            checked={this.context.allChecked}\n            onClick={() => this.context.toggleAllChecked()}\n            onCtrlClick={() => this.context.toggleAllChecked()}\n            tooltipText='Show all paths'\n          />\n        </td>\n        <td className='col_xs'>\n          <HighlighterCheckbox\n            checked={this.context.allHighlighted}\n            onClick={() => this.context.toggleAllHighlighted()}\n            onCtrlClick={() => this.context.toggleAllHighlighted()}\n            tooltipText='Highlight all paths'\n          />\n        </td>\n        <TableHeadCell\n          className='col_s left'\n          buttonClass='left'\n          fieldName='metapath'\n          tooltipText={tooltipText['metapath']}\n          text='metapath'\n        />\n        <TableHeadCell\n          className='col_xl left'\n          buttonClass='left'\n          fieldName='textDescription'\n          tooltipText={tooltipText['path']}\n          text='path'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='score'\n          tooltipText={tooltipText['score']}\n          text='path score'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='percent_of_DWPC'\n          tooltipText={tooltipText['percent_of_DWPC']}\n          text='% of DWPC'\n        />\n      </>\n    );\n\n    return (\n      <thead className='small light'>\n        <tr>{cols}</tr>\n      </thead>\n    );\n  }\n}\n// connect component to context component\nTableHead.contextType = TableContext;\n// connect component to global state\nTableHead = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableHead);\n\n// table header cell component\nclass TableHeadCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className}>\n        <SortButton\n          text={this.props.text}\n          tooltipText={this.props.tooltipText}\n          fieldName={this.props.fieldName}\n          className={this.props.buttonClass}\n        />\n      </td>\n    );\n  }\n}\n\n// column sort button component\nclass SortButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText={this.props.tooltipText}\n        className={'sort_button ' + (this.props.className || '')}\n        onClick={() => this.context.changeSort(this.props.fieldName)}\n      >\n        {this.props.text}\n        <FontAwesomeIcon\n          icon={\n            this.props.fieldName === this.context.sortColumn\n              ? this.context.sortUp\n                ? faSortUp\n                : faSortDown\n              : faSort\n          }\n        />\n      </Button>\n    );\n  }\n}\n// connect component to context component\nSortButton.contextType = TableContext;\n\n// table body component\n// contains actual data\nclass TableBody extends Component {\n  // display component\n  render() {\n    return (\n      <tbody>\n        {this.context.sortedPaths.map((path, index) => (\n          <TableBodyRow\n            key={index}\n            path={path}\n            checked={path.checked}\n            highlighted={path.highlighted}\n          />\n        ))}\n      </tbody>\n    );\n  }\n}\n// connect component to context component\nTableBody.contextType = TableContext;\n// connect component to global state\nTableBody = connect((state) => ({\n  pathQueries: state.pathQueries\n}))(TableBody);\n\n// table body row component\n// contains column data for one path\nclass TableBodyRow extends Component {\n  // display component\n  render() {\n    const path = this.props.path;\n\n    // primary columns\n    const cols = (\n      <>\n        <td>\n          <EyeCheckbox\n            checked={this.props.checked}\n            onClick={() => this.context.toggleChecked(this.props.path)}\n            onCtrlClick={() => this.context.soloChecked(this.props.path)}\n            tooltipText='Show this path in the graph display'\n          />\n        </td>\n        <td>\n          <HighlighterCheckbox\n            checked={this.props.highlighted}\n            onClick={() => this.context.toggleHighlighted(this.props.path)}\n            onCtrlClick={() => this.context.soloHighlighted(this.props.path)}\n            tooltipText='Highlight this path in the graph display'\n          />\n        </td>\n        <TableBodyCell\n          className='left small'\n          fieldClass='left'\n          value={path.metapath}\n          fullValue={path.metapath}\n        />\n        <TableBodyCell\n          className='left small'\n          fieldClass='left'\n          value={path.chipDescription}\n          fullValue={path.textDescription}\n        />\n        <TableBodyCell\n          value={path.score ? toFixed(path.score) : '-'}\n          fullValue={path.score || '-'}\n        />\n        <TableBodyCell\n          value={toFixed(path.percent_of_DWPC)}\n          fullValue={path.percent_of_DWPC}\n        />\n      </>\n    );\n\n    return <tr>{cols}</tr>;\n  }\n}\n// connect component to context component\nTableBodyRow.contextType = TableContext;\n\n// table body cell component\nclass TableBodyCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className} style={this.props.style}>\n        <DynamicField\n          value={this.props.value}\n          fullValue={this.props.fullValue}\n          className={this.props.fieldClass}\n        />\n      </td>\n    );\n  }\n}\n\n// table with no results component\nclass TableEmpty extends Component {\n  // display component\n  render() {\n    return (\n      <table className='metapath_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>no results to show</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// construct path object with relevant properties for each node/edge entry\nfunction assemblePath(path, nodes, edges) {\n  const pathNodes = [];\n  for (const nodeId of path.node_ids) {\n    const node = nodes[nodeId];\n    if (!node)\n      continue;\n\n    pathNodes.push({\n      element: 'node',\n      type: node.metanode,\n      name: node.data.name\n    });\n  }\n\n  const pathEdges = [];\n  for (let index = 0; index < path.rel_ids.length; index++) {\n    const edge = edges[path.rel_ids[index]];\n    const prevNode = nodes[path.node_ids[index]];\n    if (!edge || !prevNode)\n      continue;\n\n    let direction = '';\n    if (edge.directed) {\n      if (edge.source_neo4j_id === prevNode.neo4j_id)\n        direction = 'forward';\n      else\n        direction = 'backward';\n    }\n\n    pathEdges.push({\n      element: 'edge',\n      type: edge.kind,\n      direction: direction\n    });\n  }\n\n  const assembledPath = [];\n  for (const node of pathNodes) {\n    assembledPath.push(node);\n    if (pathEdges.length > 0)\n      assembledPath.push(pathEdges.shift());\n  }\n\n  return assembledPath;\n}\n\n// produce text path description from assembled path\nfunction textDescription(path) {\n  return path.map((entry) => {\n    if (entry.element === 'node')\n      return entry.name;\n    if (entry.element === 'edge') {\n      let arrow = '–';\n      if (entry.direction === 'forward')\n        arrow = '→';\n      else if (entry.direction === 'backward')\n        arrow = '←';\n      return ['', arrow, entry.type, arrow, ''].join(' ');\n    }\n    return '';\n  });\n}\n\n// make table array out of path queries results object\nfunction makePathsTable(pathQueries) {\n  let nodes = {};\n  for (const pathQuery of pathQueries)\n    nodes = { ...nodes, ...pathQuery.nodes };\n\n  let edges = {};\n  for (const pathQuery of pathQueries)\n    edges = { ...edges, ...pathQuery.relationships };\n\n  let paths = [];\n  for (const pathQuery of pathQueries)\n    paths = [...paths, ...pathQuery.paths];\n\n  for (const path of paths) {\n    path.description = textDescription(assemblePath(path, nodes, edges)).join(\n      ''\n    );\n  }\n\n  let headers = [];\n  for (const field of Object.keys(paths[0])) {\n    if (\n      typeof paths[0][field] === 'number' ||\n      typeof paths[0][field] === 'string'\n    )\n      headers.push(field);\n  }\n\n  // sort headers in custom order\n  const order = {\n    description: 1,\n    metapath: 2,\n    score: 3,\n    percent_of_DWPC: 4\n  };\n  headers = headers.sort((a, b) => {\n    if (order[a] && order[b])\n      return order[a] - order[b];\n    else if (order[a])\n      return -1;\n    else if (order[b])\n      return 1;\n    else\n      return b - a;\n  });\n\n  const table = [];\n  table.push(headers);\n  for (const result of paths) {\n    const row = [];\n    for (const header of headers)\n      row.push(result[header]);\n    table.push(row);\n  }\n\n  return table;\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Header } from './header.js';\nimport { NodeSearch } from './node-search.js';\nimport { NodeResults } from './node-results.js';\nimport { MetapathResults } from './metapath-results.js';\nimport { PathResults } from './path-results.js';\nimport { getMetagraph } from './backend-query.js';\nimport { getHetioDefinitions } from './backend-query.js';\nimport { getHetioStyles } from './backend-query.js';\nimport { getHetmechDefinitions } from './backend-query.js';\nimport { lookupNodeById } from './backend-query.js';\nimport { searchMetapaths } from './backend-query.js';\nimport { searchPaths } from './backend-query.js';\nimport { setDefinitions } from './actions.js';\nimport { updateSourceTargetNodes } from './actions.js';\nimport { updateMetapaths } from './actions.js';\nimport { updatePathQueries } from './actions.js';\nimport './styles.css';\n\n// main app component\nclass App extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.fetchDefinitions = this.fetchDefinitions.bind(this);\n    this.updateNodesFromUrl = this.updateNodesFromUrl.bind(this);\n    this.updateMetapaths = this.updateMetapaths.bind(this);\n    this.updateHistory = this.updateHistory.bind(this);\n    this.updateTitle = this.updateTitle.bind(this);\n    this.updatePaths = this.updatePaths.bind(this);\n\n    // fetch definitions when page first loads\n    this.fetchDefinitions();\n    // get parameters from url when page first loads\n    this.updateNodesFromUrl();\n    // listen for back/forward navigation (history)\n    window.addEventListener('popstate', this.updateNodesFromUrl);\n  }\n\n  // when component changes\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.sourceNode !== this.props.sourceNode ||\n      prevProps.targetNode !== this.props.targetNode\n    )\n      this.onNodeChange();\n    if (prevProps.metapaths !== this.props.metapaths)\n      this.onMetapathChange();\n  }\n\n  // get metagraph, hetio definitions, and hetmech definitions\n  fetchDefinitions() {\n    this.props.dispatch((dispatch) => {\n      // wait until all fetches return to update state\n      const promises = [\n        getMetagraph(),\n        getHetioDefinitions(),\n        getHetioStyles(),\n        getHetmechDefinitions()\n      ];\n      Promise.all(promises).then((results) => {\n        dispatch(\n          setDefinitions({\n            metagraph: results[0],\n            hetioDefinitions: results[1],\n            hetioStyles: results[2],\n            hetmechDefinitions: results[3]\n          })\n        );\n      });\n    });\n  }\n\n  // update source/target nodes from url\n  updateNodesFromUrl() {\n    this.props.dispatch((dispatch) => {\n      const params = new URLSearchParams(window.location.search);\n      const sourceNodeId = params.get('source');\n      const targetNodeId = params.get('target');\n\n      // wait until both node searches return to update state\n      const promises = [\n        lookupNodeById(sourceNodeId),\n        lookupNodeById(targetNodeId)\n      ];\n      Promise.all(promises).then((results) => {\n        dispatch(\n          updateSourceTargetNodes({\n            sourceNode: results[0],\n            targetNode: results[1]\n          })\n        );\n      });\n    });\n  }\n\n  // when source/target node change\n  onNodeChange() {\n    // update history url before title to make sure title gets changed for\n    // correct page\n    this.updateMetapaths();\n    this.updateHistory();\n    this.updateTitle();\n  }\n\n  // update metapaths (node pair query results) when source/target node change\n  updateMetapaths() {\n    this.props.dispatch((dispatch) =>\n      searchMetapaths(this.props.sourceNode.id, this.props.targetNode.id).then(\n        (results) =>\n          dispatch(\n            updateMetapaths({\n              metapaths: results\n            })\n          )\n      )\n    );\n  }\n\n  // add history entry for source/target node without navigating page\n  updateHistory() {\n    const oldParams = new URLSearchParams(window.location.search);\n    const newParams = new URLSearchParams();\n\n    if (this.props.sourceNode.id)\n      newParams.set('source', this.props.sourceNode.id);\n    if (this.props.targetNode.id)\n      newParams.set('target', this.props.targetNode.id);\n\n    // if url already matches source/target nodes, don't update.\n    // will prevent extra history entry from getting source/target from url on\n    // page load\n    if (\n      (oldParams.get('source') === newParams.get('source')) &\n      (oldParams.get('target') === newParams.get('target'))\n    )\n      return;\n\n    let search = newParams.toString();\n    if (search.length > 0)\n      search = '?' + search;\n\n    const url = window.location.origin + window.location.pathname + search;\n    window.history.pushState({}, '', url);\n  }\n\n  // update page title based on source/target node\n  updateTitle() {\n    if (!this.props.sourceNode.id && !this.props.targetNode.id)\n      return;\n    const title =\n      'hetmech · ' +\n      (this.props.sourceNode.name || '___') +\n      ' → ' +\n      (this.props.targetNode.name || '___');\n    document.title = title;\n  }\n\n  // when checked metapaths changes\n  onMetapathChange() {\n    this.updatePaths();\n  }\n\n  // update paths when checked metapaths changes\n  updatePaths() {\n    this.props.dispatch((dispatch) => {\n      // fetch paths for all checked metapaths\n      const promises = [];\n      for (const metapath of this.props.metapaths) {\n        if (metapath.checked) {\n          promises.push(\n            searchPaths(\n              this.props.sourceNode.id,\n              this.props.targetNode.id,\n              metapath.metapath_abbreviation\n            )\n          );\n        }\n      }\n\n      // update path queries when all queries have returned\n      Promise.all(promises).then((results) => {\n        dispatch(\n          updatePathQueries({\n            pathQueries: results\n          })\n        );\n      });\n    });\n  }\n\n  // display component\n  render() {\n    return (\n      <>\n        <Header />\n        <NodeSearch />\n        <NodeResults />\n        <MetapathResults />\n        <PathResults />\n      </>\n    );\n  }\n}\n// connect component to global state\nApp = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metapaths: state.metapaths\n}))(App);\n\nexport { App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport { Reducer } from './reducers.js';\nimport { App } from './app.js';\n\n// create global state store\nconst store = createStore(Reducer, applyMiddleware(thunk));\n\n// render/run app\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","// map previous global state to new global state based on action\nexport function Reducer(previousState = {}, action) {\n  // start with previous state\n  const newState = { ...previousState };\n\n  // detect action type and set new state accordingly\n  switch (action.type) {\n    // set definitions\n    case 'set_definitions':\n      if (action.payload.metagraph !== undefined)\n        newState.metagraph = action.payload.metagraph;\n      if (action.payload.hetioDefinitions !== undefined)\n        newState.hetioDefinitions = action.payload.hetioDefinitions;\n      if (action.payload.hetioStyles !== undefined)\n        newState.hetioStyles = action.payload.hetioStyles;\n      if (action.payload.hetmechDefinitions !== undefined)\n        newState.hetmechDefinitions = action.payload.hetmechDefinitions;\n      break;\n\n    // update source and/or target node\n    case 'update_source_target_nodes':\n      if (action.payload.sourceNode !== undefined)\n        newState.sourceNode = action.payload.sourceNode;\n      if (action.payload.targetNode !== undefined)\n        newState.targetNode = action.payload.targetNode;\n      break;\n\n    // swap source/target nodes\n    case 'swap_source_target_nodes':\n      if (previousState.sourceNode && previousState.targetNode) {\n        newState.sourceNode = previousState.targetNode;\n        newState.targetNode = previousState.sourceNode;\n      }\n      break;\n\n    // update metapaths\n    case 'update_metapaths':\n      if (action.payload.metapaths !== undefined)\n        newState.metapaths = action.payload.metapaths;\n      break;\n\n    // update path queries\n    case 'update_path_queries':\n      if (action.payload.pathQueries !== undefined)\n        newState.pathQueries = action.payload.pathQueries;\n      break;\n\n    default:\n      break;\n  }\n\n  // make sure critical variables defined\n  if (!newState.metagraph)\n    newState.metagraph = {};\n  if (!newState.hetioDefinitions)\n    newState.hetioDefinitions = {};\n  if (!newState.hetioStyles)\n    newState.hetioStyles = {};\n  if (!newState.hetmechDefinitions)\n    newState.hetmechDefinitions = {};\n  if (!newState.sourceNode)\n    newState.sourceNode = {};\n  if (!newState.targetNode)\n    newState.targetNode = {};\n  if (!newState.metapaths)\n    newState.metapaths = [];\n  if (!newState.pathQueries)\n    newState.pathQueries = [];\n\n  // set new state\n  return newState;\n}\n"],"sourceRoot":""}