{"version":3,"sources":["util.js","logo-animated.svg","header.js","arrow-icon-both.svg","arrow-icon-forward.svg","arrow-icon-backward.svg","chip-gene.svg","chip-compound.svg","chip-anatomy.svg","chip-disease.svg","chip-symptom.svg","chip-side-effect.svg","chip-biological-process.svg","chip-cellular-component.svg","chip-molecular-function.svg","chip-pathway.svg","chip-pharmacologic-class.svg","chips.js","tooltip.js","buttons.js","backend-query.js","actions.js","node-search.js","dynamic-field.js","collapsible-section.js","node-results.js","metapath-results.js","path-results.js","number-box.js","path-graph.js","app.js","index.js","reducers.js"],"names":["toExponential","number","parseFloat","mantissa","split","toFixed","exponent","parseInt","react_default","a","createElement","toGradient","gradient","map","color","join","r","g","b","percent","Math","log10","min","max","gradientIndex","length","lowerColor","floor","higherColor","ceil","percentBetween","downloadCsv","data","filename","fileContent","cell","blob","Blob","type","url","window","URL","createObjectURL","link","document","body","appendChild","href","download","click","revokeObjectURL","remove","makeFilenameFriendly","string","trim","replace","substring","sortCustom","array","order","key","sort","indexOf","transferObjectProps","oldArray","newArray","compareKeys","transferKeys","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","newElement","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","oldElement","matches","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","compareKey","err","return","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","transferKey","compareArrays","array1","array2","checkReverse","every","element","index","slice","reverse","cutString","n","copyObject","object","JSON","parse","stringify","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","logo_animated_ref2","logo_animated_ref3","id","stroke","strokeWidth","fill","d","_ref4","_ref5","transform","cx","cy","_ref6","_ref7","_ref8","logo_animated_SvgLogoAnimated","_ref","svgRef","props","viewBox","ref","ForwardRef","forwardRef","Header","__webpack_require__","p","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","showLogo","setTimeout","setState","inherits","createClass","logo","className","Component","arrow_icon_both_extends","arrow_icon_both_objectWithoutProperties","arrow_icon_both_objectWithoutPropertiesLoose","arrow_icon_both_ref2","arrow_icon_both_SvgArrowIconBoth","arrow_icon_both_ForwardRef","arrow_icon_forward_extends","arrow_icon_forward_objectWithoutProperties","arrow_icon_forward_objectWithoutPropertiesLoose","arrow_icon_forward_ref2","arrow_icon_forward_SvgArrowIconForward","arrow_icon_forward_ForwardRef","arrow_icon_backward_extends","arrow_icon_backward_objectWithoutProperties","arrow_icon_backward_objectWithoutPropertiesLoose","arrow_icon_backward_ref2","arrow_icon_backward_SvgArrowIconBackward","arrow_icon_backward_ForwardRef","chip_gene_extends","chip_gene_objectWithoutProperties","chip_gene_objectWithoutPropertiesLoose","chip_gene_ref2","chip_gene_SvgChipGene","chip_gene_ForwardRef","chip_compound_extends","chip_compound_objectWithoutProperties","chip_compound_objectWithoutPropertiesLoose","chip_compound_ref2","chip_compound_SvgChipCompound","chip_compound_ForwardRef","chip_anatomy_extends","chip_anatomy_objectWithoutProperties","chip_anatomy_objectWithoutPropertiesLoose","chip_anatomy_ref2","x","y","width","height","chip_anatomy_ref3","strokeLinecap","clipPath","chip_anatomy_SvgChipAnatomy","chip_anatomy_ForwardRef","chip_disease_extends","chip_disease_objectWithoutProperties","chip_disease_objectWithoutPropertiesLoose","chip_disease_ref2","chip_disease_SvgChipDisease","chip_disease_ForwardRef","chip_symptom_extends","chip_symptom_objectWithoutProperties","chip_symptom_objectWithoutPropertiesLoose","chip_symptom_ref2","chip_symptom_ref3","chip_symptom_SvgChipSymptom","chip_symptom_ForwardRef","chip_side_effect_extends","chip_side_effect_objectWithoutProperties","chip_side_effect_objectWithoutPropertiesLoose","chip_side_effect_ref2","chip_side_effect_ref3","chip_side_effect_SvgChipSideEffect","chip_side_effect_ForwardRef","chip_biological_process_extends","chip_biological_process_objectWithoutProperties","chip_biological_process_objectWithoutPropertiesLoose","chip_biological_process_ref2","chip_biological_process_ref3","chip_biological_process_SvgChipBiologicalProcess","chip_biological_process_ForwardRef","chip_cellular_component_extends","chip_cellular_component_objectWithoutProperties","chip_cellular_component_objectWithoutPropertiesLoose","chip_cellular_component_ref2","chip_cellular_component_ref3","chip_cellular_component_SvgChipCellularComponent","chip_cellular_component_ForwardRef","chip_molecular_function_extends","chip_molecular_function_objectWithoutProperties","chip_molecular_function_objectWithoutPropertiesLoose","chip_molecular_function_ref2","chip_molecular_function_ref3","strokeLinejoin","chip_molecular_function_ref4","chip_molecular_function_SvgChipMolecularFunction","chip_molecular_function_ForwardRef","chip_pathway_extends","chip_pathway_objectWithoutProperties","chip_pathway_objectWithoutPropertiesLoose","chip_pathway_ref2","chip_pathway_ref3","chip_pathway_ref4","chip_pathway_SvgChipPathway","chip_pathway_ForwardRef","chip_pharmacologic_class_extends","chip_pharmacologic_class_objectWithoutProperties","chip_pharmacologic_class_objectWithoutPropertiesLoose","chip_pharmacologic_class_ref2","chip_pharmacologic_class_ref3","chip_pharmacologic_class_SvgChipPharmacologicClass","chip_pharmacologic_class_ForwardRef","MetanodeChip","icon","fillColor","textColor","style","hetioStyles","fill_color","text_color","connect","MetaedgeChip","_Component2","direction","abbreviation","metagraph","kind_to_abbrev","data-name","data-abbreviation","pathChips","path","expanded","entry","chips_NodeChip","name","chips_MetaedgeChip","NodeChip","_Component3","background","data-expanded","Tooltip","open","opacity","onMouseEnter","bind","assertThisInitialized","openTooltip","onMouseLeave","event","_this2","hover","left","getBoundingClientRect","documentElement","scrollLeft","top","scrollTop","clientWidth","text","Fragment","children","React","Children","isValidElement","cloneElement","tooltip_Popup","Popup","ReactDOM","createPortal","Fade_default","in","Button","tooltip_Tooltip","tooltipText","onClick","ctrlKey","onCtrlClick","shiftKey","onShiftClick","TextButton","buttons_Button","index_es","Checkbox","checked","faCheck","EyeCheckbox","_Component4","faEye","HighlighterCheckbox","_Component5","faHighlighter","metagraphUrl","hetioDefinitions","nodeSearchServer","randomNodeServer","metapathSearchServer","pathSearchServer","fetchJson","fetch","then","response","json","results","catch","error","console","log","lookupNodeById","searchMetapaths","sourceId","targetId","params","URLSearchParams","set","toString","path_counts","searchPaths","metapath","updateSourceTargetNodes","_ref2","payload","sourceNode","targetNode","updateUrl","dontUpdateUrl","updateMetapaths","_ref3","metapaths","preserveChecks","updatePathQueries","pathQueries","NodeSearch","filters","filterString","updateFilters","NodeSearchContext","Provider","node_search_Filters","node_search_SourceNodeSearch","node_search_SwapButton","node_search_RandomButton","node_search_TargetNodeSearch","createContext","Filters","toggle","solo","prevProps","metanode_kinds","filter","push","active","newFilters","allOthersOff","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","allOn","list","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_this3","buttons","node_search_FilterButton","metanodes","FilterButton","_this4","chips_MetanodeChip","SourceNodeSearch","_this5","onChange","dispatch","node_search_SearchBox","label","node","TargetNodeSearch","_this6","activeElement","blur","SearchBox","_this7","searchResults","inputRef","createRef","formRef","onInput","searchString","_this8","metatypes","searchNodes","context","item","_this9","downshift_esm","onInputValueChange","itemToString","selectedItem","getInputProps","getItemProps","getMenuProps","isOpen","highlightedIndex","clearSelection","node_search_TextBox","node_search_Dropdown","contextType","TextBox","_this10","focused","onFocus","onBlur","overlay","showOverlay","metanode","TextField_default","placeholder","classes","root","InputProps","input","faSearch","Dropdown","_this11","Popper_default","anchorEl","current","placement","container","disablePortal","Paper_default","result","MenuItem_default","identifier","SwapButton","_this12","faExchangeAlt","RandomButton","_this13","_this14","Promise","all","source_id","target_id","slicedToArray","newSourceNode","newTargetNode","faDice","DynamicField","field","tagName","toLowerCase","focus","deselectAll","selectAll","getSelection","empty","selectAllChildren","displayValue","fullValue","tabIndex","CollapsibleSection","collapsed","loadState","saveState","localStorage","getItem","setItem","String","data-collapsed","faAngleUp","faAngleDown","NodeResults","node_results_NodeCard","NodeCard","collapsible_section_CollapsibleSection","node_results_TableFull","node_results_TableEmpty","TableFull","showMore","toggleShowMore","properties","objectSpread","common","nodes","hetmechDefinitions","primaryFields","specialSecondCol","linkUrl","linkText","_i","_regexes","regex","RegExp","shortenUrl","firstCol","secondCol","splice","findIndex","extraFields","fields","concat","dynamic_field_DynamicField","rows","colSpan","buttons_TextButton","TableEmpty","MetapathResults","metapath_results_TableFull","metapath_results_TableEmpty","allChecked","sortColumn","sortUp","toggleAllChecked","checkAll","uncheckAll","allOthersUnchecked","toggleChecked","soloChecked","changeSort","updateAllChecked","preventDefault","newMetapaths","newState","comparison","Number","isNaN","headers","_Object$keys","table","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","row","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","header","makeMetapathsTable","sortedMetapaths","compareMetapaths","compareNumbers","metapathCount","metapathSelectedCount","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","TableContext","faDownload","faAngleLeft","faAngleRight","metapath_results_TableHead","metapath_results_TableBody","TableHead","extraRow","cols","buttons_Checkbox","metapath_results_TableHeadCell","buttonClass","fieldName","extraCols","TableHeadCell","metapath_results_SortButton","SortButton","faSortUp","faSortDown","faSort","TableBody","metapath_results_TableBodyRow","TableBodyRow","edges","path_count","metapath_results_TableBodyCell","fieldClass","metapath_metaedges","metapath_name","backgroundColor","adjusted_p_value","p_value","dwpc","dgp_source_degree","dgp_target_degree","dgp_n_dwpcs","dgp_n_nonzero_dwpcs","dgp_nonzero_mean","dgp_nonzero_sd","TableBodyCell","PathResults","path_results_TableFull","path_results_TableEmpty","allHighlighted","toggleAllHighlighted","highlightAll","unhighlightAll","allOthersUnhighlighted","toggleHighlighted","soloHighlighted","updateAllHighlighted","pathQuery","paths","newPathQueries","thePath","comparePaths","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","highlighted","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_iterator24","path1","path2","node_ids","rel_ids","_iteratorNormalCompletion31","_didIteratorError31","_iteratorError31","_step31","_iterator31","_iteratorNormalCompletion32","_didIteratorError32","_iteratorError32","_step32","_iterator32","relationships","_iteratorNormalCompletion33","_didIteratorError33","_iteratorError33","_step33","_iterator33","toConsumableArray","_i2","_paths","description","textDescription","assemblePath","_i3","_i4","_paths2","_iteratorNormalCompletion34","_didIteratorError34","_iteratorError34","_step34","_iterator34","makePathsTable","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","_iteratorNormalCompletion26","_didIteratorError26","_iteratorError26","_step26","_iterator26","sortedPaths","_iteratorNormalCompletion27","_didIteratorError27","_iteratorError27","_step27","_iterator27","chipDescription","pathCount","pathSelectedCount","_iteratorNormalCompletion28","_didIteratorError28","_iteratorError28","_step28","_iterator28","pathHighlightedCount","_iteratorNormalCompletion29","_didIteratorError29","_iteratorError29","_step29","_iterator29","path_results_TableContext","path_results_TableHead","path_results_TableBody","buttons_EyeCheckbox","buttons_HighlighterCheckbox","path_results_TableHeadCell","path_results_SortButton","path_results_TableBodyRow","path_results_TableBodyCell","score","percent_of_DWPC","pathNodes","_iteratorNormalCompletion30","_didIteratorError30","_iteratorError30","_step30","_iterator30","pathEdges","edge","prevNode","directed","source_neo4j_id","neo4j_id","kind","assembledPath","_pathNodes","shift","arrow","NumberBox","onKeyPress","nativeEvent","onArrows","onType","onSubmit","step","maxWidth","maxHeight","edgeSpreadAngle","PI","PathGraph","nodeCount","edgeCount","selectedElement","graph","expandContainer","collapseContainer","updateSectionWidth","setWidth","setHeight","fitView","setGraphCounts","setSelectedElement","addEventListener","prevState","round","sectionWidth","findDOMNode","proportionalHeight","XMLSerializer","serializeToString","downloadSvg","getElementById","info","elementType","path_graph_SelectedInfo","faPowerOff","restartGraph","faMapMarkerAlt","unpinAll","faMapMarker","pinAll","faExpand","number_box_NumberBox","faExpandArrowsAlt","faCompressArrowsAlt","path_graph_Graph","Graph","assembleGraph","resetView","onSimulationTick","onNodeEdgeClick","onNodeDragStart","onNodeDragEnd","onViewClick","createGraph","updateGraph","simulation","alpha","restart","svg","d3","force","distance","radius","strength","on","viewZoomHandler","scaleExtent","onViewZoom","nodeDragHandler","onNodeDrag","each","positionEdge","positionEdgeLabel","positionNode","s","attr","x1","y1","x2","y2","angle","atan2","targetRadius","nodeRadius","edgeArrowSize","coincidentOffset","cos","sin","angleOffset","sqrt","pow","sag","textX","textY","dy","edgeLabel","contents","getBBox","midX","midY","scale","translateX","translateY","translate","forEach","fx","fy","stopPropagation","selected","updateNodeCircles","updateEdgeLines","alphaTarget","links","edgeLineHighlights","enter","append","merge","exit","edgeLines","edgeThickness","edgeLabels","nodeCircleHighlights","nodeCircles","getNodeFillColor","layer","nodeLabels","select","nodeFontSize","getNodeTextColor","html","updateEdgeLineHighlights","updateEdgeLabels","updateNodeCircleHighlights","updateNodeLabels","pinSourceAndTargetNodes","updateSimulation","target_neo4j_id","nodeDistance","firstPath","_loop","nodeId","existingNode","find","existing","_loop2","relId","existingEdge","edgeBins","_loop3","edgeA","matched","_edgeBins2","edgeBin","edgeB","_edgeBins","firstSource","offset","sourceNodeIndex","targetNodeIndex","minLeft","title","location","xmlns","refX","refY","orient","markerUnits","markerWidth","markerHeight","SelectedInfo","Array","col","App","fetchDefinitions","updateStateFromUrl","updatePaths","updateTitle","promises","checkedMetapaths","search","get","newMetapath","includes","metapath_abbreviation","header_Header","node_search_NodeSearch","node_results_NodeResults","metapath_results_MetapathResults","path_results_PathResults","path_graph_PathGraph","store","createStore","action","oldQueries","newQueries","subKey","element1","element2","newQuery","oldQuery","isArray","transferQueryProps","newParams","origin","pathname","history","pushState","applyMiddleware","thunk","render","react_redux_es","app_App"],"mappings":"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","file":"static/js/main.4078aaa6.chunk.js","sourcesContent":["import React from 'react';\n\n// get html of number in exponential form\nexport function toExponential(number) {\n  number = parseFloat(number).toExponential(1);\n  const mantissa = parseFloat(number.split('e')[0]).toFixed(1);\n  const exponent = parseInt(number.split('e')[1]);\n  return (\n    <span>\n      {mantissa} &times; 10<sup>{exponent}</sup>\n    </span>\n  );\n}\n\n// get html of number in regular form, rounded to 1 decimal digit\nexport function toFixed(number) {\n  return <span>{parseFloat(number).toFixed(1)}</span>;\n}\n\n// map number to css color (rgba or hex) based on specified gradient\nexport function toGradient(number) {\n  // pretty gradient\n  let gradient = [\n    'rgba(255, 255, 255, 0)',\n    'rgba(255, 249, 196, 1)',\n    'rgba(255, 236, 179, 1)',\n    'rgba(255, 224, 178, 1)',\n    'rgba(255, 204, 188, 1)',\n    'rgba(248, 187, 208, 1)'\n  ];\n\n  // split each gradient color into component rgba values\n  gradient = gradient.map((color) => {\n    color = color.split(/[^0-9,]/).join('');\n    color = {\n      r: parseInt(color.split(',')[0]),\n      g: parseInt(color.split(',')[1]),\n      b: parseInt(color.split(',')[2]),\n      a: parseFloat(color.split(',')[3])\n    };\n    return color;\n  });\n\n  // take log of number\n  // (equivalent of getting exponent of number in exponential notation)\n  number = Math.log10(number);\n\n  // start/end cutoffs for exponent\n  const rangeStart = 0;\n  const rangeEnd = -8;\n\n  // get percent that number is through range\n  let percent = (number - rangeStart) / (rangeEnd - rangeStart);\n  percent = Math.min(Math.max(0, percent), 1);\n\n  // map percent to float gradient index\n  const gradientIndex = (gradient.length - 1) * percent;\n  // get integer indices below/above float index\n  const lowerColor = gradient[Math.floor(gradientIndex)];\n  const higherColor = gradient[Math.ceil(gradientIndex)];\n  // get percent that float index is between nearest integer indices\n  const percentBetween = gradientIndex % 1;\n\n  // interpolate color between gradient colors below/above float index\n  let color = {\n    r: lowerColor.r + (higherColor.r - lowerColor.r) * percentBetween,\n    g: lowerColor.g + (higherColor.g - lowerColor.g) * percentBetween,\n    b: lowerColor.b + (higherColor.b - lowerColor.b) * percentBetween,\n    a: lowerColor.a + (higherColor.a - lowerColor.a) * percentBetween\n  };\n\n  // clean rgba values\n  color.r = Math.floor(color.r);\n  color.g = Math.floor(color.g);\n  color.b = Math.floor(color.b);\n  color.a = color.a.toFixed(3);\n\n  // convert color in rgba format to css color string\n  color =\n    'rgba(' + color.r + ', ' + color.g + ', ' + color.b + ', ' + color.a + ')';\n\n  // return color\n  return color || '#ffffff';\n}\n\n// downloads provided data as csv file\n// data in format [ [A1, B1] , [A2, B2] ]\nexport function downloadCsv(data, filename) {\n  const fileContent = data.map((cell) => cell.join(',')).join('\\n');\n  const blob = new Blob([fileContent], { type: 'text/csv' });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  document.body.appendChild(link);\n  link.href = url;\n  link.download = (filename || 'data') + '.csv';\n  link.click();\n  window.URL.revokeObjectURL(url);\n  link.remove();\n}\n\n// make OS-friendly filename\nexport function makeFilenameFriendly(string) {\n  // remove leading and trailing whitespace\n  string = string.trim();\n  // replace special characters with dashes\n  string = string.replace(/[^0-9A-Za-z]/gi, '-');\n  // shorten if too long\n  string = string.substring(0, 15);\n  return string;\n}\n\n// downloads provided data as svg file\nexport function downloadSvg(data, filename) {\n  const fileContent = new XMLSerializer().serializeToString(data);\n  const blob = new Blob([fileContent], { type: 'image/svg+xml' });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  document.body.appendChild(link);\n  link.href = url;\n  link.download = (filename || 'data') + '.svg';\n  link.click();\n  window.URL.revokeObjectURL(url);\n  link.remove();\n}\n\n// show debug message on screen\n// useful for mobile debugging where no dev console available\nexport function debug(...args) {\n  let div = document.getElementById('_debug');\n  if (!div) {\n    div = document.createElement('div');\n    div.id = '_debug';\n    div.style.position = 'fixed';\n    div.style.left = 0;\n    div.style.top = 0;\n    div.style.background = 'rgba(255, 255, 255, 0.75)';\n    div.style.fontFamily = 'monospace';\n    div.style.fontSize = '10px';\n    div.style.color = '#ff00ff';\n    div.style.zIndex = 99999;\n    document.body.appendChild(div);\n  }\n  div.innerHTML += args.join(' | ');\n  div.innerHTML += '<br>';\n}\n\n// sort array in custom order\nexport function sortCustom(array, order, key) {\n  return array.sort((a, b) => {\n    if (key) {\n      a = a[key];\n      b = b[key];\n    }\n\n    a = order.indexOf(a);\n    b = order.indexOf(b);\n\n    if (a !== -1 && b !== -1)\n      return a - b;\n    else if (a !== -1)\n      return -1;\n    else if (b !== -1)\n      return 1;\n    else\n      return b - a;\n  });\n}\n\n// remove unnecessary preceding 'www.' and etc from url\nexport function shortenUrl(url) {\n  const regexes = ['^http://', '^https://', '^www.'];\n  for (const regex of regexes)\n    url = url.replace(new RegExp(regex), '');\n\n  return url;\n}\n\n// loop through new array of objects. for each object, find object in old\n// array that matches all compare keys, and transfer specified keys from\n// old object to new\nexport function transferObjectProps(\n  oldArray,\n  newArray,\n  compareKeys,\n  transferKeys\n) {\n  for (const newElement of newArray) {\n    for (const oldElement of oldArray) {\n      let matches = true;\n      for (const compareKey of compareKeys) {\n        if (oldElement[compareKey] !== newElement[compareKey]) {\n          matches = false;\n          break;\n        }\n      }\n      if (matches) {\n        for (const transferKey of transferKeys)\n          newElement[transferKey] = oldElement[transferKey];\n      }\n    }\n  }\n\n  return newArray;\n}\n\n// same as transferObjectProps, except arrays are now assumed to contain\n// objects with subKey that contains another array that contains the objects\n// to be transferred\nexport function transferQueryProps(\n  oldQueries,\n  newQueries,\n  subKey,\n  compareKeys,\n  transferKeys\n) {\n  for (const newQuery of newQueries) {\n    for (const newElement of newQuery[subKey]) {\n      for (const oldQuery of oldQueries) {\n        for (const oldElement of oldQuery[subKey]) {\n          let matches = true;\n          for (const compareKey of compareKeys) {\n            if (\n              !compareElements(oldElement[compareKey], newElement[compareKey])\n            ) {\n              matches = false;\n              break;\n            }\n          }\n          if (matches) {\n            for (const transferKey of transferKeys)\n              newElement[transferKey] = oldElement[transferKey];\n          }\n        }\n      }\n    }\n  }\n\n  return newQueries;\n}\n\n// compare two elements as primitives (eg number === number or string ===\n// string) or as arrays if both are arrays\nexport function compareElements(element1, element2) {\n  if (Array.isArray(element1) && Array.isArray(element2))\n    return compareArrays(element1, element2, true);\n  else\n    return element1 === element2;\n}\n\n// checks if arrays of primitives (strings, numbers, etc) are equal.\n// if specified, also check if arrays are equal in reverse\nexport function compareArrays(array1, array2, checkReverse) {\n  if (array1.length !== array2.length)\n    return false;\n\n  if (!checkReverse) {\n    // check forwards\n    return array1.every((element, index) => element === array2[index]);\n  } else {\n    // check forwards and backwards\n    return (\n      array1.every((element, index) => element === array2[index]) ||\n      array1\n        .slice()\n        .reverse()\n        .every((element, index) => element === array2[index])\n    );\n  }\n}\n\n// truncate string to character limit, insert ellipsis  if necessary\nexport function cutString(string, n) {\n  if (string.length <= n)\n    return string;\n  else\n    return string.substring(0, n - 3) + '...';\n}\n\n// make deep copy of object. ensures everything is clone/copy, not reference.\n// works for everything except circular refs, functions, and js Dates\nexport function copyObject(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"style\", null, \"\\n    #back_line,\\n    #front_line,\\n    #circle_1,\\n    #circle_2,\\n    #circle_3,\\n    #circle_4 {\\n      animation-duration: 1.5s;\\n      animation-timing-function: ease;\\n      animation-fill-mode: forwards;\\n    }\\n    #back_line {\\n      animation-name: draw_back_line;\\n    }\\n    @keyframes draw_back_line {\\n      0% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 60;\\n      }\\n      60% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 60;\\n      }\\n      100% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 0;\\n      }\\n    }\\n    #front_line {\\n      animation-name: draw_front_line;\\n    }\\n    @keyframes draw_front_line {\\n      0% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 158;\\n      }\\n      60% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 0;\\n      }\\n      100% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 0;\\n      }\\n    }\\n    #circle_1 {\\n      animation-name: draw_circle_1;\\n    }\\n    #circle_2 {\\n      animation-name: draw_circle_2;\\n    }\\n    #circle_3 {\\n      animation-name: draw_circle_3;\\n    }\\n    #circle_4 {\\n      animation-name: draw_circle_4;\\n    }\\n    @keyframes draw_circle_1 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      20% {\\n        transform: scale(0);\\n      }\\n      40% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_2 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      30% {\\n        transform: scale(0);\\n      }\\n      50% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_3 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      40% {\\n        transform: scale(0);\\n      }\\n      60% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_4 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      50% {\\n        transform: scale(0);\\n      }\\n      70% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n  \");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"back_line\",\n  stroke: \"#bdbdbd\",\n  strokeWidth: 5,\n  fill: \"none\",\n  d: \"       M 20 50       L 80 50     \"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"front_line\",\n  stroke: \"#424242\",\n  strokeWidth: 7.5,\n  fill: \"none\",\n  d: \"       M 0 50       L 20 50       L 40 75       L 60 25       L 80 50       L 100 50     \"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(20,50)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_1\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#02b3e4\"\n}));\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(40,75)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_2\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#c341d8\"\n}));\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(60,25)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_3\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#fa750f\"\n}));\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(80,50)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_4\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#e91e63\"\n}));\n\nvar SvgLogoAnimated = function SvgLogoAnimated(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogoAnimated, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo-animated.94624129.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Component } from 'react';\n\nimport { ReactComponent as Logo } from './logo-animated.svg';\n\n// page header display component\nexport class Header extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.showLogo = false;\n\n    // wait a bit for page to load before starting logo animation\n    window.setTimeout(() => this.setState({ showLogo: true }), 1000);\n  }\n\n  // display component\n  render() {\n    let logo;\n\n    if (this.state.showLogo)\n      logo = <Logo className='logo' />;\n    else\n      logo = <svg className='logo' />;\n    return (\n      <header>\n        {logo}\n        <h1>HETMECH</h1>\n        <h2>\n          A project of the{' '}\n          <a href='http://www.greenelab.com/'>Greene Laboratory</a>\n        </h2>\n      </header>\n    );\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50     \"\n});\n\nvar SvgArrowIconBoth = function SvgArrowIconBoth(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconBoth, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-both.5f01d574.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50       M 70 35       L 90 50       L 70 65     \"\n});\n\nvar SvgArrowIconForward = function SvgArrowIconForward(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconForward, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-forward.43aa27a1.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50       M 30 35       L 10 50       L 30 65     \"\n});\n\nvar SvgArrowIconBackward = function SvgArrowIconBackward(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconBackward, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-backward.c6a85500.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746       L 78.2842755245486 50       L 50 50     \"\n});\n\nvar SvgChipGene = function SvgChipGene(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipGene, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-gene.6afa0a5b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipCompound = function SvgChipCompound(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipCompound, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-compound.90909a37.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  clipPath: \"url(#clip)\",\n  d: \"         M 10 110         L 50 0         L 90 110         M 30 70         L 70 70       \"\n}));\n\nvar SvgChipAnatomy = function SvgChipAnatomy(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipAnatomy, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-anatomy.b055d214.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 25 10       L 50 10       A 40 40 0 0 1 50 90       L 25 90       Z     \"\n});\n\nvar SvgChipDisease = function SvgChipDisease(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipDisease, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-disease.1a26261b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 80 18       C 70 14 62 10 50 10       C 42 10 22 14 22 30       C 22 46 38 48.4 50 50       C 62 51.6 78 54 78 70       C 78 86 59 90 50 90       C 38 90 30 86 20 82     \"\n});\n\nvar SvgChipSymptom = function SvgChipSymptom(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipSymptom, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-symptom.2689ac77.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-42,0)\",\n  d: \"       M 80 18       C 70 14 62 10 50 10       C 42 10 22 14 22 30       C 22 46 38 48.4 50 50       C 62 51.6 78 54 78 70       C 78 86 59 90 50 90       C 38 90 30 86 20 82     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(42,0)\",\n  d: \"       M 75 10       L 25 10       L 25 90       L 75 90       M 30 50       L 65 50     \"\n});\n\nvar SvgChipSideEffect = function SvgChipSideEffect(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipSideEffect, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-side-effect.dbe94434.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-44,0)\",\n  d: \"       M 25 10       L 60 10       A 20 20 0 0 1 60 50       A 20 20 0 0 1 60 90       L 25 90       Z       M 30 50       L 60 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(44,0)\",\n  d: \"       M 25 90       L 25 10       L 60 10       A 20 20 0 0 1 60 50       L 30 50     \"\n});\n\nvar SvgChipBiologicalProcess = function SvgChipBiologicalProcess(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipBiologicalProcess, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-biological-process.979f4ab8.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-43,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(48,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipCellularComponent = function SvgChipCellularComponent(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipCellularComponent, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-cellular-component.b874e365.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  strokeLinejoin: \"bevel\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-40,0)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 10 90       L 10 -10       L 50 65       L 90 -10       L 90 90     \"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(60,0)\",\n  d: \"       M 75 10       L 25 10       L 25 90       M 30 50       L 65 50     \"\n});\n\nvar SvgChipMolecularFunction = function SvgChipMolecularFunction(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipMolecularFunction, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-molecular-function.787806a8.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-52,0)\",\n  d: \"     M 25 90     L 25 10     L 60 10     A 20 20 0 0 1 60 50     L 30 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  strokeLinejoin: \"bevel\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(45,0)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 10 -10       L 25 100       L 50 35       L 75 100       L 90 -10     \"\n});\n\nvar SvgChipPathway = function SvgChipPathway(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipPathway, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-pathway.543f179a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-50,0)\",\n  d: \"       M 25 90       L 25 10       L 60 10       A 20 20 0 0 1 60 50       L 30 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(48,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipPharmacologicClass = function SvgChipPharmacologicClass(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipPharmacologicClass, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-pharmacologic-class.b1fbdc49.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './chips.css';\n\nimport { ReactComponent as ArrowBoth } from './arrow-icon-both.svg';\nimport { ReactComponent as ArrowForward } from './arrow-icon-forward.svg';\nimport { ReactComponent as ArrowBackward } from './arrow-icon-backward.svg';\n\nimport { ReactComponent as Gene } from './chip-gene.svg';\nimport { ReactComponent as Compound } from './chip-compound.svg';\nimport { ReactComponent as Anatomy } from './chip-anatomy.svg';\nimport { ReactComponent as Disease } from './chip-disease.svg';\nimport { ReactComponent as Symptom } from './chip-symptom.svg';\nimport { ReactComponent as SideEffect } from './chip-side-effect.svg';\nimport { ReactComponent as BiologicalProcess } from './chip-biological-process.svg';\nimport { ReactComponent as CellularComponent } from './chip-cellular-component.svg';\nimport { ReactComponent as MolecularFunction } from './chip-molecular-function.svg';\nimport { ReactComponent as Pathway } from './chip-pathway.svg';\nimport { ReactComponent as PharmacologicClass } from './chip-pharmacologic-class.svg';\n\n// metanode 'chip' component\n// colored circle with abbreviation text in middle\n// eg (G) for 'gene'\nexport class MetanodeChip extends Component {\n  // display component\n  render() {\n    // get icon\n    let icon;\n    switch (this.props.type) {\n      case 'Gene':\n        icon = <Gene />;\n        break;\n      case 'Compound':\n        icon = <Compound />;\n        break;\n      case 'Anatomy':\n        icon = <Anatomy />;\n        break;\n      case 'Disease':\n        icon = <Disease />;\n        break;\n      case 'Symptom':\n        icon = <Symptom />;\n        break;\n      case 'Side Effect':\n        icon = <SideEffect />;\n        break;\n      case 'Biological Process':\n        icon = <BiologicalProcess />;\n        break;\n      case 'Cellular Component':\n        icon = <CellularComponent />;\n        break;\n      case 'Molecular Function':\n        icon = <MolecularFunction />;\n        break;\n      case 'Pathway':\n        icon = <Pathway />;\n        break;\n      case 'Pharmacologic Class':\n        icon = <PharmacologicClass />;\n        break;\n      default:\n        break;\n    }\n\n    let fillColor = '#424242';\n    let textColor = '#fafafa';\n    const style = this.props.hetioStyles[this.props.type];\n    if (style && style.fill_color)\n      fillColor = style.fill_color;\n    if (style && style.text_color)\n      textColor = style.text_color;\n\n    return (\n      <div className='metanode_chip' style={{ color: textColor }}>\n        <svg viewBox='0 0 100 100'>\n          <circle cx='50' cy='50' r='49' fill={fillColor} />\n        </svg>\n        {icon}\n      </div>\n    );\n  }\n}\n// connect component to global state\nMetanodeChip = connect((state) => ({\n  hetioStyles: state.hetioStyles\n}))(MetanodeChip);\n\n// metaedge 'chip' component\n// svg arrow with abbreviation text above\nexport class MetaedgeChip extends Component {\n  // display component\n  render() {\n    // get edge direction icon\n    let icon;\n    switch (this.props.direction) {\n      case 'backward':\n        icon = <ArrowBackward />;\n        break;\n      case 'forward':\n        icon = <ArrowForward />;\n        break;\n      default:\n        icon = <ArrowBoth />;\n        break;\n    }\n\n    let abbreviation = '';\n    if (this.props.metagraph.kind_to_abbrev)\n      abbreviation = this.props.metagraph.kind_to_abbrev[this.props.type];\n\n    return (\n      <div\n        className='metaedge_chip'\n        data-name={this.props.type}\n        data-abbreviation={abbreviation}\n      >\n        {icon}\n      </div>\n    );\n  }\n}\n// connect component to global state\nMetaedgeChip = connect((state) => ({\n  metagraph: state.metagraph\n}))(MetaedgeChip);\n\n// get html of metapath in form of visualization chips\nexport function metapathChips(edges) {\n  const path = edges.map((entry, index) => {\n    return (\n      <React.Fragment key={index}>\n        <MetanodeChip type={entry[0]} />\n        <MetaedgeChip type={entry[2]} direction={entry[3]} />\n        {index === edges.length - 1 && <MetanodeChip type={entry[1]} />}\n      </React.Fragment>\n    );\n  });\n\n  return path;\n}\n\n// get html of path in form of visualization chips\nexport function pathChips(path, expanded) {\n  return path.map((entry, index) => {\n    if (entry.element === 'node') {\n      return (\n        <NodeChip\n          key={index}\n          type={entry.type}\n          name={entry.name}\n          expanded={expanded}\n        />\n      );\n    }\n    if (entry.element === 'edge') {\n      return (\n        <MetaedgeChip\n          key={index}\n          type={entry.type}\n          direction={entry.direction}\n        />\n      );\n    }\n    return '';\n  });\n}\n\n// node 'chip' component\nexport class NodeChip extends Component {\n  // display component\n  render() {\n    let fillColor = '#424242';\n    let textColor = '#fafafa';\n    const style = this.props.hetioStyles[this.props.type];\n    if (style && style.fill_color)\n      fillColor = style.fill_color;\n    if (style && style.text_color)\n      textColor = style.text_color;\n\n    return (\n      <span\n        className='node_chip'\n        style={{ background: fillColor, color: textColor }}\n        data-expanded={this.props.expanded}\n      >\n        {this.props.name}\n      </span>\n    );\n  }\n}\n// connect component to global state\nNodeChip = connect((state) => ({\n  hetioStyles: state.hetioStyles\n}))(NodeChip);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Component } from 'react';\nimport Fade from '@material-ui/core/Fade';\n\nimport './tooltip.css';\n\n// open delay in ms\nconst delay = 1000;\n\n// tooltip (helper text) popup component\nexport class Tooltip extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.open = false;\n    this.state.x = 0;\n    this.state.y = 0;\n    this.state.opacity = 0;\n\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.openTooltip = this.openTooltip.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n  }\n\n  // when mouse enters target\n  onMouseEnter(event) {\n    const target = event.target;\n    // delay opening tooltip\n    window.setTimeout(() => this.openTooltip(target), delay);\n    // track hover state\n    this.setState({ hover: true });\n  }\n\n  // open tooltip\n  openTooltip(target) {\n    // if target not being hovered anymore, cancel open\n    // if target not specified, exit\n    if (!this.state.hover || !target) {\n      this.setState({ open: false });\n      return;\n    }\n\n    // get x/y position of target to pass to tooltip popup\n    const left =\n      target.getBoundingClientRect().left + document.documentElement.scrollLeft;\n    const top =\n      target.getBoundingClientRect().top + document.documentElement.scrollTop;\n\n    // avoid scrunching tooltip too skinny when close to right side of view\n    const x = Math.min(left, document.body.clientWidth - 200);\n    const y = top;\n\n    // open tooltip and update x/y position\n    this.setState({ open: true, x: x, y: y });\n  }\n\n  // when mouse leaves target\n  onMouseLeave() {\n    this.setState({ hover: false, open: false });\n  }\n\n  // display component\n  render() {\n    // if no specified text, skip attaching events and render\n    if (!this.props.text)\n      return <>{this.props.children}</>;\n\n    // mouse handler props to attach to children\n    const props = {\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave\n    };\n\n    // attach handler props to children\n    const children = React.Children.map(this.props.children, (element) => {\n      // if element is react element, create clone with attached props\n      if (React.isValidElement(element))\n        return React.cloneElement(element, props);\n      // if element is text node, wrap in span and attach props\n      else if (typeof element === 'string')\n        return <span {...props}>{element}</span>;\n      // otherwise, pass element through untouched\n      else\n        return element;\n    });\n\n    return (\n      <>\n        {children}\n        {this.state.open && (\n          <Popup\n            text={this.props.text}\n            open={this.state.open}\n            x={this.state.x}\n            y={this.state.y}\n          />\n        )}\n      </>\n    );\n  }\n}\n\n// popup component to display tooltip and text\n// make React 'portal' to append tooltip to body instead of parent\n// (allows tooltip to pop out of containing elements like tables)\nclass Popup extends Component {\n  render() {\n    return ReactDOM.createPortal(\n      <Fade in={this.props.open}>\n        <div\n          className='tooltip'\n          style={{\n            left: this.props.x + 'px',\n            top: this.props.y + 'px'\n          }}\n        >\n          {this.props.text}\n        </div>\n      </Fade>,\n      document.body\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faHighlighter } from '@fortawesome/free-solid-svg-icons';\n\nimport { Tooltip } from './tooltip.js';\nimport './buttons.css';\n\n// button component\nexport class Button extends Component {\n  // display component\n  render() {\n    return (\n      <Tooltip text={this.props.tooltipText}>\n        <button\n          className={this.props.className}\n          onClick={(event) => {\n            if (event.ctrlKey) {\n              if (this.props.onCtrlClick)\n                this.props.onCtrlClick();\n            } else if (event.shiftKey) {\n              if (this.props.onShiftClick)\n                this.props.onShiftClick();\n            } else if (this.props.onClick)\n              this.props.onClick();\n          }}\n        >\n          {this.props.children}\n        </button>\n      </Tooltip>\n    );\n  }\n}\n\n// text button component\n// link colored button with text and icon to right\nexport class TextButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className={this.props.className + ' text_button small'}\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.text && <span>{this.props.text}</span>}\n        <FontAwesomeIcon icon={this.props.icon} className='text_button_icon' />\n      </Button>\n    );\n  }\n}\n\n// checkbox button component\nexport class Checkbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faCheck} />\n        )}\n      </Button>\n    );\n  }\n}\n\n// eye checkbox button component\nexport class EyeCheckbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faEye} />\n        )}\n      </Button>\n    );\n  }\n}\n\n// highlighter checkbox button component\nexport class HighlighterCheckbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faHighlighter} />\n        )}\n      </Button>\n    );\n  }\n}\n","// url for hetmech specific definitions (path count, p value, dwpc, etc)\nimport hetmechDefinitions from './definitions.json';\n// url for metagraph (node and edge metatypes and abbreviations)\nconst metagraphUrl =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/hetnet/json/hetionet-v1.0-metagraph.json';\n// url for hetio definitions (metanodes, properties, etc)\nconst hetioDefinitions =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/describe/definitions.json';\n// url for hetio styles (metanode fill/text color, etc)\nconst hetioStyles =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/describe/styles.json';\n// url for node search\nconst nodeSearchServer = 'https://search-api.het.io/v1/nodes/';\n// url for random node pair\nconst randomNodeServer = 'https://search-api.het.io/v1/random-node-pair/';\n// url for metapaths search\nconst metapathSearchServer = 'https://search-api.het.io/v1/query-metapaths/';\n// url for paths search\nconst pathSearchServer = 'https://search-api.het.io/v1/query-paths/';\n\n// get resource at url and parse as json\nexport function fetchJson(url) {\n  return fetch(url)\n    .then((response) => response.json())\n    .then((results) => {\n      return results || {};\n    })\n    .catch((error) => {\n      console.log(error, url);\n      return {};\n    });\n}\n\n// get metagraph\nexport function getMetagraph() {\n  return fetchJson(metagraphUrl);\n}\n\n// get hetio definitions\nexport function getHetioDefinitions() {\n  return fetchJson(hetioDefinitions);\n}\n\n// get hetio styles\nexport function getHetioStyles() {\n  return fetchJson(hetioStyles);\n}\n\n// get hetmech definitions\nexport function getHetmechDefinitions() {\n  return hetmechDefinitions;\n}\n\n// lookup node by id\nexport function lookupNodeById(id) {\n  if (!id)\n    return null;\n  const query = nodeSearchServer + id;\n  return fetchJson(query);\n}\n\n// search for nodes by string, and with metatype filter list\n// accepts comma-separated list of abbreviations of metatypes to include\nexport function searchNodes(searchString, metatypes) {\n  const params = new URLSearchParams();\n  params.set('search', searchString);\n  params.set('limit', '100');\n  if (metatypes)\n    params.set('metanodes', metatypes);\n  const query = nodeSearchServer + '?' + params.toString();\n  return fetchJson(query).then((response) => {\n    return response.results;\n  });\n}\n\n// get random source/target node pair that has metapath(s)\nexport function getRandomNodePair() {\n  const query = randomNodeServer;\n  return fetchJson(query).then((response) => {\n    return response;\n  });\n}\n\n// search for metapaths by source/target id\nexport function searchMetapaths(sourceId, targetId) {\n  const params = new URLSearchParams();\n  params.set('source', sourceId);\n  params.set('target', targetId);\n  const query = metapathSearchServer + '?' + params.toString();\n  return fetchJson(query).then((response) => {\n    return response.path_counts;\n  });\n}\n\n// search for paths by metapaths\nexport function searchPaths(sourceId, targetId, metapath) {\n  const params = new URLSearchParams();\n  params.set('source', sourceId);\n  params.set('target', targetId);\n  params.set('metapath', metapath);\n  const query = pathSearchServer + '?' + params.toString();\n  return fetchJson(query).then((response) => {\n    return response;\n  });\n}\n","// actions to update global state variables\n\n// set definitions\nexport function setDefinitions({\n  metagraph,\n  hetioDefinitions,\n  hetioStyles,\n  hetmechDefinitions\n}) {\n  return {\n    type: 'set_definitions',\n    payload: {\n      metagraph: metagraph,\n      hetioDefinitions: hetioDefinitions,\n      hetioStyles: hetioStyles,\n      hetmechDefinitions: hetmechDefinitions\n    }\n  };\n}\n\n// update source and/or target node\nexport function updateSourceTargetNodes({\n  sourceNode,\n  targetNode,\n  dontUpdateUrl\n}) {\n  return {\n    type: 'update_source_target_nodes',\n    payload: { sourceNode: sourceNode, targetNode: targetNode },\n    updateUrl: !dontUpdateUrl\n  };\n}\n\n// swap source/target node\nexport function swapSourceTargetNodes() {\n  return {\n    type: 'swap_source_target_nodes',\n    updateUrl: false\n  };\n}\n\n// update metapaths\nexport function updateMetapaths({\n  metapaths,\n  dontUpdateUrl,\n  preserveChecks\n}) {\n  return {\n    type: 'update_metapaths',\n    payload: { metapaths: metapaths },\n    updateUrl: !dontUpdateUrl,\n    preserveChecks: preserveChecks\n  };\n}\n\n// update path queries\nexport function updatePathQueries({ pathQueries, preserveChecks }) {\n  return {\n    type: 'update_path_queries',\n    payload: { pathQueries: pathQueries },\n    preserveChecks: preserveChecks\n  };\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Downshift from 'downshift';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faDice } from '@fortawesome/free-solid-svg-icons';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport { MetanodeChip } from './chips.js';\nimport { Tooltip } from './tooltip.js';\nimport { Button } from './buttons.js';\nimport { searchNodes } from './backend-query.js';\nimport { lookupNodeById } from './backend-query.js';\nimport { getRandomNodePair } from './backend-query.js';\nimport { updateSourceTargetNodes } from './actions.js';\nimport { swapSourceTargetNodes } from './actions.js';\nimport { sortCustom } from './util.js';\nimport { copyObject } from './util.js';\nimport './node-search.css';\n\n// node search section component\n// target and source node search boxes and swap button\nexport class NodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.filters = [];\n    this.state.filterString = '';\n\n    this.updateFilters = this.updateFilters.bind(this);\n  }\n\n  // get filter state from filter child component\n  updateFilters(filters, filterString) {\n    this.setState({ filters: filters, filterString: filterString });\n  }\n\n  // display component\n  render() {\n    return (\n      <section className='center'>\n        <NodeSearchContext.Provider\n          value={{\n            filterString: this.state.filterString\n          }}\n        >\n          <Filters\n            filters={this.state.filters}\n            filterString={this.state.filterString}\n            updateFilters={this.updateFilters}\n          />\n          <SourceNodeSearch />\n          <SwapButton />\n          <RandomButton />\n          <TargetNodeSearch />\n        </NodeSearchContext.Provider>\n      </section>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst NodeSearchContext = React.createContext({});\n\n// filter filter component\n// toggle buttons to specify which types of nodes to limit search to\nclass Filters extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.solo = this.solo.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.metagraph.metanode_kinds === this.props.metagraph.metanode_kinds\n    )\n      return;\n\n    // initialize filters\n    let filters = [];\n    const filterString = '';\n\n    for (const filter of this.props.metagraph.metanode_kinds)\n      filters.push({ name: filter, active: true });\n\n    // display filters in custom order\n    const order = [\n      'Gene',\n      'Compound',\n      'Anatomy',\n      'Disease',\n      'Symptom',\n      'Side Effect',\n      'Biological Process',\n      'Cellular Component',\n      'Molecular Function',\n      'Pathway',\n      'Pharmacolocic Class'\n    ];\n    filters = sortCustom(filters, order, 'name');\n\n    this.props.updateFilters(filters, filterString);\n  }\n\n  // checks whether all filters are active\n  allOn(filters) {\n    for (const filter of filters) {\n      if (!filter.active)\n        return false;\n    }\n\n    return true;\n  }\n\n  // checks whether all filters besides the specified filter are off\n  allOthersOff(filters, type) {\n    for (const filter of filters) {\n      if (type !== filter.name && filter.active)\n        return false;\n    }\n\n    return true;\n  }\n\n  // toggles the specified filters on/off\n  toggle(type) {\n    const newFilters = copyObject(this.props.filters);\n\n    for (const filter of newFilters) {\n      if (filter.name === type)\n        filter.active = !filter.active;\n    }\n\n    this.props.updateFilters(newFilters, this.toString(newFilters));\n  }\n\n  // solo filter (turn all others off)\n  solo(type) {\n    const newFilters = copyObject(this.props.filters);\n    const allOthersOff = this.allOthersOff(newFilters, type);\n\n    for (const filter of newFilters) {\n      if (allOthersOff)\n        filter.active = true;\n      else {\n        if (type === filter.name)\n          filter.active = true;\n        else\n          filter.active = false;\n      }\n    }\n\n    this.props.updateFilters(newFilters, this.toString(newFilters));\n  }\n\n  // turn state of filters into string query list of metanode metagraph\n  toString(filters) {\n    if (this.allOn(filters))\n      return '';\n\n    const list = [];\n    for (const filter of filters) {\n      if (filter.active)\n        list.push(this.props.metagraph.kind_to_abbrev[filter.name]);\n    }\n\n    return list.join(',');\n  }\n\n  // display component\n  render() {\n    // make list of filter buttons\n    const buttons = this.props.filters.map((filter, index) => (\n      <FilterButton\n        key={index}\n        name={filter.name}\n        tooltipText={this.props.hetioDefinitions.metanodes[filter.name]}\n        active={filter.active}\n        toggle={this.toggle}\n        solo={this.solo}\n      />\n    ));\n\n    return <>{buttons}</>;\n  }\n}\n// connect component to global state\nFilters = connect((state) => ({\n  metagraph: state.metagraph,\n  hetioDefinitions: state.hetioDefinitions\n}))(Filters);\n\n// filter button component\nclass FilterButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className={\n          'node_search_filter_button' +\n          (this.props.active ? '' : ' node_search_filter_button_off')\n        }\n        tooltipText={this.props.tooltipText}\n        onClick={() => this.props.toggle(this.props.name)}\n        onCtrlClick={() => this.props.solo(this.props.name)}\n      >\n        <MetanodeChip type={this.props.name} />\n        {this.props.name}\n      </Button>\n    );\n  }\n}\n\n// source node search box component\nclass SourceNodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  // when user makes a new node selection\n  onChange(value) {\n    this.props.dispatch(updateSourceTargetNodes({ sourceNode: value }));\n  }\n\n  // display component\n  render() {\n    return (\n      <SearchBox\n        label='Source Node'\n        tooltipText='The starting node of the paths'\n        value={this.props.node}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n// connect component to global state\nSourceNodeSearch = connect((state) => ({\n  node: state.sourceNode\n}))(SourceNodeSearch);\n\n// source node search box component\nclass TargetNodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  // when user makes a new node selection\n  onChange(value) {\n    this.props.dispatch(updateSourceTargetNodes({ targetNode: value }));\n    if (value)\n      document.activeElement.blur();\n  }\n\n  // display component\n  render() {\n    return (\n      <SearchBox\n        label='Target Node'\n        tooltipText='The ending node of the paths'\n        value={this.props.node}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n// connect component to global state\nTargetNodeSearch = connect((state) => ({\n  node: state.targetNode\n}))(TargetNodeSearch);\n\n// search box component with dropdown autocomplete/autosuggest\nclass SearchBox extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.searchResults = [];\n\n    this.inputRef = React.createRef();\n    this.formRef = React.createRef();\n\n    this.onInput = this.onInput.bind(this);\n  }\n\n  // when user types into or modifies text in text box\n  onInput(searchString) {\n    searchNodes(searchString, this.context.filterString).then((results) =>\n      this.setState({ searchResults: results || [] })\n    );\n  }\n\n  // convert result/selection item to string to display in text box\n  itemToString(item) {\n    if (item && item.name)\n      return item.name;\n    else\n      return '';\n  }\n\n  // display component\n  render() {\n    return (\n      <Downshift\n        onChange={this.props.onChange}\n        onInputValueChange={this.onInput}\n        itemToString={this.itemToString}\n        selectedItem={this.props.value}\n      >\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          isOpen,\n          selectedItem,\n          highlightedIndex,\n          clearSelection\n        }) => (\n          <div className='node_search_form' ref={this.formRef}>\n            <span className='small light node_search_form_label'>\n              <Tooltip text={this.props.tooltipText}>\n                {this.props.label}\n              </Tooltip>\n            </span>\n            <TextBox\n              inputRef={this.inputRef}\n              getInputProps={getInputProps}\n              clearSelection={clearSelection}\n              selectedItem={selectedItem}\n            />\n            <Dropdown\n              isOpen={isOpen}\n              inputRef={this.inputRef}\n              formRef={this.formRef}\n              getMenuProps={getMenuProps}\n              searchResults={this.state.searchResults}\n              selectedItem={selectedItem}\n              highlightedIndex={highlightedIndex}\n              getItemProps={getItemProps}\n            />\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n// connect component to context component\nSearchBox.contextType = NodeSearchContext;\n\n// text box sub-component of search box component\nclass TextBox extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.focused = false;\n\n    this.onInput = this.onInput.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  // when user types into text box\n  onInput(event) {\n    if (event.target.value === '')\n      this.props.clearSelection();\n  }\n\n  // when user focuses text box\n  onFocus() {\n    this.setState({ focused: true });\n  }\n\n  // when user unfocuses text box\n  onBlur() {\n    this.setState({ focused: false });\n  }\n\n  // display component\n  render() {\n    let overlay = <></>;\n\n    const showOverlay =\n      !this.state.focused &&\n      this.props.selectedItem.metanode &&\n      this.props.selectedItem.name;\n\n    if (showOverlay) {\n      overlay = (\n        <div className='node_search_field_overlay'>\n          <MetanodeChip type={this.props.selectedItem.metanode} />\n          <span className='node_search_results_item_name nowrap'>\n            {this.props.selectedItem.name}\n          </span>\n        </div>\n      );\n    }\n    return (\n      <>\n        <TextField\n          {...this.props.getInputProps({\n            onChange: this.onInput\n          })}\n          inputRef={this.props.inputRef}\n          placeholder='id, name, or metanode'\n          classes={{ root: 'node_search_field_container' }}\n          InputProps={{\n            classes: {\n              root: 'node_search_field',\n              focused: 'node_search_field_focused',\n              input: showOverlay\n                ? 'node_search_input_blank'\n                : 'node_search_input'\n            }\n          }}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n        />\n        {overlay}\n        <div className='node_search_icon'>\n          <FontAwesomeIcon icon={faSearch} />\n        </div>\n      </>\n    );\n  }\n}\n\n// dropdown sub-component of search box component\nclass Dropdown extends Component {\n  // display component\n  render() {\n    return (\n      <Popper\n        open={this.props.isOpen}\n        anchorEl={this.props.inputRef.current}\n        placement='bottom-start'\n        className='node_search_results_popper'\n        container={this.props.formRef.current}\n        disablePortal={true}\n        {...this.props.getMenuProps()}\n      >\n        <Paper className='node_search_results_paper'>\n          {this.props.searchResults.map((result, index) => (\n            <MenuItem\n              className={\n                'node_search_results_item' +\n                (this.props.selectedItem.id === result.id\n                  ? ' node_search_results_item_selected'\n                  : '') +\n                (this.props.highlightedIndex === index\n                  ? ' node_search_results_item_selected'\n                  : '')\n              }\n              {...this.props.getItemProps({\n                item: result,\n                key: index\n              })}\n            >\n              <MetanodeChip type={result.metanode} />\n              <span className='node_search_results_item_name'>\n                {result.name}\n              </span>\n              <span className='node_search_results_item_identifier'>\n                {result.identifier}\n              </span>\n            </MenuItem>\n          ))}\n        </Paper>\n      </Popper>\n    );\n  }\n}\n\n// swap button component\n// switches source/target node\nclass SwapButton extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  // when user clicks button\n  onClick() {\n    this.props.dispatch(swapSourceTargetNodes());\n  }\n\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText='Swap source and target node'\n        className='node_search_swap_button'\n        onClick={this.onClick}\n      >\n        <FontAwesomeIcon icon={faExchangeAlt} />\n      </Button>\n    );\n  }\n}\n// connect component to global state\nSwapButton = connect()(SwapButton);\n\n// random button component\n// picks random source/target node with metapaths\nclass RandomButton extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  // when user clicks button\n  onClick() {\n    getRandomNodePair()\n      .then((results) => {\n        return Promise.all([\n          lookupNodeById(results.source_id),\n          lookupNodeById(results.target_id)\n        ]);\n      })\n      .then(([newSourceNode, newTargetNode]) =>\n        this.props.dispatch(\n          updateSourceTargetNodes({\n            sourceNode: newSourceNode,\n            targetNode: newTargetNode\n          })\n        )\n      );\n  }\n\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText='Get random source/target node pair that has at least one metapath result'\n        className='node_search_swap_button'\n        onClick={this.onClick}\n      >\n        <FontAwesomeIcon icon={faDice} />\n      </Button>\n    );\n  }\n}\n// connect component to global state\nRandomButton = connect()(RandomButton);\n","import React from 'react';\nimport { Component } from 'react';\n\nimport './dynamic-field.css';\n\n// expandable textbox-like component, similar to excel spreadsheet cell\n// when focused, field expands and prop 'fullValue' displayed,\n// otherwise, prop 'value' displayed (often 'fullValue' rounded off)\nexport class DynamicField extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.focused = false;\n    this.field = React.createRef();\n\n    this.onClick = this.onClick.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n  }\n\n  // when field is clicked or touched\n  onClick(event) {\n    // force click on link in field if link was target of click\n    if (event && event.target && event.target.tagName.toLowerCase() === 'a')\n      event.target.click();\n    // force focus on field\n    this.field.current.focus();\n  }\n\n  // when field loses focus\n  onBlur() {\n    this.setState({ focused: false }, this.deselectAll);\n  }\n\n  // when field is focused (tabbed to, clicked, etc)\n  onFocus() {\n    this.setState({ focused: true }, this.selectAll);\n  }\n\n  // deselect any selected text in window\n  deselectAll() {\n    window.getSelection().empty();\n  }\n\n  // select contents of field\n  selectAll() {\n    // set delay for select to make sure component has rendered\n    window.setTimeout(function() {\n      window.getSelection().empty();\n      window.getSelection().selectAllChildren(document.activeElement);\n    }, 10);\n  }\n\n  // display component\n  render() {\n    let displayValue;\n\n    // show full value if focused, or short value if not\n    if (this.state.focused)\n      displayValue = this.props.fullValue || this.props.value;\n    else\n      displayValue = this.props.value;\n\n    // if value just text, set 'nowrap' to truncate with ellipsis\n    if (typeof displayValue === 'string')\n      displayValue = <span className='nowrap'>{displayValue}</span>;\n\n    return (\n      <div\n        ref={this.field}\n        tabIndex='0'\n        onClick={this.onClick}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        className={'dynamic_field ' + (this.props.className || '')}\n        data-expanded={this.state.focused}\n      >\n        {displayValue}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { Button } from './buttons.js';\nimport './collapsible-section.css';\n\n// accordion (collapse/expand) section component\nexport class CollapsibleSection extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.collapsed = false;\n\n    this.loadState = this.loadState.bind(this);\n    this.saveState = this.saveState.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  // when component mounts\n  componentDidMount() {\n    if (this.loadState())\n      this.setState({ collapsed: true });\n  }\n\n  // load collapsed state from local storage if exists\n  loadState() {\n    const key = this.props.label;\n    return key && window.localStorage.getItem(key) === 'true';\n  }\n\n  // save collapse state to local storage\n  saveState(collapsed) {\n    const key = this.props.label;\n    if (key)\n      window.localStorage.setItem(key, String(String(collapsed) === 'true'));\n  }\n\n  // toggle collapse/expand\n  toggle() {\n    this.setState({ collapsed: !this.state.collapsed });\n    this.saveState(!this.state.collapsed);\n  }\n\n  // display component\n  render() {\n    return (\n      <div\n        className='collapsible_section'\n        data-collapsed={this.state.collapsed}\n      >\n        <Button\n          tooltipText={this.props.tooltipText}\n          className='collapsible_section_header'\n          onClick={this.toggle}\n        >\n          <div>{this.props.label}</div>\n          <FontAwesomeIcon\n            icon={this.state.collapsed ? faAngleUp : faAngleDown}\n          />\n        </Button>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { MetanodeChip } from './chips.js';\nimport { Tooltip } from './tooltip.js';\nimport { TextButton } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { shortenUrl } from './util.js';\nimport { sortCustom } from './util.js';\n\n// node results section component\n// details about source/target nodes\nexport class NodeResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <NodeCard label='Source Node' node={this.props.sourceNode} />\n        <NodeCard label='Target Node' node={this.props.targetNode} />\n      </section>\n    );\n  }\n}\n// connect component to global state\nNodeResults = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode\n}))(NodeResults);\n\n// node 'card' component\n// displays details about source/target node\nclass NodeCard extends Component {\n  // display component\n  render() {\n    return (\n      <CollapsibleSection\n        label={this.props.label}\n        tooltipText={'Details about the ' + this.props.label.toLowerCase()}\n      >\n        {this.props.node.name ? (\n          <TableFull node={this.props.node} />\n        ) : (\n          <TableEmpty label={this.props.label} />\n        )}\n      </CollapsibleSection>\n    );\n  }\n}\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.showMore = false;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n  }\n\n  // toggle show/hide extra fields\n  toggleShowMore() {\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // display row entries\n  rows() {\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.nodes\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n    // get primary fields from top level of node\n    let primaryFields = ['name', 'metanode', 'source', 'identifier', 'id'];\n    // get first/second column text (key/value) for each field\n    primaryFields = primaryFields.map((field) => {\n      // handle special field cases\n      let specialSecondCol;\n      if (field === 'metanode') {\n        // make text with metanode chip\n        specialSecondCol = (\n          <>\n            <MetanodeChip type={this.props.node[field]} />\n            <span className='nowrap'>{this.props.node[field]}</span>\n          </>\n        );\n      } else if (field === 'source') {\n        // make link\n        const linkUrl = this.props.node.url || this.props.node.properties.url || '';\n        let linkText = this.props.node.properties.source || linkUrl;\n        linkText = shortenUrl(linkText);\n        specialSecondCol = (\n          <a className='nowrap' href={linkUrl}>\n            {linkText}\n          </a>\n        );\n      }\n      // get first/second column text (key/value) for each field\n      return {\n        firstCol: field,\n        secondCol: specialSecondCol || String(this.props.node[field]),\n        tooltipText: tooltipText[field]\n      };\n    });\n    // remove id and identifier if table not expanded\n    if (!this.state.showMore) {\n      primaryFields.splice(\n        primaryFields.findIndex((field) => field.firstCol === 'id'),\n        1\n      );\n      primaryFields.splice(\n        primaryFields.findIndex((field) => field.firstCol === 'identifier'),\n        1\n      );\n    }\n\n    // get 'extra fields' from node 'properties' field\n    let extraFields = [];\n    if (this.state.showMore) {\n      extraFields = Object.keys(this.props.node.properties);\n      // remove source and url, since they are combined and added to\n      // primary fields above\n      extraFields.splice(extraFields.indexOf('source'), 1);\n      extraFields.splice(extraFields.indexOf('url'), 1);\n      // get first/second column text (key/value) for each field\n      extraFields = extraFields.map((field) => ({\n        firstCol: field,\n        secondCol: String(this.props.node.properties[field]),\n        tooltipText: tooltipText[field]\n      }));\n    }\n\n    // combine primary and extra fields\n    let fields = primaryFields.concat(extraFields);\n\n    // display fields in custom order\n    const order = [\n      'name',\n      'metanode',\n      'source',\n      'description',\n      'identifier',\n      'id'\n    ];\n    fields = sortCustom(fields, order, 'firstCol');\n\n    // make rows from fields\n    return fields.map((field, index) => {\n      return (\n        <tr key={index}>\n          <td className='col_s small light'>\n            <Tooltip text={field.tooltipText}>{field.firstCol}</Tooltip>\n          </td>\n          <td>\n            <DynamicField value={field.secondCol} className='left' />\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  // display component\n  render() {\n    return (\n      <table className='node_results_table'>\n        <tbody>\n          {this.rows()}\n          <tr>\n            <td className='center' colSpan='2'>\n              <TextButton\n                text={this.state.showMore ? 'show less ' : 'show more '}\n                icon={this.state.showMore ? faAngleUp : faAngleDown}\n                className='link_button small'\n                onClick={this.toggleShowMore}\n                tooltipText='Show more information about the node'\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n// connect component to global state\nTableFull = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableFull);\n\n// table with no results component\nclass TableEmpty extends Component {\n  render() {\n    return (\n      <table className='node_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>\n              select a {this.props.label.toLowerCase()}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { metapathChips } from './chips.js';\nimport { Button } from './buttons.js';\nimport { TextButton } from './buttons.js';\nimport { Checkbox } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { makeFilenameFriendly } from './util.js';\nimport { downloadCsv } from './util.js';\nimport { toFixed } from './util.js';\nimport { toExponential } from './util.js';\nimport { toGradient } from './util.js';\nimport { sortCustom } from './util.js';\nimport { copyObject } from './util.js';\nimport { updateMetapaths } from './actions.js';\nimport './metapath-results.css';\n\n// path results section component\nexport class MetapathResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <CollapsibleSection\n          label='Metapaths'\n          tooltipText='Metapaths of length <= 3 between the source and target node'\n        >\n          {this.props.metapaths.length > 0 ? <TableFull /> : <TableEmpty />}\n        </CollapsibleSection>\n      </section>\n    );\n  }\n}\n// connect component to global state\nMetapathResults = connect((state) => ({\n  metapaths: state.metapaths\n}))(MetapathResults);\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.showMore = false;\n    this.state.allChecked = false;\n    this.state.sortColumn = 'adjusted_p_value';\n    this.state.sortUp = false;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n    this.toggleAllChecked = this.toggleAllChecked.bind(this);\n    this.allChecked = this.allChecked.bind(this);\n    this.checkAll = this.checkAll.bind(this);\n    this.uncheckAll = this.uncheckAll.bind(this);\n    this.allOthersUnchecked = this.allOthersUnchecked.bind(this);\n    this.toggleChecked = this.toggleChecked.bind(this);\n    this.soloChecked = this.soloChecked.bind(this);\n    this.changeSort = this.changeSort.bind(this);\n    this.downloadCsv = this.downloadCsv.bind(this);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (this.props.metapaths !== prevProps.metapaths)\n      this.updateAllChecked();\n  }\n\n  // checks if all rows checked and updates state\n  updateAllChecked() {\n    if (this.allChecked())\n      this.setState({ allChecked: true });\n    else\n      this.setState({ allChecked: false });\n  }\n\n  // toggle show more/less\n  toggleShowMore(event) {\n    if (event)\n      event.preventDefault();\n\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // toggle check/uncheck all\n  toggleAllChecked() {\n    if (this.allChecked())\n      this.uncheckAll();\n    else\n      this.checkAll();\n  }\n\n  // checks whether all metapaths are checked\n  allChecked() {\n    for (const metapath of this.props.metapaths) {\n      if (!metapath.checked)\n        return false;\n    }\n\n    return true;\n  }\n\n  // makes all metapaths checked\n  checkAll() {\n    const newMetapaths = copyObject(this.props.metapaths);\n\n    for (const metapath of newMetapaths)\n      metapath.checked = true;\n\n    this.props.dispatch(updateMetapaths({ metapaths: newMetapaths }));\n  }\n\n  // makes all metapaths unchecked\n  uncheckAll() {\n    const newMetapaths = copyObject(this.props.metapaths);\n\n    for (const metapath of newMetapaths)\n      metapath.checked = false;\n\n    this.props.dispatch(updateMetapaths({ metapaths: newMetapaths }));\n  }\n\n  // checks whether all metapaths besides the specified are unchecked\n  allOthersUnchecked(id) {\n    for (const metapath of this.props.metapaths) {\n      if (id !== metapath.id && metapath.checked)\n        return false;\n    }\n\n    return true;\n  }\n\n  // toggles the specified metapaths on/off\n  toggleChecked(id) {\n    const newMetapaths = copyObject(this.props.metapaths);\n\n    for (const metapath of newMetapaths) {\n      if (metapath.id === id)\n        metapath.checked = !metapath.checked;\n    }\n\n    this.props.dispatch(updateMetapaths({ metapaths: newMetapaths }));\n  }\n\n  // solo metapath (turn all others off)\n  soloChecked(id) {\n    const newMetapaths = copyObject(this.props.metapaths);\n    const allOthersUnchecked = this.allOthersUnchecked(id);\n\n    for (const metapath of newMetapaths) {\n      if (allOthersUnchecked || id === metapath.id)\n        metapath.checked = true;\n      else\n        metapath.checked = false;\n    }\n\n    this.props.dispatch(updateMetapaths({ metapaths: newMetapaths }));\n  }\n\n  // change which column table is sorted by\n  changeSort(sortColumn) {\n    const newState = {};\n    newState.sortColumn = sortColumn;\n\n    if (sortColumn === this.state.sortColumn)\n      newState.sortUp = !this.state.sortUp;\n    else\n      newState.sortUp = true;\n\n    this.setState(newState);\n  }\n\n  // compare numbers (for sorting)\n  compareNumbers(a, b, key) {\n    // parse as numbers\n    const comparison = Number(a[key]) - Number(b[key]);\n    if (!Number.isNaN(comparison))\n      return comparison;\n\n    // otherwise parse as strings and compare alphabetically\n    if (a[key] < b[key])\n      return -1;\n    else if (a[key] > b[key])\n      return 1;\n    else\n      return 0;\n  }\n\n  // compare metapaths (for sorting)\n  compareMetapaths(a, b, key) {\n    a = a[key];\n    b = b[key];\n    // first by length\n    if (a.length < b.length)\n      return -1;\n    else if (a.length > b.length)\n      return 1;\n    else {\n      // then alphabetically\n      if (a < b)\n        return -1;\n      else if (a > b)\n        return 1;\n      else\n        return 0;\n    }\n  }\n\n  // download table data as .csv file\n  downloadCsv() {\n    if (\n      !this.props.metapaths.length ||\n      !this.props.sourceNode.name ||\n      !this.props.targetNode.name\n    )\n      return;\n\n    const tableData = makeMetapathsTable(this.props.metapaths);\n    const filename = [\n      'metapaths',\n      makeFilenameFriendly(this.props.sourceNode.name),\n      makeFilenameFriendly(this.props.targetNode.name)\n    ].join('_');\n    downloadCsv(tableData, filename);\n  }\n\n  // display component\n  render() {\n    // sort metapaths by specified column\n    const sortedMetapaths = this.props.metapaths;\n    const sortColumn = this.state.sortColumn;\n\n    // sort by appropriate field\n    if (sortColumn === 'metapath_metaedges')\n      sortedMetapaths.sort((a, b) => this.compareMetapaths(a, b, sortColumn));\n    else\n      sortedMetapaths.sort((a, b) => this.compareNumbers(a, b, sortColumn));\n\n    // reverse sort direction\n    if (this.state.sortUp)\n      sortedMetapaths.reverse();\n\n    // count metapaths\n    const metapathCount = sortedMetapaths.length;\n    let metapathSelectedCount = 0;\n    for (const metapath of sortedMetapaths) {\n      if (metapath.checked)\n        metapathSelectedCount++;\n    }\n\n    return (\n      <TableContext.Provider\n        value={{\n          sortedMetapaths: sortedMetapaths,\n          showMore: this.state.showMore,\n          allChecked: this.state.allChecked,\n          toggleAllChecked: this.toggleAllChecked,\n          toggleChecked: this.toggleChecked,\n          soloChecked: this.soloChecked,\n          sortColumn: this.state.sortColumn,\n          sortUp: this.state.sortUp,\n          changeSort: this.changeSort\n        }}\n      >\n        <div className='table_attic'>\n          <TextButton\n            text='.csv'\n            icon={faDownload}\n            className='link_button small'\n            onClick={this.downloadCsv}\n            tooltipText='Download table as .csv file'\n          />\n          <TextButton\n            text={this.state.showMore ? 'show less ' : 'show more '}\n            icon={this.state.showMore ? faAngleLeft : faAngleRight}\n            className='link_button small'\n            onClick={this.toggleShowMore}\n            tooltipText='Expand table and show more columns'\n          />\n          <div className='small light right'>\n            {metapathCount} results, {metapathSelectedCount} selected\n          </div>\n        </div>\n        <div className='table_container' data-expanded={this.state.showMore}>\n          <table className='metapath_results_table'>\n            <TableHead />\n            <TableBody />\n          </table>\n        </div>\n      </TableContext.Provider>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst TableContext = React.createContext({});\n// connect component to global state\nTableFull = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metapaths: state.metapaths\n}))(TableFull);\n\n// table header component\n// contains column labels and sort buttons\nclass TableHead extends Component {\n  // display component\n  render() {\n    // extra 'super-grouping' row at top of table\n    const extraRow = (\n      <tr>\n        <td className='col_xs' />\n        <td className='col_l' />\n        <td className='col_s' />\n        <td className='col_m' />\n        <td className='col_m' />\n        <td className='col_s' />\n        <td className='col_xxl center' colSpan='6'>\n          <div className='divider'>Null DWPC distribution information</div>\n        </td>\n      </tr>\n    );\n\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.nodes\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n    // primary columns\n    const cols = (\n      <>\n        <td className='col_xs'>\n          <Checkbox\n            checked={this.context.allChecked}\n            onClick={() => this.context.toggleAllChecked()}\n            onCtrlClick={() => this.context.toggleAllChecked()}\n            tooltipText='Show all paths'\n          />\n        </td>\n        <TableHeadCell\n          className='col_l'\n          buttonClass='left'\n          fieldName='metapath_metaedges'\n          tooltipText={tooltipText['metapath']}\n          text='metapath'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='path_count'\n          tooltipText={tooltipText['path_count']}\n          text='path count'\n        />\n        <TableHeadCell\n          className='col_m'\n          fieldName='adjusted_p_value'\n          tooltipText={tooltipText['adjusted_p_value']}\n          text={\n            <span>\n              adjusted\n              <br />\n              <i>p</i>-value\n            </span>\n          }\n        />\n      </>\n    );\n\n    // extra columns\n    const extraCols = (\n      <>\n        <TableHeadCell\n          className='col_m'\n          fieldName='p_value'\n          tooltipText={tooltipText['p_value']}\n          text={\n            <>\n              <i>p</i>-value\n            </>\n          }\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='dwpc'\n          tooltipText={tooltipText['dwpc']}\n          text='DWPC'\n        />\n        <TableHeadCell\n          fieldName='dgp_source_degree'\n          tooltipText={tooltipText['dgp_source_degree']}\n          text='source degree'\n        />\n        <TableHeadCell\n          fieldName='dgp_target_degree'\n          tooltipText={tooltipText['dgp_target_degree']}\n          text='target degree'\n        />\n        <TableHeadCell\n          fieldName='dgp_n_dwpcs'\n          tooltipText={tooltipText['dgp_n_dwpcs']}\n          text=\"# DWPC's\"\n        />\n        <TableHeadCell\n          fieldName='dgp_n_nonzero_dwpcs'\n          tooltipText={tooltipText['dgp_n_nonzero_dwpcs']}\n          text=\"# non-0 DWPC's\"\n        />\n        <TableHeadCell\n          fieldName='dgp_nonzero_mean'\n          tooltipText={tooltipText['dgp_nonzero_mean']}\n          text='non-0 mean'\n        />\n        <TableHeadCell\n          fieldName='dgp_nonzero_sd'\n          tooltipText={tooltipText['dgp_nonzero_sd']}\n          text={<>non-0 &sigma;</>}\n        />\n      </>\n    );\n\n    return (\n      <thead className='small light'>\n        {this.context.showMore && extraRow}\n        <tr>\n          {cols}\n          {this.context.showMore && extraCols}\n        </tr>\n      </thead>\n    );\n  }\n}\n// connect component to context component\nTableHead.contextType = TableContext;\n// connect component to global state\nTableHead = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableHead);\n\n// table header cell component\nclass TableHeadCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className}>\n        <SortButton\n          text={this.props.text}\n          tooltipText={this.props.tooltipText}\n          fieldName={this.props.fieldName}\n          className={this.props.buttonClass}\n        />\n      </td>\n    );\n  }\n}\n\n// column sort button component\nclass SortButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText={this.props.tooltipText}\n        className={'sort_button ' + (this.props.className || '')}\n        onClick={() => this.context.changeSort(this.props.fieldName)}\n      >\n        {this.props.text}\n        <FontAwesomeIcon\n          icon={\n            this.props.fieldName === this.context.sortColumn\n              ? this.context.sortUp\n                ? faSortUp\n                : faSortDown\n              : faSort\n          }\n        />\n      </Button>\n    );\n  }\n}\n// connect component to context component\nSortButton.contextType = TableContext;\n\n// table body component\n// contains actual data\nclass TableBody extends Component {\n  // display component\n  render() {\n    return (\n      <tbody>\n        {this.context.sortedMetapaths.map((metapath, index) => (\n          <TableBodyRow\n            key={index}\n            metapath={metapath}\n            checked={metapath.checked}\n            showMore={this.props.showMore}\n          />\n        ))}\n      </tbody>\n    );\n  }\n}\n// connect component to context component\nTableBody.contextType = TableContext;\n\n// table body row component\n// contains column data for one metapath\nclass TableBodyRow extends Component {\n  // display component\n  render() {\n    const metapath = this.props.metapath;\n\n    // primary columns\n    const cols = (\n      <>\n        <td>\n          <Checkbox\n            checked={this.props.checked}\n            onClick={() => this.context.toggleChecked(this.props.metapath.id)}\n            onCtrlClick={() => this.context.soloChecked(this.props.metapath.id)}\n            tooltipText={\n              'Show these ' +\n              (this.props.metapath.path_count || '') +\n              ' paths in the paths table'\n            }\n          />\n        </td>\n        <TableBodyCell\n          fieldClass='left'\n          value={metapathChips(metapath.metapath_metaedges)}\n          fullValue={metapath.metapath_name}\n        />\n        <TableBodyCell value={metapath.path_count} />\n        <TableBodyCell\n          style={{ backgroundColor: toGradient(metapath.adjusted_p_value) }}\n          value={toExponential(metapath.adjusted_p_value)}\n          fullValue={metapath.adjusted_p_value}\n        />\n      </>\n    );\n\n    // extra columns\n    const extraCols = (\n      <>\n        <TableBodyCell\n          style={{ backgroundColor: toGradient(metapath.p_value) }}\n          value={toExponential(metapath.p_value)}\n          fullValue={metapath.p_value}\n        />\n        <TableBodyCell\n          value={toFixed(metapath.dwpc)}\n          fullValue={metapath.dwpc}\n        />\n        <TableBodyCell value={metapath.dgp_source_degree} />\n        <TableBodyCell value={metapath.dgp_target_degree} />\n        <TableBodyCell value={metapath.dgp_n_dwpcs} />\n        <TableBodyCell value={metapath.dgp_n_nonzero_dwpcs} />\n        <TableBodyCell\n          value={toFixed(metapath.dgp_nonzero_mean)}\n          fullValue={metapath.dgp_nonzero_mean}\n        />\n        <TableBodyCell\n          value={toFixed(metapath.dgp_nonzero_sd)}\n          fullValue={metapath.dgp_nonzero_sd}\n        />\n      </>\n    );\n\n    return (\n      <tr>\n        {cols}\n        {this.context.showMore && extraCols}\n      </tr>\n    );\n  }\n}\n// connect component to context component\nTableBodyRow.contextType = TableContext;\n\n// table body cell component\nclass TableBodyCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className} style={this.props.style}>\n        <DynamicField\n          value={this.props.value}\n          fullValue={this.props.fullValue}\n          className={this.props.fieldClass}\n        />\n      </td>\n    );\n  }\n}\n\n// table with no results component\nclass TableEmpty extends Component {\n  // display component\n  render() {\n    return (\n      <table className='metapath_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>no results to show</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// make table array out of metapaths results object\nfunction makeMetapathsTable(metapaths) {\n  let headers = [];\n  for (const field of Object.keys(metapaths[0])) {\n    if (\n      typeof metapaths[0][field] === 'number' ||\n      typeof metapaths[0][field] === 'string'\n    )\n      headers.push(field);\n  }\n\n  // sort headers in custom order\n  const order = [\n    'id',\n    'metapath_name',\n    'metapath_abbreviation',\n    'path_count',\n    'adjusted_p_value',\n    'p_value',\n    'dwpc',\n    'dgp_source_degree',\n    'dgp_target_degree',\n    'dgp_n_dwpcs',\n    'dgp_n_nonzero_dwpcs',\n    'dgp_nonzero_mean',\n    'dgp_nonzero_sd'\n  ];\n  headers = sortCustom(headers, order);\n\n  const table = [];\n  table.push(headers);\n  for (const result of metapaths) {\n    const row = [];\n    for (const header of headers)\n      row.push(result[header]);\n    table.push(row);\n  }\n\n  return table;\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { Button } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { TextButton } from './buttons.js';\nimport { EyeCheckbox } from './buttons.js';\nimport { HighlighterCheckbox } from './buttons.js';\nimport { downloadCsv } from './util.js';\nimport { makeFilenameFriendly } from './util.js';\nimport { pathChips } from './chips.js';\nimport { updatePathQueries } from './actions.js';\nimport { toFixed } from './util.js';\nimport { sortCustom } from './util.js';\nimport { compareArrays } from './util.js';\nimport { copyObject } from './util.js';\nimport './path-results.css';\n\n// path results section component\nexport class PathResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <CollapsibleSection\n          label='Paths'\n          tooltipText='Paths of the selected metapaths'\n        >\n          {this.props.pathQueries.length > 0 ? <TableFull /> : <TableEmpty />}\n        </CollapsibleSection>\n      </section>\n    );\n  }\n}\n// connect component to global state\nPathResults = connect((state) => ({\n  pathQueries: state.pathQueries\n}))(PathResults);\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.showMore = false;\n    this.state.allChecked = false;\n    this.state.allHighlighted = false;\n    this.state.sortColumn = 'score';\n    this.state.sortUp = true;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n    this.toggleAllChecked = this.toggleAllChecked.bind(this);\n    this.allChecked = this.allChecked.bind(this);\n    this.checkAll = this.checkAll.bind(this);\n    this.uncheckAll = this.uncheckAll.bind(this);\n    this.allOthersUnchecked = this.allOthersUnchecked.bind(this);\n    this.toggleChecked = this.toggleChecked.bind(this);\n    this.soloChecked = this.soloChecked.bind(this);\n    this.toggleAllHighlighted = this.toggleAllHighlighted.bind(this);\n    this.allHighlighted = this.allHighlighted.bind(this);\n    this.highlightAll = this.highlightAll.bind(this);\n    this.unhighlightAll = this.unhighlightAll.bind(this);\n    this.allOthersUnhighlighted = this.allOthersUnhighlighted.bind(this);\n    this.toggleHighlighted = this.toggleHighlighted.bind(this);\n    this.soloHighlighted = this.soloHighlighted.bind(this);\n    this.changeSort = this.changeSort.bind(this);\n    this.downloadCsv = this.downloadCsv.bind(this);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (this.props.pathQueries !== prevProps.pathQueries) {\n      this.updateAllChecked();\n      this.updateAllHighlighted();\n    }\n  }\n\n  // toggle show more/less\n  toggleShowMore(event) {\n    if (event)\n      event.preventDefault();\n\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // checks if all rows checked and updates state\n  updateAllChecked() {\n    if (this.allChecked())\n      this.setState({ allChecked: true });\n    else\n      this.setState({ allChecked: false });\n  }\n\n  // toggle check/uncheck all\n  toggleAllChecked() {\n    if (this.allChecked())\n      this.uncheckAll();\n    else\n      this.checkAll();\n  }\n\n  // checks whether all paths are checked\n  allChecked() {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!path.checked)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // makes all paths checked\n  checkAll() {\n    const newPathQueries = copyObject(this.props.pathQueries);\n\n    for (const pathQuery of newPathQueries) {\n      for (const path of pathQuery.paths)\n        path.checked = true;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: newPathQueries }));\n  }\n\n  // makes all paths unchecked\n  uncheckAll() {\n    const newPathQueries = copyObject(this.props.pathQueries);\n\n    for (const pathQuery of newPathQueries) {\n      for (const path of pathQuery.paths)\n        path.checked = false;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: newPathQueries }));\n  }\n\n  // checks whether all paths besides the specified are unchecked\n  allOthersUnchecked(thePath) {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!this.comparePaths(path, thePath) && path.checked)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // toggles the specified paths on/off\n  toggleChecked(thePath) {\n    const newPathQueries = copyObject(this.props.pathQueries);\n\n    for (const pathQuery of newPathQueries) {\n      for (const path of pathQuery.paths) {\n        if (this.comparePaths(path, thePath))\n          path.checked = !path.checked;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: newPathQueries }));\n  }\n\n  // solo path (turn all others off)\n  soloChecked(thePath) {\n    const newPathQueries = copyObject(this.props.pathQueries);\n    const allOthersUnchecked = this.allOthersUnchecked(thePath);\n\n    for (const pathQuery of newPathQueries) {\n      for (const path of pathQuery.paths) {\n        if (allOthersUnchecked || this.comparePaths(path, thePath))\n          path.checked = true;\n        else\n          path.checked = false;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: newPathQueries }));\n  }\n\n  // checks if all rows highlighted and updates state\n  updateAllHighlighted() {\n    if (this.allHighlighted())\n      this.setState({ allHighlighted: true });\n    else\n      this.setState({ allHighlighted: false });\n  }\n\n  // toggle highlight/unhighlight all\n  toggleAllHighlighted() {\n    if (this.allHighlighted())\n      this.unhighlightAll();\n    else\n      this.highlightAll();\n  }\n\n  // checks whether all paths are highlighted\n  allHighlighted() {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!path.highlighted)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // makes all paths highlighted\n  highlightAll() {\n    const newPathQueries = copyObject(this.props.pathQueries);\n\n    for (const pathQuery of newPathQueries) {\n      for (const path of pathQuery.paths)\n        path.highlighted = true;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: newPathQueries }));\n  }\n\n  // makes all paths unhighlighted\n  unhighlightAll() {\n    const newPathQueries = copyObject(this.props.pathQueries);\n\n    for (const pathQuery of newPathQueries) {\n      for (const path of pathQuery.paths)\n        path.highlighted = false;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: newPathQueries }));\n  }\n\n  // checks whether all paths besides the specified are unhighlighted\n  allOthersUnhighlighted(thePath) {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!this.comparePaths(path, thePath) && path.highlighted)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // toggles the specified paths on/off\n  toggleHighlighted(thePath) {\n    const newPathQueries = copyObject(this.props.pathQueries);\n\n    for (const pathQuery of newPathQueries) {\n      for (const path of pathQuery.paths) {\n        if (this.comparePaths(path, thePath))\n          path.highlighted = !path.highlighted;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: newPathQueries }));\n  }\n\n  // solo path (turn all others off)\n  soloHighlighted(thePath) {\n    const newPathQueries = copyObject(this.props.pathQueries);\n    const allOthersUnhighlighted = this.allOthersUnhighlighted(thePath);\n\n    for (const pathQuery of newPathQueries) {\n      for (const path of pathQuery.paths) {\n        if (allOthersUnhighlighted)\n          path.highlighted = true;\n        else {\n          if (this.comparePaths(path, thePath))\n            path.highlighted = true;\n          else\n            path.highlighted = false;\n        }\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: newPathQueries }));\n  }\n\n  // checks if paths are equal\n  comparePaths(path1, path2) {\n    return (\n      compareArrays(path1.node_ids, path2.node_ids) &&\n      compareArrays(path1.rel_ids, path2.rel_ids)\n    );\n  }\n\n  // change which column table is sorted by\n  changeSort(sortColumn) {\n    const newState = {};\n    newState.sortColumn = sortColumn;\n\n    if (sortColumn === this.state.sortColumn)\n      newState.sortUp = !this.state.sortUp;\n    else\n      newState.sortUp = true;\n\n    this.setState(newState);\n  }\n\n  // compare numbers (for sorting)\n  compareNumbers(a, b, key) {\n    // parse as numbers\n    const comparison = Number(a[key]) - Number(b[key]);\n    if (!Number.isNaN(comparison))\n      return comparison;\n\n    // otherwise parse as strings and compare alphabetically\n    if (a[key] < b[key])\n      return -1;\n    else if (a[key] > b[key])\n      return 1;\n    else\n      return 0;\n  }\n\n  // download table data as .csv file\n  downloadCsv() {\n    if (\n      !this.props.pathQueries.length ||\n      !this.props.sourceNode.name ||\n      !this.props.targetNode.name\n    )\n      return;\n\n    const tableData = makePathsTable(this.props.pathQueries);\n    const filename = [\n      'paths',\n      makeFilenameFriendly(this.props.sourceNode.name),\n      makeFilenameFriendly(this.props.targetNode.name)\n    ].join('_');\n    downloadCsv(tableData, filename);\n  }\n\n  // display component\n  render() {\n    let nodes = {};\n    for (const pathQuery of this.props.pathQueries)\n      nodes = { ...nodes, ...pathQuery.nodes };\n\n    let edges = {};\n    for (const pathQuery of this.props.pathQueries)\n      edges = { ...edges, ...pathQuery.relationships };\n\n    let sortedPaths = [];\n    for (const pathQuery of this.props.pathQueries)\n      sortedPaths = [...sortedPaths, ...pathQuery.paths];\n\n    // construct full path description/name\n    sortedPaths = sortedPaths.map((path) => ({\n      ...path,\n      chipDescription: pathChips(\n        assemblePath(path, nodes, edges),\n        this.state.showMore\n      ),\n      textDescription: textDescription(assemblePath(path, nodes, edges))\n    }));\n\n    // sort paths by specified column\n    const sortColumn = this.state.sortColumn;\n\n    // sort by appropriate field\n    sortedPaths.sort((a, b) => this.compareNumbers(a, b, sortColumn));\n\n    // reverse sort direction\n    if (this.state.sortUp)\n      sortedPaths.reverse();\n\n    // count paths\n    const pathCount = sortedPaths.length;\n    let pathSelectedCount = 0;\n    for (const path of sortedPaths) {\n      if (path.checked)\n        pathSelectedCount++;\n    }\n\n    let pathHighlightedCount = 0;\n    for (const path of sortedPaths) {\n      if (path.highlighted)\n        pathHighlightedCount++;\n    }\n\n    return (\n      <TableContext.Provider\n        value={{\n          sortedPaths: sortedPaths,\n          showMore: this.state.showMore,\n          allChecked: this.state.allChecked,\n          toggleAllChecked: this.toggleAllChecked,\n          toggleChecked: this.toggleChecked,\n          soloChecked: this.soloChecked,\n          allHighlighted: this.state.allHighlighted,\n          toggleAllHighlighted: this.toggleAllHighlighted,\n          toggleHighlighted: this.toggleHighlighted,\n          soloHighlighted: this.soloHighlighted,\n          sortColumn: this.state.sortColumn,\n          sortUp: this.state.sortUp,\n          changeSort: this.changeSort\n        }}\n      >\n        <div className='table_attic'>\n          <TextButton\n            text='.csv'\n            icon={faDownload}\n            className='link_button small'\n            onClick={this.downloadCsv}\n            tooltipText='Download table as .csv file'\n          />\n          <TextButton\n            text={this.state.showMore ? 'show less ' : 'show more '}\n            icon={this.state.showMore ? faAngleLeft : faAngleRight}\n            className='link_button small'\n            onClick={this.toggleShowMore}\n            tooltipText='Expand table'\n          />\n          <div className='small light right'>\n            {pathCount} results, {pathSelectedCount} selected,{' '}\n            {pathHighlightedCount} highlighted\n          </div>\n        </div>\n        <div className='table_container' data-expanded={this.state.showMore}>\n          <table\n            className='path_results_table'\n            data-expanded={this.state.showMore}\n          >\n            <TableHead />\n            <TableBody />\n          </table>\n        </div>\n      </TableContext.Provider>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst TableContext = React.createContext({});\n// connect component to global state\nTableFull = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metagraph: state.metagraph,\n  pathQueries: state.pathQueries\n}))(TableFull);\n\n// table header component\n// contains column labels and sort buttons\nclass TableHead extends Component {\n  // display component\n  render() {\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.nodes\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n    // primary columns\n    const cols = (\n      <>\n        <td className='col_xs'>\n          <EyeCheckbox\n            checked={this.context.allChecked}\n            onClick={() => this.context.toggleAllChecked()}\n            onCtrlClick={() => this.context.toggleAllChecked()}\n            tooltipText='Show all paths'\n          />\n        </td>\n        <td className='col_xs'>\n          <HighlighterCheckbox\n            checked={this.context.allHighlighted}\n            onClick={() => this.context.toggleAllHighlighted()}\n            onCtrlClick={() => this.context.toggleAllHighlighted()}\n            tooltipText='Highlight all paths'\n          />\n        </td>\n        <TableHeadCell\n          className='col_s left'\n          buttonClass='left'\n          fieldName='metapath'\n          tooltipText={tooltipText['metapath']}\n          text='metapath'\n        />\n        <TableHeadCell\n          className='col_xl left'\n          buttonClass='left'\n          fieldName='textDescription'\n          tooltipText={tooltipText['path']}\n          text='path'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='score'\n          tooltipText={tooltipText['score']}\n          text='path score'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='percent_of_DWPC'\n          tooltipText={tooltipText['percent_of_DWPC']}\n          text='% of DWPC'\n        />\n      </>\n    );\n\n    return (\n      <thead className='small light'>\n        <tr>{cols}</tr>\n      </thead>\n    );\n  }\n}\n// connect component to context component\nTableHead.contextType = TableContext;\n// connect component to global state\nTableHead = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableHead);\n\n// table header cell component\nclass TableHeadCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className}>\n        <SortButton\n          text={this.props.text}\n          tooltipText={this.props.tooltipText}\n          fieldName={this.props.fieldName}\n          className={this.props.buttonClass}\n        />\n      </td>\n    );\n  }\n}\n\n// column sort button component\nclass SortButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText={this.props.tooltipText}\n        className={'sort_button ' + (this.props.className || '')}\n        onClick={() => this.context.changeSort(this.props.fieldName)}\n      >\n        {this.props.text}\n        <FontAwesomeIcon\n          icon={\n            this.props.fieldName === this.context.sortColumn\n              ? this.context.sortUp\n                ? faSortUp\n                : faSortDown\n              : faSort\n          }\n        />\n      </Button>\n    );\n  }\n}\n// connect component to context component\nSortButton.contextType = TableContext;\n\n// table body component\n// contains actual data\nclass TableBody extends Component {\n  // display component\n  render() {\n    return (\n      <tbody>\n        {this.context.sortedPaths.map((path, index) => (\n          <TableBodyRow\n            key={index}\n            path={path}\n            checked={path.checked}\n            highlighted={path.highlighted}\n          />\n        ))}\n      </tbody>\n    );\n  }\n}\n// connect component to context component\nTableBody.contextType = TableContext;\n// connect component to global state\nTableBody = connect((state) => ({\n  pathQueries: state.pathQueries\n}))(TableBody);\n\n// table body row component\n// contains column data for one path\nclass TableBodyRow extends Component {\n  // display component\n  render() {\n    const path = this.props.path;\n\n    // primary columns\n    const cols = (\n      <>\n        <td>\n          <EyeCheckbox\n            checked={this.props.checked}\n            onClick={() => this.context.toggleChecked(this.props.path)}\n            onCtrlClick={() => this.context.soloChecked(this.props.path)}\n            tooltipText='Show this path in the graph display'\n          />\n        </td>\n        <td>\n          <HighlighterCheckbox\n            checked={this.props.highlighted}\n            onClick={() => this.context.toggleHighlighted(this.props.path)}\n            onCtrlClick={() => this.context.soloHighlighted(this.props.path)}\n            tooltipText='Highlight this path in the graph display'\n          />\n        </td>\n        <TableBodyCell\n          className='left small'\n          fieldClass='left'\n          value={path.metapath}\n          fullValue={path.metapath}\n        />\n        <TableBodyCell\n          className='left small'\n          fieldClass='left'\n          value={path.chipDescription}\n          fullValue={path.textDescription}\n        />\n        <TableBodyCell\n          value={path.score ? toFixed(path.score) : '-'}\n          fullValue={path.score || '-'}\n        />\n        <TableBodyCell\n          value={toFixed(path.percent_of_DWPC)}\n          fullValue={path.percent_of_DWPC}\n        />\n      </>\n    );\n\n    return <tr>{cols}</tr>;\n  }\n}\n// connect component to context component\nTableBodyRow.contextType = TableContext;\n\n// table body cell component\nclass TableBodyCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className} style={this.props.style}>\n        <DynamicField\n          value={this.props.value}\n          fullValue={this.props.fullValue}\n          className={this.props.fieldClass}\n        />\n      </td>\n    );\n  }\n}\n\n// table with no results component\nclass TableEmpty extends Component {\n  // display component\n  render() {\n    return (\n      <table className='metapath_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>no results to show</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// construct path object with relevant properties for each node/edge entry\nfunction assemblePath(path, nodes, edges) {\n  const pathNodes = [];\n  for (const nodeId of path.node_ids) {\n    const node = nodes[nodeId];\n    if (!node)\n      continue;\n\n    pathNodes.push({\n      element: 'node',\n      type: node.metanode,\n      name: node.properties.name\n    });\n  }\n\n  const pathEdges = [];\n  for (let index = 0; index < path.rel_ids.length; index++) {\n    const edge = edges[path.rel_ids[index]];\n    const prevNode = nodes[path.node_ids[index]];\n    if (!edge || !prevNode)\n      continue;\n\n    let direction = '';\n    if (edge.directed) {\n      if (edge.source_neo4j_id === prevNode.neo4j_id)\n        direction = 'forward';\n      else\n        direction = 'backward';\n    }\n\n    pathEdges.push({\n      element: 'edge',\n      type: edge.kind,\n      direction: direction\n    });\n  }\n\n  const assembledPath = [];\n  for (const node of pathNodes) {\n    assembledPath.push(node);\n    if (pathEdges.length > 0)\n      assembledPath.push(pathEdges.shift());\n  }\n\n  return assembledPath;\n}\n\n// produce text path description from assembled path\nfunction textDescription(path) {\n  return path.map((entry) => {\n    if (entry.element === 'node')\n      return entry.name;\n    if (entry.element === 'edge') {\n      let arrow = '–';\n      if (entry.direction === 'forward')\n        arrow = '→';\n      else if (entry.direction === 'backward')\n        arrow = '←';\n      return ['', arrow, entry.type, arrow, ''].join(' ');\n    }\n    return '';\n  });\n}\n\n// make table array out of path queries results object\nfunction makePathsTable(pathQueries) {\n  let nodes = {};\n  for (const pathQuery of pathQueries)\n    nodes = { ...nodes, ...pathQuery.nodes };\n\n  let edges = {};\n  for (const pathQuery of pathQueries)\n    edges = { ...edges, ...pathQuery.relationships };\n\n  let paths = [];\n  for (const pathQuery of pathQueries)\n    paths = [...paths, ...pathQuery.paths];\n\n  for (const path of paths) {\n    path.description = textDescription(assemblePath(path, nodes, edges)).join(\n      ''\n    );\n  }\n\n  let headers = [];\n  for (const field of Object.keys(paths[0])) {\n    if (\n      typeof paths[0][field] === 'number' ||\n      typeof paths[0][field] === 'string'\n    )\n      headers.push(field);\n  }\n\n  // sort headers in custom order\n  const order = [\n    'description',\n    'metapath',\n    'score',\n    'percent_of_DWPC'\n  ];\n  headers = sortCustom(headers, order);\n\n  const table = [];\n  table.push(headers);\n  for (const result of paths) {\n    const row = [];\n    for (const header of headers)\n      row.push(result[header]);\n    table.push(row);\n  }\n\n  return table;\n}\n","import React from 'react';\nimport { Component } from 'react';\n\nimport { Tooltip } from './tooltip.js';\nimport './number-box.css';\n\n// number input box component\nexport class NumberBox extends Component {\n  // intialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.value = this.props.value;\n\n    this.onChange = this.onChange.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== prevProps.value)\n      this.setState({ value: this.props.value });\n  }\n\n  // when user changes field\n  onChange(event) {\n    this.setState({ value: event.target.value });\n    if (event.nativeEvent.data === undefined)\n      this.onArrows(event.target.value);\n    else\n      this.onType(event.target.value);\n  }\n\n  // when user presses key in box\n  onKeyPress(event) {\n    if (event.key.toLowerCase() === 'enter')\n      event.target.blur();\n  }\n\n  // when user un-focuses field\n  onBlur(event) {\n    this.onSubmit(event.target.value);\n  }\n\n  // when box changed via arrow buttons or arrow keys\n  onArrows(value) {\n    if (this.props.onArrows)\n      this.props.onArrows(value);\n  }\n\n  // when box changed via typing or copy/paste\n  onType(value) {\n    if (this.props.onType)\n      this.props.onType(value);\n  }\n\n  // when box change submitted\n  onSubmit(value) {\n    if (this.props.onSubmit)\n      this.props.onSubmit(value);\n  }\n\n  // display component\n  render() {\n    return (\n      <Tooltip text={this.props.tooltipText}>\n        <input\n          type='number'\n          className='number_box'\n          onChange={this.onChange}\n          onKeyPress={this.onKeyPress}\n          onBlur={this.onBlur}\n          min={this.props.min}\n          step={this.props.step}\n          max={this.props.max}\n          value={this.state.value}\n        />\n      </Tooltip>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport { faPowerOff } from '@fortawesome/free-solid-svg-icons';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faMapMarker } from '@fortawesome/free-solid-svg-icons';\nimport { faExpand } from '@fortawesome/free-solid-svg-icons';\nimport { faExpandArrowsAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faCompressArrowsAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\n\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { NumberBox } from './number-box.js';\nimport { TextButton } from './buttons.js';\nimport { downloadSvg } from './util.js';\nimport { transferObjectProps } from './util.js';\nimport { Tooltip } from './tooltip.js';\nimport { sortCustom } from './util.js';\nimport { cutString } from './util.js';\nimport './path-graph.css';\n\n// graph settings\nconst minWidth = 240;\nconst minHeight = 240;\nconst maxWidth = 3840;\nconst maxHeight = 2160;\nconst minZoom = 0.25;\nconst maxZoom = 4;\nconst nodeRadius = 25;\nconst nodeDistance = 100;\nconst nodeCharLimit = 25;\nconst nodeFontSize = 8;\nconst nodeRepulsion = 200;\nconst edgeFontSize = 8;\nconst edgeThickness = 2;\nconst edgeArrowSize = 10;\nconst edgeSpreadDistance = 20;\nconst edgeSpreadAngle = (45 / 360) * 2 * Math.PI;\nconst inkColor = '#424242';\nconst backgroundColor = '#fafafa';\nconst highlightColor = '#ffcc00';\n\n// path graph section component\nexport class PathGraph extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.width = maxWidth;\n    this.state.height = maxHeight;\n    this.state.nodeCount = 0;\n    this.state.edgeCount = 0;\n    this.state.selectedElement = null;\n\n    this.graph = React.createRef();\n\n    this.expandContainer = this.expandContainer.bind(this);\n    this.collapseContainer = this.collapseContainer.bind(this);\n    this.updateSectionWidth = this.updateSectionWidth.bind(this);\n    this.setWidth = this.setWidth.bind(this);\n    this.setHeight = this.setHeight.bind(this);\n    this.fitView = this.fitView.bind(this);\n    this.setGraphCounts = this.setGraphCounts.bind(this);\n    this.setSelectedElement = this.setSelectedElement.bind(this);\n  }\n\n  // when component mounts\n  componentDidMount() {\n    this.updateSectionWidth();\n    this.collapseContainer(true);\n    window.addEventListener('resize', this.updateSectionWidth);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.width !== prevState.width) {\n      let width = this.state.width;\n      if (Math.round(width) !== width)\n        width = Math.round(width);\n      if (width > maxWidth)\n        width = maxWidth;\n      if (width < minWidth)\n        width = minWidth;\n      this.setState({ width: width });\n    }\n    if (this.state.height !== prevState.height) {\n      let height = this.state.height;\n      if (Math.round(height) !== height)\n        height = Math.round(height);\n      if (height > maxHeight)\n        height = maxHeight;\n      if (height < minHeight)\n        height = minHeight;\n      this.setState({ height: height });\n    }\n  }\n\n  // get current width of <section> element\n  updateSectionWidth() {\n    this.setState({ sectionWidth: ReactDOM.findDOMNode(this).clientWidth });\n  }\n\n  // expand graph container to width of window\n  expandContainer(proportionalHeight) {\n    const newState = {};\n    newState.width = document.body.clientWidth - 20 - 20;\n    if (proportionalHeight)\n      newState.height = (newState.width * 3) / 4;\n    this.setState(newState, this.fitView);\n  }\n\n  // collapse graph container to width of <section> element\n  collapseContainer(proportionalHeight) {\n    const newState = {};\n    newState.width = ReactDOM.findDOMNode(this).clientWidth;\n    if (proportionalHeight)\n      newState.height = (newState.width * 3) / 4;\n    this.setState(newState, this.fitView);\n  }\n\n  // set width of graph container\n  setWidth(value) {\n    this.setState({ width: value });\n  }\n\n  // set height of graph container\n  setHeight(value) {\n    this.setState({ height: value });\n  }\n\n  // fit view to contents of graph\n  fitView() {\n    if (this.graph.current)\n      this.graph.current.fitView();\n  }\n\n  // download graph as svg\n  downloadSvg() {\n    const svg = document.getElementById('graph');\n    downloadSvg(svg);\n  }\n\n  // set counts of nodes, edges, etc\n  setGraphCounts(nodeCount, edgeCount) {\n    this.setState({\n      nodeCount: nodeCount,\n      edgeCount: edgeCount\n    });\n  }\n\n  // sets the selected node/edge\n  setSelectedElement(element) {\n    this.setState({ selectedElement: element });\n  }\n\n  // display component\n  render() {\n    let info = '';\n    if (this.state.selectedElement) {\n      if (this.state.selectedElement.elementType === 'node') {\n        info = (\n          <>\n            <div className='graph_info_header small light'>Selected Node</div>\n            <SelectedInfo\n              node={this.state.selectedElement}\n              primaryFields={['metanode', 'neo4j_id']}\n              order={[\n                'name',\n                'metanode',\n                'source',\n                'url',\n                'description',\n                'identifier',\n                'neo4j_id'\n              ]}\n            />\n          </>\n        );\n      }\n      if (this.state.selectedElement.elementType === 'edge') {\n        info = (\n          <>\n            <div className='graph_info_header small light'>Selected Edge</div>\n            <SelectedInfo\n              edge={this.state.selectedElement}\n              primaryFields={['kind', 'directed', 'neo4j_id']}\n              order={['kind', 'neo4j_id', 'source']}\n            />\n          </>\n        );\n      }\n    }\n    return (\n      <section>\n        <CollapsibleSection\n          label='Path Graph'\n          tooltipText='Graph of path results'\n        >\n          <div className='table_attic'>\n            <TextButton\n              text='reset'\n              icon={faPowerOff}\n              onClick={() => {\n                if (this.graph.current)\n                  this.graph.current.restartGraph();\n              }}\n              tooltipText='Completely restart graph'\n            />\n            <TextButton\n              text='unpin all'\n              icon={faMapMarkerAlt}\n              onClick={() => {\n                if (this.graph.current)\n                  this.graph.current.unpinAll();\n              }}\n              tooltipText='Unpin all nodes'\n            />\n            <TextButton\n              text='pin all'\n              icon={faMapMarker}\n              onClick={() => {\n                if (this.graph.current)\n                  this.graph.current.pinAll();\n              }}\n              tooltipText='Pin all nodes in their current position'\n            />\n            <TextButton\n              text='fit'\n              icon={faExpand}\n              onClick={this.fitView}\n              tooltipText='Fit the view to the contents of the graph'\n            />\n            <TextButton\n              text='.svg'\n              icon={faDownload}\n              onClick={this.downloadSvg}\n              tooltipText='Download the graph as an .svg file'\n            />\n            <NumberBox\n              tooltipText='Width of the container'\n              min={minWidth}\n              step='5'\n              max={maxWidth}\n              value={this.state.width}\n              onArrows={this.setWidth}\n              onSubmit={this.setWidth}\n            />\n            &times;\n            <NumberBox\n              tooltipText='Height of the container'\n              min={minHeight}\n              step='5'\n              max={maxHeight}\n              value={this.state.height}\n              onArrows={this.setHeight}\n              onSubmit={this.setHeight}\n            />\n            <TextButton\n              className='graph_expand_collapse_button'\n              text=''\n              icon={faExpandArrowsAlt}\n              onClick={this.expandContainer}\n              tooltipText='Fit the graph to the window'\n            />\n            <TextButton\n              className='graph_expand_collapse_button'\n              text=''\n              icon={faCompressArrowsAlt}\n              onClick={this.collapseContainer}\n              tooltipText='Fit the graph to the \"Path Graph\" section'\n            />\n            <span className='small light right'>\n              {this.state.nodeCount} nodes, {this.state.edgeCount} edges\n            </span>\n          </div>\n          <Graph\n            ref={this.graph}\n            width={this.state.width}\n            height={this.state.height}\n            sectionWidth={this.state.sectionWidth}\n            setGraphCounts={this.setGraphCounts}\n            setSelectedElement={this.setSelectedElement}\n          />\n          {info}\n        </CollapsibleSection>\n      </section>\n    );\n  }\n}\n\n// path graph component\nexport class Graph extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.data = this.assembleGraph(null);\n\n    this.fitView = this.fitView.bind(this);\n    this.resetView = this.resetView.bind(this);\n    this.onSimulationTick = this.onSimulationTick.bind(this);\n    this.onNodeEdgeClick = this.onNodeEdgeClick.bind(this);\n    this.onNodeDragStart = this.onNodeDragStart.bind(this);\n    this.onNodeDragEnd = this.onNodeDragEnd.bind(this);\n    this.onViewClick = this.onViewClick.bind(this);\n  }\n\n  // when component mounts\n  componentDidMount() {\n    this.createGraph();\n    this.setState({ data: this.assembleGraph() });\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps, prevState) {\n    // if path queries have changed\n    if (this.props.pathQueries !== prevProps.pathQueries)\n      // update graph data\n      this.setState({ data: this.assembleGraph() });\n    // if graph data has changed\n    else if (this.state.data !== prevState.data) {\n      // copy simulation vars from old data to new data to persist node\n      // positions/velocities/etc\n      transferObjectProps(\n        prevState.data.nodes,\n        this.state.data.nodes,\n        ['neo4j_id'],\n        ['x', 'y', 'fx', 'fy', 'vx', 'vy']\n      );\n\n      // update graph\n      this.updateGraph();\n\n      // update graph info (node count, edge count, etc)\n      this.props.setGraphCounts(\n        this.state.data.nodes.length,\n        this.state.data.edges.length\n      );\n    }\n  }\n\n  // completely restart graph\n  restartGraph() {\n    this.resetView();\n    this.state.simulation.alpha(1).restart();\n    // set graph data to null then back to data again\n    this.setState({ data: this.assembleGraph(null) }, () =>\n      this.setState({ data: this.assembleGraph() })\n    );\n  }\n\n  // create graph when page first loads\n  createGraph() {\n    const svg = d3.select('#graph');\n\n    // create physics simulation for nodes to detangle and prettify layout\n    const simulation = d3\n      .forceSimulation()\n      .force(\n        'link',\n        d3\n          .forceLink()\n          .distance(nodeDistance)\n          .id((d) => d.neo4j_id)\n      )\n      .force(\n        'collide',\n        d3\n          .forceCollide()\n          .radius(nodeRadius)\n          .strength(1)\n      )\n      .force('charge', d3.forceManyBody().strength(-nodeRepulsion))\n      .force('center', d3.forceCenter(0, 0));\n    simulation.on('tick', this.onSimulationTick);\n\n    // create handler for panning and zooming view\n    const viewZoomHandler = d3\n      .zoom()\n      .scaleExtent([minZoom, maxZoom])\n      .on('zoom', this.onViewZoom);\n    svg.call(viewZoomHandler);\n\n    // handle clicks on background\n    svg.on('click', this.onViewClick);\n\n    // create handler for dragging nodes\n    const nodeDragHandler = d3\n      .drag()\n      .on('drag', this.onNodeDrag)\n      .on('start', this.onNodeDragStart)\n      .on('end', this.onNodeDragEnd);\n\n    // store the above objects to be referenced on graph updates\n    this.setState(\n      {\n        simulation: simulation,\n        viewZoomHandler: viewZoomHandler,\n        nodeDragHandler: nodeDragHandler\n      },\n      this.resetView\n    );\n  }\n\n  // when simulation ticks forward\n  onSimulationTick() {\n    // position all elements in graph\n    d3.selectAll('.graph_edge_line_highlight').each(this.positionEdge);\n    d3.selectAll('.graph_edge_line').each(this.positionEdge);\n    d3.selectAll('.graph_edge_label').each(this.positionEdgeLabel);\n    d3.selectAll('.graph_node_circle_highlight').each(this.positionNode);\n    d3.selectAll('.graph_node_circle').each(this.positionNode);\n    d3.selectAll('.graph_node_label').each(this.positionNode);\n  }\n\n  // position node based on results of simulation\n  // d3 simulation stores positions/velocities/etc directly in data object\n  positionNode(d, i, s) {\n    const node = s[i];\n    d3.select(node).attr('transform', 'translate(' + d.x + ',' + d.y + ')');\n  }\n\n  // position edge line between source/target node\n  positionEdge(d, i, s) {\n    let x1 = d.source.x;\n    let y1 = d.source.y;\n    let x2 = d.target.x;\n    let y2 = d.target.y;\n    let path = '';\n\n    // get angle between source/target in radians\n    const angle = Math.atan2(y2 - y1, x2 - x1);\n\n    // get radius of source/target nodes\n    const sourceRadius = nodeRadius - 0.25;\n    let targetRadius = nodeRadius - 0.25;\n    // increase target node radius to bring tip of arrowhead out of circle\n    if (d.directed)\n      targetRadius += edgeArrowSize / 4;\n\n    if (d.coincidentOffset === 0) {\n      // if no coincident edges, or middle of odd number of coincident edges,\n      // just draw straight line\n\n      // bring start/end of line to edge of circles\n      x1 += Math.cos(angle) * sourceRadius;\n      y1 += Math.sin(angle) * sourceRadius;\n      x2 -= Math.cos(angle) * targetRadius;\n      y2 -= Math.sin(angle) * targetRadius;\n\n      // straight line path\n      path = ['M', x1, y1, 'L', x2, y2].join(' ');\n    } else {\n      // otherwise, if coincident edge, draw a curve\n\n      // spread out contact points with circle over spread angle\n      const angleOffset = edgeSpreadAngle * d.coincidentOffset;\n\n      // bring start/end of curve to edge of circle\n      x1 += Math.cos(angle + angleOffset) * sourceRadius;\n      y1 += Math.sin(angle + angleOffset) * sourceRadius;\n      x2 -= Math.cos(angle - angleOffset) * targetRadius;\n      y2 -= Math.sin(angle - angleOffset) * targetRadius;\n\n      // get straight line distance between start/end of curve\n      const distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n      // get \"sagitta\" distance\n      const sag = Math.min(edgeSpreadDistance, distance) * d.coincidentOffset;\n\n      // get point distance \"sag\" away from midpoint of line\n      const qX = (x2 + x1) / 2 - (2 * sag * (y2 - y1)) / distance;\n      const qY = (y2 + y1) / 2 + (2 * sag * (x2 - x1)) / distance;\n\n      // draw curve with handle point Q\n      path = ['M', x1, y1, 'Q', qX, qY, x2, y2].join(' ');\n    }\n\n    // set edge path\n    const edge = s[i];\n    d3.select(edge).attr('d', path);\n  }\n\n  // position edge label in center of edge line and rotate\n  positionEdgeLabel(d, i, s) {\n    let x1 = d.source.x;\n    let y1 = d.source.y;\n    let x2 = d.target.x;\n    let y2 = d.target.y;\n\n    // get angle between source/target in radians\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n\n    // get radius of source/target nodes\n    const sourceRadius = nodeRadius - 0.25;\n    let targetRadius = nodeRadius - 0.25;\n    // increase target node radius to bring tip of arrowhead out of circle\n    if (d.directed)\n      targetRadius += edgeArrowSize / 4;\n\n    // spread out contact points with circle over spread angle\n    const angleOffset = edgeSpreadAngle * d.coincidentOffset;\n\n    // bring start/end of curve to edge of circle\n    x1 += Math.cos(angle + angleOffset) * sourceRadius;\n    y1 += Math.sin(angle + angleOffset) * sourceRadius;\n    x2 -= Math.cos(angle - angleOffset) * targetRadius;\n    y2 -= Math.sin(angle - angleOffset) * targetRadius;\n\n    // get straight line distance between start/end of curve\n    const distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n    // get \"sagitta\" distance\n    const sag = Math.min(edgeSpreadDistance, distance) * d.coincidentOffset;\n\n    // get anchor point of text, point distance \"sag\" away from midpoint of line\n    const textX = (x2 + x1) / 2 - (sag * (y2 - y1)) / distance;\n    const textY = (y2 + y1) / 2 + (sag * (x2 - x1)) / distance;\n\n    // get angle of text in degrees\n    angle = (angle / (2 * Math.PI)) * 360;\n    // rotate text to always show upright\n    if (angle > 90)\n      angle -= 180;\n    if (angle <= -90)\n      angle += 180;\n\n    // set vertical alignment of text relative to anchor point\n    let dy = -0.35 * edgeFontSize;\n    // always place text on \"outside\" side of curve\n    if (sag < 0 && d.source.x > d.target.x)\n      dy = 1.1 * edgeFontSize;\n\n    // set edge text transform\n    const edgeLabel = s[i];\n    d3.select(edgeLabel)\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('dy', dy)\n      .attr(\n        'transform',\n        'translate(' + textX + ',' + textY + ') rotate(' + angle + ') '\n      );\n  }\n\n  // fit view to contents of graph\n  fitView() {\n    const contents = d3\n      .select('#graph_view')\n      .node()\n      .getBBox();\n    const container = d3\n      .select('#graph')\n      .node()\n      .getBoundingClientRect();\n    const padding = nodeRadius;\n\n    // if no contents, exit\n    if (contents.width === 0 || contents.height === 0)\n      return;\n\n    // dimensions minus borders\n    container.width -= 2;\n    container.height -= 2;\n\n    // calculate center of contents\n    contents.midX = contents.x + contents.width / 2;\n    contents.midY = contents.y + contents.height / 2;\n\n    // determine scale and translate to fit view\n    const scale =\n      1 /\n      Math.max(\n        contents.width / (container.width - padding),\n        contents.height / (container.height - padding)\n      );\n    const translateX = container.width / 2 - scale * contents.midX;\n    const translateY = container.height / 2 - scale * contents.midY;\n\n    // perform view transform\n    d3.select('#graph').call(\n      this.state.viewZoomHandler.transform,\n      d3.zoomIdentity.translate(translateX, translateY).scale(scale)\n    );\n  }\n\n  // center view and reset to 100% zoom\n  resetView() {\n    const container = d3\n      .select('#graph')\n      .node()\n      .getBoundingClientRect();\n\n    // dimensions minus borders\n    container.width -= 2;\n    container.height -= 2;\n\n    // determine scale and translate to fit view\n    const scale = 1;\n    const translateX = container.width / 2;\n    const translateY = container.height / 2;\n\n    // perform view transform\n    d3.select('#graph').call(\n      this.state.viewZoomHandler.transform,\n      d3.zoomIdentity.translate(translateX, translateY).scale(scale)\n    );\n  }\n\n  // unpin all nodes\n  unpinAll() {\n    const data = this.state.data;\n\n    data.nodes.forEach((node) => {\n      node.fx = null;\n      node.fy = null;\n    });\n\n    this.state.simulation.alpha(1).restart();\n  }\n\n  // pin all nodes\n  pinAll() {\n    const data = this.state.data;\n\n    data.nodes.forEach((node) => {\n      node.fx = node.x;\n      node.fy = node.y;\n    });\n  }\n\n  // when node or edge clicked by user\n  onNodeEdgeClick(d) {\n    d3.event.stopPropagation();\n\n    if (!d.selected) {\n      this.deselectAll();\n      d.selected = true;\n    } else\n      this.deselectAll();\n\n    this.updateNodeCircles();\n    this.updateEdgeLines();\n\n    this.props.setSelectedElement(d);\n  }\n\n  // deselect all elements\n  deselectAll() {\n    for (const node of this.state.data.nodes)\n      node.selected = undefined;\n    for (const edge of this.state.data.edges)\n      edge.selected = undefined;\n  }\n\n  // when node dragged by user\n  onNodeDragStart() {\n    this.state.simulation.alphaTarget(1).restart();\n  }\n\n  // when node dragged by user\n  onNodeDrag(d) {\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n  }\n\n  // when node dragged by user\n  onNodeDragEnd() {\n    this.state.simulation.alphaTarget(0).restart();\n  }\n\n  // when view/background is clicked by user\n  onViewClick() {\n    this.deselectAll();\n    this.updateNodeCircles();\n    this.updateEdgeLines();\n    this.props.setSelectedElement(null);\n  }\n\n  // when view panned or zoomed by user\n  onViewZoom() {\n    d3.select('#graph_view').attr('transform', d3.event.transform);\n  }\n\n  // update simulation with new data (new nodes and/or edges)\n  updateSimulation() {\n    const data = this.state.data;\n    this.state.simulation.nodes(data.nodes);\n    this.state.simulation.force('link').links(data.edges);\n    this.state.simulation.alpha(1).restart();\n  }\n\n  // draw edge line highlight elements\n  updateEdgeLineHighlights() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_edge_line_highlight_layer');\n\n    const edgeLineHighlights = layer\n      .selectAll('.graph_edge_line_highlight')\n      .data(data.edges.filter((d) => d.highlighted === true));\n\n    edgeLineHighlights\n      .enter()\n      .append('path')\n      .merge(edgeLineHighlights)\n      .attr('class', 'graph_edge_line_highlight')\n      .attr('fill', 'none')\n      .attr('stroke', highlightColor)\n      .attr('stroke-width', edgeArrowSize)\n      .attr('stroke-linecap', 'square');\n\n    edgeLineHighlights.exit().remove();\n  }\n\n  // draw edge line elements\n  updateEdgeLines() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_edge_line_layer');\n\n    const edgeLines = layer.selectAll('.graph_edge_line').data(data.edges);\n\n    edgeLines\n      .enter()\n      .append('path')\n      .on('click', this.onNodeEdgeClick)\n      .merge(edgeLines)\n      .attr('class', 'graph_edge_line')\n      .attr('marker-end', (d) => {\n        if (d.directed)\n          return 'url(#graph_arrowhead)';\n        else\n          return '';\n      })\n      .attr('fill', 'none')\n      .attr('stroke', inkColor)\n      .attr('stroke-width', edgeThickness)\n      .style('stroke-dasharray', (d) => {\n        if (d.selected)\n          return edgeThickness * 2 + ' ' + edgeThickness;\n        else\n          return 'none';\n      })\n      .style('cursor', 'pointer');\n\n    edgeLines.exit().remove();\n  }\n\n  // draw edge label elements\n  updateEdgeLabels() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_edge_label_layer');\n\n    const edgeLabels = layer.selectAll('.graph_edge_label').data(data.edges);\n\n    edgeLabels\n      .enter()\n      .append('text')\n      .on('click', this.onNodeEdgeClick)\n      .merge(edgeLabels)\n      .attr('class', 'graph_edge_label')\n      .attr('font-size', edgeFontSize)\n      .attr('font-weight', 500)\n      .attr('text-anchor', 'middle')\n      .attr('user-select', 'none')\n      .attr('fill', inkColor)\n      .style('cursor', 'pointer')\n      .text((d) => d.kind);\n\n    edgeLabels.exit().remove();\n  }\n\n  // draw node circle highlight elements\n  updateNodeCircleHighlights() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_node_circle_highlight_layer');\n\n    const nodeCircleHighlights = layer\n      .selectAll('.graph_node_circle_highlight')\n      .data(data.nodes.filter((d) => d.highlighted === true));\n\n    nodeCircleHighlights\n      .enter()\n      .append('circle')\n      .merge(nodeCircleHighlights)\n      .attr('class', 'graph_node_circle_highlight')\n      .attr('r', nodeRadius)\n      .attr('fill', 'none')\n      .attr('stroke', highlightColor)\n      .attr('stroke-width', edgeArrowSize);\n\n    nodeCircleHighlights.exit().remove();\n  }\n\n  // draw node circle elements\n  updateNodeCircles() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_node_circle_layer');\n\n    const nodeCircles = layer.selectAll('.graph_node_circle').data(data.nodes);\n\n    nodeCircles\n      .enter()\n      .append('circle')\n      .call(this.state.nodeDragHandler)\n      .on('click', this.onNodeEdgeClick)\n      .merge(nodeCircles)\n      .attr('class', 'graph_node_circle')\n      .attr('r', nodeRadius)\n      .attr('fill', (d) => this.getNodeFillColor(d.metanode))\n      .attr('stroke', (d) => {\n        if (d.selected)\n          return inkColor;\n        else\n          return 'none';\n      })\n      .attr('stroke-width', edgeThickness)\n      .style('stroke-dasharray', edgeThickness * 2 + ' ' + edgeThickness)\n      .style('cursor', 'pointer');\n\n    nodeCircles.exit().remove();\n  }\n\n  // draw node label elements\n  updateNodeLabels() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_node_label_layer');\n\n    const nodeLabels = layer.selectAll('.graph_node_label').data(data.nodes);\n\n    nodeLabels\n      .enter()\n      .append('foreignObject')\n      .attr('class', 'graph_node_label')\n      .append('xhtml:div')\n      .append('xhtml:span');\n\n    layer\n      .selectAll('.graph_node_label')\n      .attr('x', -nodeRadius)\n      .attr('y', -nodeRadius)\n      .attr('width', nodeRadius * 2)\n      .attr('height', nodeRadius * 2)\n      .style('pointer-events', 'none')\n      .select('div')\n      .style('display', 'flex')\n      .style('justify-content', 'center')\n      .style('align-items', 'center')\n      .style('width', '100%')\n      .style('height', '100%')\n      .style('box-sizing', 'border-box')\n      .style('padding', nodeRadius * 0.25 + 'px')\n      .select('span')\n      .style('text-align', 'center')\n      .style('font-size', nodeFontSize + 'px')\n      .style('font-weight', 500)\n      .style('color', (d) => this.getNodeTextColor(d.metanode))\n      .style('word-break', 'break-word')\n      .html((d) => cutString(d.properties.name, nodeCharLimit));\n\n    nodeLabels.exit().remove();\n  }\n\n  // update graph\n  updateGraph() {\n    this.updateEdgeLineHighlights();\n    this.updateEdgeLines();\n    this.updateEdgeLabels();\n    this.updateNodeCircleHighlights();\n    this.updateNodeCircles();\n    this.updateNodeLabels();\n    this.pinSourceAndTargetNodes();\n    this.updateSimulation();\n  }\n\n  // fix source and target nodes in nice starting positions\n  pinSourceAndTargetNodes() {\n    const data = this.state.data;\n\n    data.nodes.forEach((node) => {\n      if (node.neo4j_id === data.source_neo4j_id) {\n        if (!node.x && !node.fx)\n          node.fx = -nodeDistance * 2;\n        if (!node.y && !node.fy)\n          node.fy = 0;\n      }\n      if (node.neo4j_id === data.target_neo4j_id) {\n        if (!node.x && !node.fx)\n          node.fx = nodeDistance * 2;\n        if (!node.y && !node.fy)\n          node.fy = 0;\n      }\n    });\n  }\n\n  // get node fill color based on type (metanode)\n  getNodeFillColor(type) {\n    const style = this.props.hetioStyles[type];\n    if (style && style.fill_color)\n      return style.fill_color;\n    else\n      return inkColor;\n  }\n\n  // get node text color based on type (metanode)\n  getNodeTextColor(type) {\n    const style = this.props.hetioStyles[type];\n    if (style && style.text_color)\n      return style.text_color;\n    else\n      return backgroundColor;\n  }\n\n  // construct graph object with relevant properties for each node/edge\n  assembleGraph(pathQueries) {\n    // empty graph object\n    const graph = {\n      source_neo4j_id: null,\n      target_neo4j_id: null,\n      nodes: [],\n      edges: []\n    };\n\n    // if null explicitly provided as argument, return empty graph object\n    if (pathQueries === null)\n      return graph;\n\n    // if pathQueries not provided as argument, get from component props\n    if (!pathQueries)\n      pathQueries = this.props.pathQueries;\n\n    // if pathQueries not valid, exit\n    if (!pathQueries || pathQueries.length <= 0)\n      return graph;\n\n    // get source/target nodes from first path in pathQueries\n    const firstPath = pathQueries[0].paths[0];\n    graph.source_neo4j_id = firstPath.node_ids[0];\n    graph.target_neo4j_id = firstPath.node_ids[firstPath.node_ids.length - 1];\n\n    // loop through all paths in pathQueries\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        // if not checked, don't include in graph\n        if (!path.checked)\n          continue;\n\n        // loop through nodes in path\n        for (const nodeId of path.node_ids) {\n          const node = pathQuery.nodes[nodeId];\n          const existingNode = graph.nodes.find(\n            (existing) => existing.neo4j_id === node.neo4j_id\n          );\n          if (!existingNode) {\n            // if node hasn't been added to graph yet, add it\n            graph.nodes.push({\n              // copy all properties of node\n              ...node,\n              // add highlight property\n              highlighted: path.highlighted,\n              // mark as node\n              elementType: 'node'\n            });\n          } else if (path.highlighted)\n            // if node already in graph, still update highlight status\n            existingNode.highlighted = true;\n        }\n\n        // loop through edges in path\n        for (const relId of path.rel_ids) {\n          const edge = pathQuery.relationships[relId];\n          const existingEdge = graph.edges.find(\n            (existing) =>\n              existing.source_neo4j_id === edge.source_neo4j_id &&\n              existing.target_neo4j_id === edge.target_neo4j_id &&\n              existing.kind === edge.kind &&\n              existing.directed === edge.directed\n          );\n          if (!existingEdge) {\n            // if edge hasn't been added to graph yet, add it\n            graph.edges.push({\n              // copy all properties of edge\n              ...edge,\n              // set duplicate properties \"source\" and \"target\" because d3\n              // needs them (with those names) to create links between nodes\n              source: edge.source_neo4j_id,\n              target: edge.target_neo4j_id,\n              // add highlight property\n              highlighted: path.highlighted,\n              // mark as edge\n              elementType: 'edge'\n            });\n          } else if (path.highlighted)\n            // if edge already in graph, still update highlight status\n            existingEdge.highlighted = true;\n        }\n      }\n    }\n\n    // loop through all edges in graph to find coincident edges\n    // (multiple edges connecting the same two nodes)\n\n    // sort all edges in graph into bins of same source/target nodes\n    const edgeBins = [];\n    for (const edgeA of graph.edges) {\n      let matched = false;\n      // find bin with edges that have same source/target nodes\n      // (order-insensitve)\n      for (const edgeBin of edgeBins) {\n        const match = edgeBin.find(\n          (edgeB) =>\n            (edgeA.source_neo4j_id === edgeB.source_neo4j_id &&\n              edgeA.target_neo4j_id === edgeB.target_neo4j_id) ||\n            (edgeA.source_neo4j_id === edgeB.target_neo4j_id &&\n              edgeA.target_neo4j_id === edgeB.source_neo4j_id)\n        );\n        // if matching bin found, add edge to it\n        if (match) {\n          edgeBin.push(edgeA);\n          matched = true;\n          break;\n        }\n      }\n      // if didn't find matching bin, create new one and add edge to it\n      if (!matched)\n        edgeBins.push([edgeA]);\n    }\n\n    // loop through edge bins\n    for (const edgeBin of edgeBins) {\n      // for each edge in bin, assign coincident \"offset\", a value between\n      // -1 and 1 used for drawing, where 0 is straight line, negative is curve\n      // on one side, and positive is curve on other side\n      const firstSource = edgeBin[0].source_neo4j_id;\n      for (let index = 0; index < edgeBin.length; index++) {\n        // default offset to 0\n        let offset = 0;\n        if (edgeBin.length > 1)\n          offset = -0.5 + index / (edgeBin.length - 1);\n        // if edge source/target order in reverse order as rest of bin,\n        // invert offset\n        if (edgeBin[index].source_neo4j_id !== firstSource)\n          offset *= -1;\n        edgeBin[index].coincidentOffset = offset;\n      }\n    }\n\n    // put source and target node at end of list to ensure highest z-index\n    const sourceNodeIndex = graph.nodes.findIndex(\n      (node) => node.neo4j_id === graph.source_neo4j_id\n    );\n    if (sourceNodeIndex !== -1)\n      graph.nodes.push(graph.nodes.splice(sourceNodeIndex, 1)[0]);\n    const targetNodeIndex = graph.nodes.findIndex(\n      (node) => node.neo4j_id === graph.target_neo4j_id\n    );\n    if (targetNodeIndex !== -1)\n      graph.nodes.push(graph.nodes.splice(targetNodeIndex, 1)[0]);\n\n    return graph;\n  }\n\n  // display component\n  render() {\n    // calculate x position of graph container\n    let left = 0;\n    if (this.props.sectionWidth && this.props.width) {\n      left = this.props.sectionWidth / 2 - this.props.width / 2;\n      const minLeft =\n        this.props.sectionWidth / 2 - document.body.clientWidth / 2 + 20;\n      if (left < minLeft)\n        left = minLeft;\n    }\n\n    // title text\n    const title =\n      (this.props.sourceNode.name || '___') +\n      ' → ' +\n      (this.props.targetNode.name || '___');\n\n    // description text\n    const description = [\n      'Graph visualization of the connectivity between ',\n      this.props.sourceNode.name || '___',\n      ' (',\n      this.props.sourceNode.metanode || '___',\n      ') and ',\n      this.props.targetNode.name || '___',\n      ' (',\n      this.props.targetNode.metanode || '___',\n      '). ',\n      '\\n\\n',\n      'Created at ',\n      window.location.href,\n      '\\n\\n',\n      'This subgraph of Hetionet v1.0 was created from paths between the ',\n      'specified source/target nodes that occurred more than expected ',\n      'by chance. ',\n      'See https://het.io for more information. '\n    ].join('');\n\n    return (\n      <div id='graph_container' style={{ height: this.props.height }}>\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          id='graph'\n          width={this.props.width}\n          height={this.props.height}\n          style={{ left: left }}\n        >\n          <title>{title}</title>\n          <desc>{description}</desc>\n          <defs>\n            <style>\n              {`\n                @import url('https://fonts.googleapis.com/css?family=Raleway:400,500,700');\n                @import url('https://fonts.googleapis.com/css?family=Montserrat:400,500,700&text=0123456789');\n                * {\n                  font-family: 'Montserrat', 'Raleway', sans-serif;\n                }\n              `}\n            </style>\n            <marker\n              id='graph_arrowhead'\n              viewBox='0 0 100 100'\n              refX='80'\n              refY='50'\n              orient='auto'\n              markerUnits='userSpaceOnUse'\n              markerWidth={edgeArrowSize}\n              markerHeight={edgeArrowSize}\n            >\n              <path\n                d='\n                  M 0 0\n                  L 100 50\n                  L 0 100'\n                fill={inkColor}\n              />\n            </marker>\n          </defs>\n          <g id='graph_view'>\n            <g id='graph_edge_line_highlight_layer' />\n            <g id='graph_node_circle_highlight_layer' />\n            <g id='graph_edge_line_layer' />\n            <g id='graph_edge_label_layer' />\n            <g id='graph_node_circle_layer' />\n            <g id='graph_node_label_layer' />\n          </g>\n        </svg>\n      </div>\n    );\n  }\n}\n// connect component to global state\nGraph = connect(\n  (state) => ({\n    sourceNode: state.sourceNode,\n    targetNode: state.targetNode,\n    pathQueries: state.pathQueries,\n    hetioStyles: state.hetioStyles\n  }),\n  null,\n  null,\n  { forwardRef: true }\n)(Graph);\n\n// selected node/edge info component\nclass SelectedInfo extends Component {\n  // display row entries\n  rows() {\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.edges\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n    if (tooltipText['id'])\n      tooltipText['neo4j_id'] = tooltipText['id'];\n\n    const element = this.props.node || this.props.edge;\n\n    // get primary fields from top level of node/edge\n    let primaryFields = this.props.primaryFields;\n    // get first/second column text (key/value) for each field\n    primaryFields = primaryFields.map((field) => ({\n      firstCol: field,\n      secondCol: String(element[field]),\n      tooltipText: tooltipText[field]\n    }));\n\n    // get 'extra fields' from node/edge 'properties' field\n    let extraFields = Object.keys(element.properties);\n    // get first/second column text (key/value) for each field\n    extraFields = extraFields.map((field) => ({\n      firstCol: field,\n      secondCol: String(element.properties[field]),\n      tooltipText: tooltipText[field]\n    }));\n\n    // combine primary and extra fields\n    let fields = primaryFields.concat(extraFields);\n\n    // display fields in custom order\n    fields = sortCustom(fields, this.props.order, 'firstCol');\n\n    // make columns from fields\n    const cols = fields.map((field, index) => {\n      return (\n        <React.Fragment key={index}>\n          <td className='col_s small light'>\n            <Tooltip text={field.tooltipText}>{field.firstCol}</Tooltip>\n          </td>\n          <td className='small'>{field.secondCol}</td>\n        </React.Fragment>\n      );\n    });\n\n    // make rows in groups of two\n    const rows = new Array(Math.ceil(cols.length / 2))\n      .fill()\n      .map(() => cols.splice(0, 2))\n      .map((col, index) => <tr key={index}>{col}</tr>);\n\n    return rows;\n  }\n\n  // display component\n  render() {\n    return (\n      <table id='graph_info_table'>\n        <tbody>{this.rows()}</tbody>\n      </table>\n    );\n  }\n}\n// connect component to global state\nSelectedInfo = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(SelectedInfo);\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Header } from './header.js';\nimport { NodeSearch } from './node-search.js';\nimport { NodeResults } from './node-results.js';\nimport { MetapathResults } from './metapath-results.js';\nimport { PathResults } from './path-results.js';\nimport { PathGraph } from './path-graph.js';\nimport { getMetagraph } from './backend-query.js';\nimport { getHetioDefinitions } from './backend-query.js';\nimport { getHetioStyles } from './backend-query.js';\nimport { getHetmechDefinitions } from './backend-query.js';\nimport { lookupNodeById } from './backend-query.js';\nimport { searchMetapaths } from './backend-query.js';\nimport { searchPaths } from './backend-query.js';\nimport { setDefinitions } from './actions.js';\nimport { updateSourceTargetNodes } from './actions.js';\nimport { updateMetapaths } from './actions.js';\nimport { updatePathQueries } from './actions.js';\nimport { cutString } from './util.js';\nimport './styles.css';\n\n// main app component\nclass App extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.fetchDefinitions = this.fetchDefinitions.bind(this);\n    this.updateStateFromUrl = this.updateStateFromUrl.bind(this);\n    this.updateMetapaths = this.updateMetapaths.bind(this);\n    this.updatePaths = this.updatePaths.bind(this);\n\n    // fetch definitions when page first loads\n    this.fetchDefinitions();\n    // get parameters from url when page first loads\n    this.updateStateFromUrl();\n    // listen for back/forward navigation (history)\n    window.addEventListener('popstate', this.updateStateFromUrl);\n  }\n\n  // when component changes\n  componentDidUpdate(prevProps) {\n    // when source/target node change\n    if (\n      prevProps.sourceNode.id !== this.props.sourceNode.id ||\n      prevProps.targetNode.id !== this.props.targetNode.id\n    )\n      this.updateMetapaths();\n    // when metapaths change\n    else if (\n      JSON.stringify(prevProps.metapaths) !==\n      JSON.stringify(this.props.metapaths)\n    )\n      this.updatePaths();\n\n    // update document title after state change\n    this.updateTitle();\n  }\n\n  // get metagraph, hetio definitions, and hetmech definitions\n  fetchDefinitions() {\n    this.props.dispatch((dispatch) => {\n      // wait until all fetches return to update state\n      const promises = [\n        getMetagraph(),\n        getHetioDefinitions(),\n        getHetioStyles(),\n        getHetmechDefinitions()\n      ];\n      Promise.all(promises).then((results) => {\n        dispatch(\n          setDefinitions({\n            metagraph: results[0],\n            hetioDefinitions: results[1],\n            hetioStyles: results[2],\n            hetmechDefinitions: results[3]\n          })\n        );\n      });\n    });\n  }\n\n  // update source/target nodes, checked metapaths, etc from url\n  updateStateFromUrl(event) {\n    this.props.dispatch((dispatch) => {\n      const params = new URLSearchParams(window.location.search);\n      const source = params.get('source');\n      const target = params.get('target');\n      const metapaths = params.get('metapaths');\n      let checkedMetapaths;\n      if (metapaths)\n        checkedMetapaths = metapaths.split(',');\n      else\n        checkedMetapaths = [];\n\n      const promises = [\n        lookupNodeById(source),\n        lookupNodeById(target),\n        searchMetapaths(source, target)\n      ];\n\n      // once all queries have returned\n      Promise.all(promises).then(\n        ([newSourceNode, newTargetNode, newMetapaths]) => {\n          // by the time promises return, url may be different (eg if user\n          // clicks back/forward quickly). if different, exit and allow more\n          // recent call to change state\n          const params = new URLSearchParams(window.location.search);\n          if (\n            params.get('source') !== source ||\n            params.get('target') !== target ||\n            params.get('metapaths') !== metapaths\n          )\n            return;\n\n          if (!newMetapaths)\n            newMetapaths = [];\n\n          // check metapaths based on url\n          for (const newMetapath of newMetapaths) {\n            if (checkedMetapaths.includes(newMetapath.metapath_abbreviation))\n              newMetapath.checked = true;\n          }\n\n          // update global state\n          dispatch(\n            updateSourceTargetNodes({\n              sourceNode: newSourceNode,\n              targetNode: newTargetNode,\n              dontUpdateUrl: true\n            })\n          );\n          dispatch(\n            updateMetapaths({\n              metapaths: newMetapaths,\n              dontUpdateUrl: true\n            })\n          );\n        }\n      );\n    });\n  }\n\n  // update document title to reflect current state\n  updateTitle() {\n    const checkedMetapaths = [];\n    for (const metapath of this.props.metapaths) {\n      if (metapath.checked)\n        checkedMetapaths.push(metapath.metapath_abbreviation);\n    }\n\n    const title =\n      cutString(this.props.sourceNode.name || '___', 20) +\n      ' ↔ ' +\n      cutString(this.props.targetNode.name || '___', 20) +\n      ' – ' +\n      checkedMetapaths.length +\n      ' metapaths';\n    document.title = title;\n  }\n\n  // update metapaths (node pair query results) when source/target node change\n  updateMetapaths() {\n    this.props.dispatch((dispatch) =>\n      searchMetapaths(this.props.sourceNode.id, this.props.targetNode.id).then(\n        (results) =>\n          dispatch(\n            updateMetapaths({\n              metapaths: results,\n              preserveChecks: true\n            })\n          )\n      )\n    );\n  }\n\n  // update paths when checked metapaths change\n  updatePaths() {\n    this.props.dispatch((dispatch) => {\n      // fetch paths for all checked metapaths\n      const promises = [];\n      for (const metapath of this.props.metapaths) {\n        if (metapath.checked) {\n          promises.push(\n            searchPaths(\n              this.props.sourceNode.id,\n              this.props.targetNode.id,\n              metapath.metapath_abbreviation\n            )\n          );\n        }\n      }\n\n      // update path queries when all queries have returned\n      Promise.all(promises).then((results) => {\n        dispatch(\n          updatePathQueries({\n            pathQueries: results,\n            preserveChecks: true\n          })\n        );\n      });\n    });\n  }\n\n  // display component\n  render() {\n    return (\n      <>\n        <Header />\n        <NodeSearch />\n        <NodeResults />\n        <MetapathResults />\n        <PathResults />\n        <PathGraph />\n      </>\n    );\n  }\n}\n// connect component to global state\nApp = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metapaths: state.metapaths\n}))(App);\n\nexport { App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport { Reducer } from './reducers.js';\nimport { App } from './app.js';\n\n// create global state store\nconst store = createStore(Reducer, applyMiddleware(thunk));\n\n// render/run app\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { transferObjectProps } from './util';\nimport { transferQueryProps } from './util';\nimport { copyObject } from './util';\n\n// map previous global state to new global state based on action\nexport function Reducer(prevState, action) {\n  // start with previous state\n  let newState;\n  if (prevState === undefined)\n    newState = {};\n  else\n    newState = { ...prevState };\n\n  // detect action type and set new state accordingly\n  switch (action.type) {\n    // set definitions\n    case 'set_definitions':\n      if (action.payload.metagraph !== undefined)\n        newState.metagraph = copyObject(action.payload.metagraph);\n      if (action.payload.hetioDefinitions !== undefined)\n        newState.hetioDefinitions = copyObject(action.payload.hetioDefinitions);\n      if (action.payload.hetioStyles !== undefined)\n        newState.hetioStyles = copyObject(action.payload.hetioStyles);\n      if (action.payload.hetmechDefinitions !== undefined) {\n        newState.hetmechDefinitions = copyObject(\n          action.payload.hetmechDefinitions\n        );\n      }\n      break;\n\n    // update source and/or target node\n    case 'update_source_target_nodes':\n      if (action.payload.sourceNode !== undefined)\n        newState.sourceNode = copyObject(action.payload.sourceNode);\n      if (action.payload.targetNode !== undefined)\n        newState.targetNode = copyObject(action.payload.targetNode);\n      break;\n\n    // swap source/target nodes\n    case 'swap_source_target_nodes':\n      if (prevState.sourceNode && prevState.targetNode) {\n        newState.sourceNode = copyObject(prevState.targetNode);\n        newState.targetNode = copyObject(prevState.sourceNode);\n      }\n      break;\n\n    // update metapaths\n    case 'update_metapaths':\n      if (action.payload.metapaths !== undefined) {\n        newState.metapaths = copyObject(action.payload.metapaths);\n        if (action.preserveChecks === true) {\n          transferObjectProps(\n            prevState.metapaths,\n            newState.metapaths,\n            ['id'],\n            ['checked']\n          );\n        }\n      }\n      break;\n\n    // update path queries\n    case 'update_path_queries':\n      if (action.payload.pathQueries !== undefined) {\n        newState.pathQueries = copyObject(action.payload.pathQueries);\n        if (action.preserveChecks === true) {\n          transferQueryProps(\n            prevState.pathQueries,\n            newState.pathQueries,\n            'paths',\n            ['node_ids', 'rel_ids'],\n            ['checked', 'highlighted']\n          );\n        }\n      }\n      break;\n\n    default:\n      break;\n  }\n\n  // make sure critical variables defined\n  if (!newState.metagraph)\n    newState.metagraph = {};\n  if (!newState.hetioDefinitions)\n    newState.hetioDefinitions = {};\n  if (!newState.hetioStyles)\n    newState.hetioStyles = {};\n  if (!newState.hetmechDefinitions)\n    newState.hetmechDefinitions = {};\n  if (!newState.sourceNode)\n    newState.sourceNode = {};\n  if (!newState.targetNode)\n    newState.targetNode = {};\n  if (!newState.metapaths)\n    newState.metapaths = [];\n  if (!newState.pathQueries)\n    newState.pathQueries = [];\n\n  // update url after state change unless on redux initialization or\n  // explicitly bypassed\n  if (action.updateUrl === true && prevState !== undefined)\n    updateUrl(newState);\n\n  // set new state\n  return newState;\n}\n\n// update url to reflect current state\nfunction updateUrl(state) {\n  // get checked metapaths\n  const checkedMetapaths = [];\n  for (const metapath of state.metapaths) {\n    if (metapath.checked)\n      checkedMetapaths.push(metapath.metapath_abbreviation);\n  }\n\n  checkedMetapaths.sort();\n\n  // new url\n  const newParams = new URLSearchParams();\n\n  // set url parameters\n  if (state.sourceNode.id !== undefined)\n    newParams.set('source', state.sourceNode.id);\n  if (state.targetNode.id !== undefined)\n    newParams.set('target', state.targetNode.id);\n  if (checkedMetapaths.length > 0)\n    newParams.set('metapaths', checkedMetapaths.join(','));\n\n  // make search string\n  let search = newParams.toString();\n  if (search.length > 0)\n    search = '?' + search;\n\n  // if url already matches state, dont push another history entry\n  if (search === window.location.search)\n    return;\n\n  // navigate to new url\n  const url = window.location.origin + window.location.pathname + search;\n  window.history.pushState({}, '', url);\n}\n"],"sourceRoot":""}