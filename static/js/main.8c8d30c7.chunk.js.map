{"version":3,"sources":["logo-animated.svg","header.js","arrow-icon-both.svg","arrow-icon-forward.svg","arrow-icon-backward.svg","chip-gene.svg","chip-compound.svg","chip-anatomy.svg","chip-disease.svg","chip-symptom.svg","chip-side-effect.svg","chip-biological-process.svg","chip-cellular-component.svg","chip-molecular-function.svg","chip-pathway.svg","chip-pharmacologic-class.svg","chips.js","tooltip.js","buttons.js","backend-query.js","actions.js","util.js","node-search.js","dynamic-field.js","collapsible-section.js","node-results.js","metapath-results.js","path-results.js","app.js","index.js","reducers.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","react_default","a","createElement","_ref3","id","stroke","strokeWidth","fill","d","_ref4","_ref5","transform","cx","cy","r","_ref6","_ref7","_ref8","logo_animated_SvgLogoAnimated","_ref","svgRef","props","viewBox","ref","ForwardRef","forwardRef","Header","__webpack_require__","p","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","showLogo","window","setTimeout","setState","inherits","createClass","value","logo","className","href","Component","arrow_icon_both_extends","arrow_icon_both_objectWithoutProperties","arrow_icon_both_objectWithoutPropertiesLoose","arrow_icon_both_ref2","arrow_icon_both_SvgArrowIconBoth","arrow_icon_both_ForwardRef","arrow_icon_forward_extends","arrow_icon_forward_objectWithoutProperties","arrow_icon_forward_objectWithoutPropertiesLoose","arrow_icon_forward_ref2","arrow_icon_forward_SvgArrowIconForward","arrow_icon_forward_ForwardRef","arrow_icon_backward_extends","arrow_icon_backward_objectWithoutProperties","arrow_icon_backward_objectWithoutPropertiesLoose","arrow_icon_backward_ref2","arrow_icon_backward_SvgArrowIconBackward","arrow_icon_backward_ForwardRef","chip_gene_extends","chip_gene_objectWithoutProperties","chip_gene_objectWithoutPropertiesLoose","chip_gene_ref2","chip_gene_SvgChipGene","chip_gene_ForwardRef","chip_compound_extends","chip_compound_objectWithoutProperties","chip_compound_objectWithoutPropertiesLoose","chip_compound_ref2","chip_compound_SvgChipCompound","chip_compound_ForwardRef","chip_anatomy_extends","chip_anatomy_objectWithoutProperties","chip_anatomy_objectWithoutPropertiesLoose","chip_anatomy_ref2","x","y","width","height","chip_anatomy_ref3","strokeLinecap","clipPath","chip_anatomy_SvgChipAnatomy","chip_anatomy_ForwardRef","chip_disease_extends","chip_disease_objectWithoutProperties","chip_disease_objectWithoutPropertiesLoose","chip_disease_ref2","chip_disease_SvgChipDisease","chip_disease_ForwardRef","chip_symptom_extends","chip_symptom_objectWithoutProperties","chip_symptom_objectWithoutPropertiesLoose","chip_symptom_ref2","chip_symptom_ref3","chip_symptom_SvgChipSymptom","chip_symptom_ForwardRef","chip_side_effect_extends","chip_side_effect_objectWithoutProperties","chip_side_effect_objectWithoutPropertiesLoose","chip_side_effect_ref2","chip_side_effect_ref3","chip_side_effect_SvgChipSideEffect","chip_side_effect_ForwardRef","chip_biological_process_extends","chip_biological_process_objectWithoutProperties","chip_biological_process_objectWithoutPropertiesLoose","chip_biological_process_ref2","chip_biological_process_ref3","chip_biological_process_SvgChipBiologicalProcess","chip_biological_process_ForwardRef","chip_cellular_component_extends","chip_cellular_component_objectWithoutProperties","chip_cellular_component_objectWithoutPropertiesLoose","chip_cellular_component_ref2","chip_cellular_component_ref3","chip_cellular_component_SvgChipCellularComponent","chip_cellular_component_ForwardRef","chip_molecular_function_extends","chip_molecular_function_objectWithoutProperties","chip_molecular_function_objectWithoutPropertiesLoose","chip_molecular_function_ref2","chip_molecular_function_ref3","strokeLinejoin","chip_molecular_function_ref4","chip_molecular_function_SvgChipMolecularFunction","chip_molecular_function_ForwardRef","chip_pathway_extends","chip_pathway_objectWithoutProperties","chip_pathway_objectWithoutPropertiesLoose","chip_pathway_ref2","chip_pathway_ref3","chip_pathway_ref4","chip_pathway_SvgChipPathway","chip_pathway_ForwardRef","chip_pharmacologic_class_extends","chip_pharmacologic_class_objectWithoutProperties","chip_pharmacologic_class_objectWithoutPropertiesLoose","chip_pharmacologic_class_ref2","chip_pharmacologic_class_ref3","chip_pharmacologic_class_SvgChipPharmacologicClass","chip_pharmacologic_class_ForwardRef","MetanodeChip","icon","type","fillColor","textColor","style","hetioStyles","fill_color","text_color","color","connect","MetaedgeChip","_Component2","direction","abbreviation","metagraph","kind_to_abbrev","data-name","data-abbreviation","pathChips","path","expanded","map","entry","index","element","chips_NodeChip","name","chips_MetaedgeChip","NodeChip","_Component3","background","data-expanded","Tooltip","open","opacity","onMouseEnter","bind","assertThisInitialized","openTooltip","onMouseLeave","event","_this2","hover","left","getBoundingClientRect","document","documentElement","scrollLeft","top","scrollTop","Math","min","innerWidth","text","Fragment","children","React","Children","isValidElement","cloneElement","tooltip_Popup","Popup","ReactDOM","createPortal","Fade_default","in","body","Button","tooltip_Tooltip","tooltipText","onClick","ctrlKey","onCtrlClick","shiftKey","onShiftClick","TextButton","buttons_Button","index_es","Checkbox","checked","faCheck","EyeCheckbox","_Component4","faEye","HighlighterCheckbox","_Component5","faHighlighter","metagraphUrl","hetioDefinitions","nodeSearchServer","metapathSearchServer","pathSearchServer","fetchJson","url","fetch","then","response","json","results","catch","error","console","log","lookupNodeById","searchPaths","sourceId","targetId","metapath","params","URLSearchParams","set","toString","updateSourceTargetNodes","payload","sourceNode","targetNode","updateMetapaths","metapaths","updatePathQueries","pathQueries","toExponential","number","parseFloat","mantissa","split","toFixed","exponent","parseInt","toGradient","gradient","join","g","b","percent","log10","max","gradientIndex","lowerColor","floor","higherColor","ceil","percentBetween","downloadCsv","data","filename","fileContent","cell","blob","Blob","URL","createObjectURL","link","appendChild","download","click","revokeObjectURL","remove","makeFilenameFriendly","string","trim","replace","substring","sortCustom","array","order","sort","NodeSearch","filters","filterString","updateFilters","NodeSearchContext","Provider","node_search_Filters","node_search_SourceNodeSearch","node_search_SwapButton","node_search_TargetNodeSearch","createContext","Filters","toggle","solo","prevProps","metanode_kinds","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","filter","push","active","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","slice","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","allOthersOff","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","allOn","list","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_this3","buttons","node_search_FilterButton","metanodes","FilterButton","_this4","chips_MetanodeChip","SourceNodeSearch","_this5","onChange","dispatch","node_search_SearchBox","label","node","TargetNodeSearch","_this6","activeElement","blur","SearchBox","_this7","searchResults","inputRef","createRef","formRef","onInput","searchString","_this8","metatypes","searchNodes","context","item","_this9","downshift_esm","onInputValueChange","itemToString","selectedItem","getInputProps","getItemProps","getMenuProps","isOpen","highlightedIndex","clearSelection","node_search_TextBox","node_search_Dropdown","contextType","TextBox","_this10","focused","onFocus","onBlur","overlay","showOverlay","metanode","TextField_default","placeholder","classes","root","InputProps","input","faSearch","Dropdown","_this11","Popper_default","anchorEl","current","placement","container","disablePortal","Paper_default","result","MenuItem_default","identifier","SwapButton","_this12","faExchangeAlt","DynamicField","field","tagName","toLowerCase","focus","deselectAll","selectAll","getSelection","empty","selectAllChildren","displayValue","fullValue","tabIndex","CollapsibleSection","collapsed","loadState","saveState","localStorage","getItem","setItem","String","data-collapsed","faAngleUp","faAngleDown","NodeResults","node_results_NodeCard","NodeCard","collapsible_section_CollapsibleSection","node_results_TableFull","node_results_TableEmpty","TableFull","showMore","toggleShowMore","fields","extraFields","splice","unshift","concat","firstCol","secondCol","linkUrl","linkText","_arr","_i","str","shortenUrl","properties","objectSpread","common","nodes","hetmechDefinitions","dynamic_field_DynamicField","rows","colSpan","buttons_TextButton","TableEmpty","MetapathResults","metapath_results_TableFull","metapath_results_TableEmpty","allChecked","sortColumn","sortUp","toggleAllChecked","checkAll","uncheckAll","allOthersUnchecked","toggleChecked","soloChecked","changeSort","updateAllChecked","preventDefault","newState","comparison","Number","isNaN","headers","table","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","row","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","header","makeMetapathsTable","sortedMetapaths","compareMetapaths","compareNumbers","reverse","metapathCount","metapathSelectedCount","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","TableContext","faDownload","faAngleLeft","faAngleRight","metapath_results_TableHead","metapath_results_TableBody","TableHead","extraRow","cols","buttons_Checkbox","metapath_results_TableHeadCell","buttonClass","fieldName","extraCols","TableHeadCell","metapath_results_SortButton","SortButton","faSortUp","faSortDown","faSort","TableBody","metapath_results_TableBodyRow","TableBodyRow","edges","path_count","metapath_results_TableBodyCell","fieldClass","metapath_metaedges","metapath_name","backgroundColor","adjusted_p_value","p_value","dwpc","dgp_source_degree","dgp_target_degree","dgp_n_dwpcs","dgp_n_nonzero_dwpcs","dgp_nonzero_mean","dgp_nonzero_sd","TableBodyCell","PathResults","path_results_TableFull","path_results_TableEmpty","allHighlighted","toggleAllHighlighted","highlightAll","unhighlightAll","allOthersUnhighlighted","toggleHighlighted","soloHighlighted","updateAllHighlighted","pathQuery","paths","thePath","comparePaths","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","highlighted","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_iterator24","path1","path2","JSON","stringify","node_ids","rel_ids","_iteratorNormalCompletion31","_didIteratorError31","_iteratorError31","_step31","_iterator31","_iteratorNormalCompletion32","_didIteratorError32","_iteratorError32","_step32","_iterator32","relationships","_iteratorNormalCompletion33","_didIteratorError33","_iteratorError33","_step33","_iterator33","toConsumableArray","_arr2","_i2","description","textDescription","assemblePath","_arr3","_i3","_arr4","_i4","_iteratorNormalCompletion34","_didIteratorError34","_iteratorError34","_step34","_iterator34","makePathsTable","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","_iteratorNormalCompletion26","_didIteratorError26","_iteratorError26","_step26","_iterator26","sortedPaths","_iteratorNormalCompletion27","_didIteratorError27","_iteratorError27","_step27","_iterator27","chipDescription","pathCount","pathSelectedCount","_iteratorNormalCompletion28","_didIteratorError28","_iteratorError28","_step28","_iterator28","pathHighlightedCount","_iteratorNormalCompletion29","_didIteratorError29","_iteratorError29","_step29","_iterator29","path_results_TableContext","path_results_TableHead","path_results_TableBody","buttons_EyeCheckbox","buttons_HighlighterCheckbox","path_results_TableHeadCell","path_results_SortButton","path_results_TableBodyRow","path_results_TableBodyCell","score","percent_of_DWPC","pathNodes","_iteratorNormalCompletion30","_didIteratorError30","_iteratorError30","_step30","_iterator30","pathEdges","edge","prevNode","directed","source_neo4j_id","neo4j_id","kind","assembledPath","shift","arrow","App","fetchDefinitions","updateNodesFromUrl","updateHistory","updateTitle","updatePaths","addEventListener","onNodeChange","onMetapathChange","promises","Promise","all","location","search","sourceNodeId","get","targetNodeId","path_counts","searchMetapaths","oldParams","newParams","origin","pathname","history","pushState","title","metapath_abbreviation","header_Header","node_search_NodeSearch","node_results_NodeResults","metapath_results_MetapathResults","path_results_PathResults","store","createStore","previousState","action","applyMiddleware","thunk","render","react_redux_es","app_App","getElementById"],"mappings":"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","file":"static/js/main.8c8d30c7.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"style\", null, \"\\n    #back_line,\\n    #front_line,\\n    #circle_1,\\n    #circle_2,\\n    #circle_3,\\n    #circle_4 {\\n      animation-duration: 1.5s;\\n      animation-timing-function: ease;\\n      animation-fill-mode: forwards;\\n    }\\n    #back_line {\\n      animation-name: draw_back_line;\\n    }\\n    @keyframes draw_back_line {\\n      0% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 60;\\n      }\\n      60% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 60;\\n      }\\n      100% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 0;\\n      }\\n    }\\n    #front_line {\\n      animation-name: draw_front_line;\\n    }\\n    @keyframes draw_front_line {\\n      0% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 158;\\n      }\\n      60% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 0;\\n      }\\n      100% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 0;\\n      }\\n    }\\n    #circle_1 {\\n      animation-name: draw_circle_1;\\n    }\\n    #circle_2 {\\n      animation-name: draw_circle_2;\\n    }\\n    #circle_3 {\\n      animation-name: draw_circle_3;\\n    }\\n    #circle_4 {\\n      animation-name: draw_circle_4;\\n    }\\n    @keyframes draw_circle_1 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      20% {\\n        transform: scale(0);\\n      }\\n      40% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_2 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      30% {\\n        transform: scale(0);\\n      }\\n      50% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_3 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      40% {\\n        transform: scale(0);\\n      }\\n      60% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_4 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      50% {\\n        transform: scale(0);\\n      }\\n      70% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n  \");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"back_line\",\n  stroke: \"#bdbdbd\",\n  strokeWidth: 5,\n  fill: \"none\",\n  d: \"       M 20 50       L 80 50     \"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"front_line\",\n  stroke: \"#424242\",\n  strokeWidth: 7.5,\n  fill: \"none\",\n  d: \"       M 0 50       L 20 50       L 40 75       L 60 25       L 80 50       L 100 50     \"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(20,50)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_1\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#02b3e4\"\n}));\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(40,75)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_2\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#c341d8\"\n}));\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(60,25)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_3\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#fa750f\"\n}));\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(80,50)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_4\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#e91e63\"\n}));\n\nvar SvgLogoAnimated = function SvgLogoAnimated(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogoAnimated, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo-animated.94624129.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Component } from 'react';\n\nimport { ReactComponent as Logo } from './logo-animated.svg';\n\n// page header display component\nexport class Header extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.showLogo = false;\n\n    // wait a bit for page to load before starting logo animation\n    window.setTimeout(() => this.setState({ showLogo: true }), 1000);\n  }\n\n  // display component\n  render() {\n    let logo;\n\n    if (this.state.showLogo)\n      logo = <Logo className='logo' />;\n    else\n      logo = <svg className='logo' />;\n    return (\n      <header>\n        {logo}\n        <h1>HETMECH</h1>\n        <h2>\n          A project of the{' '}\n          <a href='http://www.greenelab.com/'>Greene Laboratory</a>\n        </h2>\n      </header>\n    );\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50     \"\n});\n\nvar SvgArrowIconBoth = function SvgArrowIconBoth(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconBoth, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-both.5f01d574.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50       M 70 35       L 90 50       L 70 65     \"\n});\n\nvar SvgArrowIconForward = function SvgArrowIconForward(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconForward, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-forward.43aa27a1.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50       M 30 35       L 10 50       L 30 65     \"\n});\n\nvar SvgArrowIconBackward = function SvgArrowIconBackward(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconBackward, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-backward.c6a85500.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746       L 78.2842755245486 50       L 50 50     \"\n});\n\nvar SvgChipGene = function SvgChipGene(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipGene, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-gene.6afa0a5b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipCompound = function SvgChipCompound(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipCompound, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-compound.90909a37.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  clipPath: \"url(#clip)\",\n  d: \"         M 10 110         L 50 0         L 90 110         M 30 70         L 70 70       \"\n}));\n\nvar SvgChipAnatomy = function SvgChipAnatomy(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipAnatomy, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-anatomy.b055d214.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 25 10       L 50 10       A 40 40 0 0 1 50 90       L 25 90       Z     \"\n});\n\nvar SvgChipDisease = function SvgChipDisease(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipDisease, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-disease.1a26261b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 80 18       C 70 14 62 10 50 10       C 42 10 22 14 22 30       C 22 46 38 48.4 50 50       C 62 51.6 78 54 78 70       C 78 86 59 90 50 90       C 38 90 30 86 20 82     \"\n});\n\nvar SvgChipSymptom = function SvgChipSymptom(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipSymptom, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-symptom.2689ac77.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-42,0)\",\n  d: \"       M 80 18       C 70 14 62 10 50 10       C 42 10 22 14 22 30       C 22 46 38 48.4 50 50       C 62 51.6 78 54 78 70       C 78 86 59 90 50 90       C 38 90 30 86 20 82     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(42,0)\",\n  d: \"       M 75 10       L 25 10       L 25 90       L 75 90       M 30 50       L 65 50     \"\n});\n\nvar SvgChipSideEffect = function SvgChipSideEffect(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipSideEffect, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-side-effect.dbe94434.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-44,0)\",\n  d: \"       M 25 10       L 60 10       A 20 20 0 0 1 60 50       A 20 20 0 0 1 60 90       L 25 90       Z       M 30 50       L 60 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(44,0)\",\n  d: \"       M 25 90       L 25 10       L 60 10       A 20 20 0 0 1 60 50       L 30 50     \"\n});\n\nvar SvgChipBiologicalProcess = function SvgChipBiologicalProcess(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipBiologicalProcess, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-biological-process.979f4ab8.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-43,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(48,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipCellularComponent = function SvgChipCellularComponent(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipCellularComponent, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-cellular-component.b874e365.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  strokeLinejoin: \"bevel\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-40,0)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 10 90       L 10 -10       L 50 65       L 90 -10       L 90 90     \"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(60,0)\",\n  d: \"       M 75 10       L 25 10       L 25 90       M 30 50       L 65 50     \"\n});\n\nvar SvgChipMolecularFunction = function SvgChipMolecularFunction(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipMolecularFunction, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-molecular-function.787806a8.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-52,0)\",\n  d: \"     M 25 90     L 25 10     L 60 10     A 20 20 0 0 1 60 50     L 30 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  strokeLinejoin: \"bevel\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(45,0)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 10 -10       L 25 100       L 50 35       L 75 100       L 90 -10     \"\n});\n\nvar SvgChipPathway = function SvgChipPathway(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipPathway, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-pathway.543f179a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-50,0)\",\n  d: \"       M 25 90       L 25 10       L 60 10       A 20 20 0 0 1 60 50       L 30 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(48,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipPharmacologicClass = function SvgChipPharmacologicClass(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipPharmacologicClass, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-pharmacologic-class.b1fbdc49.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './chips.css';\n\nimport { ReactComponent as ArrowBoth } from './arrow-icon-both.svg';\nimport { ReactComponent as ArrowForward } from './arrow-icon-forward.svg';\nimport { ReactComponent as ArrowBackward } from './arrow-icon-backward.svg';\n\nimport { ReactComponent as Gene } from './chip-gene.svg';\nimport { ReactComponent as Compound } from './chip-compound.svg';\nimport { ReactComponent as Anatomy } from './chip-anatomy.svg';\nimport { ReactComponent as Disease } from './chip-disease.svg';\nimport { ReactComponent as Symptom } from './chip-symptom.svg';\nimport { ReactComponent as SideEffect } from './chip-side-effect.svg';\nimport { ReactComponent as BiologicalProcess } from './chip-biological-process.svg';\nimport { ReactComponent as CellularComponent } from './chip-cellular-component.svg';\nimport { ReactComponent as MolecularFunction } from './chip-molecular-function.svg';\nimport { ReactComponent as Pathway } from './chip-pathway.svg';\nimport { ReactComponent as PharmacologicClass } from './chip-pharmacologic-class.svg';\n\n// metanode 'chip' component\n// colored circle with abbreviation text in middle\n// eg (G) for 'gene'\nexport class MetanodeChip extends Component {\n  // display component\n  render() {\n    // get icon\n    let icon;\n    switch (this.props.type) {\n      case 'Gene':\n        icon = <Gene />;\n        break;\n      case 'Compound':\n        icon = <Compound />;\n        break;\n      case 'Anatomy':\n        icon = <Anatomy />;\n        break;\n      case 'Disease':\n        icon = <Disease />;\n        break;\n      case 'Symptom':\n        icon = <Symptom />;\n        break;\n      case 'Side Effect':\n        icon = <SideEffect />;\n        break;\n      case 'Biological Process':\n        icon = <BiologicalProcess />;\n        break;\n      case 'Cellular Component':\n        icon = <CellularComponent />;\n        break;\n      case 'Molecular Function':\n        icon = <MolecularFunction />;\n        break;\n      case 'Pathway':\n        icon = <Pathway />;\n        break;\n      case 'Pharmacologic Class':\n        icon = <PharmacologicClass />;\n        break;\n      default:\n        break;\n    }\n\n    let fillColor = '#424242';\n    let textColor = '#fafafa';\n    const style = this.props.hetioStyles[this.props.type];\n    if (style && style.fill_color)\n      fillColor = style.fill_color;\n    if (style && style.text_color)\n      textColor = style.text_color;\n\n    return (\n      <div className='metanode_chip' style={{ color: textColor }}>\n        <svg viewBox='0 0 100 100'>\n          <circle cx='50' cy='50' r='49' fill={fillColor} />\n        </svg>\n        {icon}\n      </div>\n    );\n  }\n}\n// connect component to global state\nMetanodeChip = connect((state) => ({\n  hetioStyles: state.hetioStyles\n}))(MetanodeChip);\n\n// metaedge 'chip' component\n// svg arrow with abbreviation text above\nexport class MetaedgeChip extends Component {\n  // display component\n  render() {\n    // get edge direction icon\n    let icon;\n    switch (this.props.direction) {\n      case 'backward':\n        icon = <ArrowBackward />;\n        break;\n      case 'forward':\n        icon = <ArrowForward />;\n        break;\n      default:\n        icon = <ArrowBoth />;\n        break;\n    }\n\n    let abbreviation = '';\n    if (this.props.metagraph.kind_to_abbrev)\n      abbreviation = this.props.metagraph.kind_to_abbrev[this.props.type];\n\n    return (\n      <div\n        className='metaedge_chip'\n        data-name={this.props.type}\n        data-abbreviation={abbreviation}\n      >\n        {icon}\n      </div>\n    );\n  }\n}\n// connect component to global state\nMetaedgeChip = connect((state) => ({\n  metagraph: state.metagraph\n}))(MetaedgeChip);\n\n// get html of metapath in form of visualization chips\nexport function metapathChips(edges) {\n  const path = edges.map((entry, index) => {\n    return (\n      <React.Fragment key={index}>\n        <MetanodeChip type={entry[0]} />\n        <MetaedgeChip type={entry[2]} direction={entry[3]} />\n        {index === edges.length - 1 && <MetanodeChip type={entry[1]} />}\n      </React.Fragment>\n    );\n  });\n\n  return path;\n}\n\n// get html of path in form of visualization chips\nexport function pathChips(path, expanded) {\n  return path.map((entry, index) => {\n    if (entry.element === 'node') {\n      return (\n        <NodeChip\n          key={index}\n          type={entry.type}\n          name={entry.name}\n          expanded={expanded}\n        />\n      );\n    }\n    if (entry.element === 'edge') {\n      return (\n        <MetaedgeChip\n          key={index}\n          type={entry.type}\n          direction={entry.direction}\n        />\n      );\n    }\n    return '';\n  });\n}\n\n// node 'chip' component\nexport class NodeChip extends Component {\n  // display component\n  render() {\n    let fillColor = '#424242';\n    let textColor = '#fafafa';\n    const style = this.props.hetioStyles[this.props.type];\n    if (style && style.fill_color)\n      fillColor = style.fill_color;\n    if (style && style.text_color)\n      textColor = style.text_color;\n\n    return (\n      <span\n        className='node_chip'\n        style={{ background: fillColor, color: textColor }}\n        data-expanded={this.props.expanded}\n      >\n        {this.props.name}\n      </span>\n    );\n  }\n}\n// connect component to global state\nNodeChip = connect((state) => ({\n  hetioStyles: state.hetioStyles\n}))(NodeChip);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Component } from 'react';\nimport Fade from '@material-ui/core/Fade';\n\nimport './tooltip.css';\n\n// open delay in ms\nconst delay = 1000;\n\n// tooltip (helper text) popup component\nexport class Tooltip extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.open = false;\n    this.state.x = 0;\n    this.state.y = 0;\n    this.state.opacity = 0;\n\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.openTooltip = this.openTooltip.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n  }\n\n  // when mouse enters target\n  onMouseEnter(event) {\n    const target = event.target;\n    // delay opening tooltip\n    window.setTimeout(() => this.openTooltip(target), delay);\n    // track hover state\n    this.setState({ hover: true });\n  }\n\n  // open tooltip\n  openTooltip(target) {\n    // if target not being hovered anymore, cancel open\n    // if target not specified, exit\n    if (!this.state.hover || !target) {\n      this.setState({ open: false });\n      return;\n    }\n\n    // get x/y position of target to pass to tooltip popup\n    const left =\n      target.getBoundingClientRect().left + document.documentElement.scrollLeft;\n    const top =\n      target.getBoundingClientRect().top + document.documentElement.scrollTop;\n\n    // avoid scrunching tooltip too skinny when close to right side of view\n    const x = Math.min(left, window.innerWidth - 200);\n    const y = top;\n\n    // open tooltip and update x/y position\n    this.setState({ open: true, x: x, y: y });\n  }\n\n  // when mouse leaves target\n  onMouseLeave() {\n    this.setState({ hover: false, open: false });\n  }\n\n  // display component\n  render() {\n    // if no specified text, skip attaching events and render\n    if (!this.props.text)\n      return <>{this.props.children}</>;\n\n    // mouse handler props to attach to children\n    const props = {\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave\n    };\n\n    // attach handler props to children\n    const children = React.Children.map(this.props.children, (element) => {\n      // if element is react element, create clone with attached props\n      if (React.isValidElement(element))\n        return React.cloneElement(element, props);\n      // if element is text node, wrap in span and attach props\n      else if (typeof element === 'string')\n        return <span {...props}>{element}</span>;\n      // otherwise, pass element through untouched\n      else\n        return element;\n    });\n\n    return (\n      <>\n        {children}\n        {this.state.open && (\n          <Popup\n            text={this.props.text}\n            open={this.state.open}\n            x={this.state.x}\n            y={this.state.y}\n          />\n        )}\n      </>\n    );\n  }\n}\n\n// popup component to display tooltip and text\n// make React 'portal' to append tooltip to body instead of parent\n// (allows tooltip to pop out of containing elements like tables)\nclass Popup extends Component {\n  render() {\n    return ReactDOM.createPortal(\n      <Fade in={this.props.open}>\n        <div\n          className='tooltip'\n          style={{\n            left: this.props.x + 'px',\n            top: this.props.y + 'px'\n          }}\n        >\n          {this.props.text}\n        </div>\n      </Fade>,\n      document.body\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faHighlighter } from '@fortawesome/free-solid-svg-icons';\n\nimport { Tooltip } from './tooltip.js';\nimport './buttons.css';\n\n// button component\nexport class Button extends Component {\n  // display component\n  render() {\n    return (\n      <Tooltip text={this.props.tooltipText}>\n        <button\n          className={this.props.className}\n          onClick={(event) => {\n            if (event.ctrlKey) {\n              if (this.props.onCtrlClick)\n                this.props.onCtrlClick();\n            } else if (event.shiftKey) {\n              if (this.props.onShiftClick)\n                this.props.onShiftClick();\n            } else if (this.props.onClick)\n              this.props.onClick();\n          }}\n        >\n          {this.props.children}\n        </button>\n      </Tooltip>\n    );\n  }\n}\n\n// text button component\n// link colored button with text and icon to right\nexport class TextButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='text_button small'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.text}\n        <FontAwesomeIcon icon={this.props.icon} className='text_button_icon' />\n      </Button>\n    );\n  }\n}\n\n// checkbox button component\nexport class Checkbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faCheck} />\n        )}\n      </Button>\n    );\n  }\n}\n\n// eye checkbox button component\nexport class EyeCheckbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faEye} />\n        )}\n      </Button>\n    );\n  }\n}\n\n// highlighter checkbox button component\nexport class HighlighterCheckbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faHighlighter} />\n        )}\n      </Button>\n    );\n  }\n}\n","// url for hetmech specific definitions (path count, p value, dwpc, etc)\nimport hetmechDefinitions from './definitions.json';\n// url for metagraph (node and edge metatypes and abbreviations)\nconst metagraphUrl =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/hetnet/json/hetionet-v1.0-metagraph.json';\n// url for hetio definitions (metanodes, properties, etc)\nconst hetioDefinitions =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/describe/definitions.json';\n// url for hetio styles (metanode fill/text color, etc)\nconst hetioStyles =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/describe/styles.json';\n// url for node search\nconst nodeSearchServer = 'https://search-api.het.io/v1/nodes/';\n// url for metapaths search\nconst metapathSearchServer = 'https://search-api.het.io/v1/query-metapaths/';\n// url for paths search\nconst pathSearchServer = 'https://search-api.het.io/v1/query-paths/';\n\n// get resource at url and parse as json\nexport function fetchJson(url) {\n  return fetch(url)\n    .then((response) => response.json())\n    .then((results) => {\n      return results || {};\n    })\n    .catch((error) => {\n      console.log(error);\n      return {};\n    });\n}\n\n// get metagraph\nexport function getMetagraph() {\n  return fetchJson(metagraphUrl);\n}\n\n// get hetio definitions\nexport function getHetioDefinitions() {\n  return fetchJson(hetioDefinitions);\n}\n\n// get hetio styles\nexport function getHetioStyles() {\n  return fetchJson(hetioStyles);\n}\n\n// get hetmech definitions\nexport function getHetmechDefinitions() {\n  return hetmechDefinitions;\n}\n\n// lookup node by id\nexport function lookupNodeById(id) {\n  if (!id)\n    return null;\n  const query = nodeSearchServer + id;\n  return fetchJson(query);\n}\n\n// search for nodes by string, and with metatype filter list\n// accepts comma-separated list of abbreviations of metatypes to include\nexport function searchNodes(searchString, metatypes) {\n  const params = new URLSearchParams();\n  params.set('search', searchString);\n  params.set('limit', '100');\n  if (metatypes)\n    params.set('metanodes', metatypes);\n  const query = nodeSearchServer + '?' + params.toString();\n  return fetchJson(query).then((data) => {\n    return data.results;\n  });\n}\n\n// search for metapaths by source/target id\nexport function searchMetapaths(sourceId, targetId) {\n  const params = new URLSearchParams();\n  params.set('source', sourceId);\n  params.set('target', targetId);\n  const query = metapathSearchServer + '?' + params.toString();\n  return fetchJson(query).then((results) => {\n    return results.path_counts;\n  });\n}\n\n// search for paths by metapaths\nexport function searchPaths(sourceId, targetId, metapath) {\n  const params = new URLSearchParams();\n  params.set('source', sourceId);\n  params.set('target', targetId);\n  params.set('metapath', metapath);\n  const query = pathSearchServer + '?' + params.toString();\n  return fetchJson(query).then((results) => {\n    return results;\n  });\n}\n","// actions to update global state variables\n\n// set definitions\nexport function setDefinitions({\n  metagraph,\n  hetioDefinitions,\n  hetioStyles,\n  hetmechDefinitions\n}) {\n  return {\n    type: 'set_definitions',\n    payload: {\n      metagraph: metagraph,\n      hetioDefinitions: hetioDefinitions,\n      hetioStyles: hetioStyles,\n      hetmechDefinitions: hetmechDefinitions\n    }\n  };\n}\n\n// update source and/or target node\nexport function updateSourceTargetNodes({ sourceNode, targetNode }) {\n  return {\n    type: 'update_source_target_nodes',\n    payload: { sourceNode: sourceNode, targetNode: targetNode }\n  };\n}\n\n// swap source/target node\nexport function swapSourceTargetNodes() {\n  return {\n    type: 'swap_source_target_nodes'\n  };\n}\n\n// update metapaths\nexport function updateMetapaths({ metapaths }) {\n  return {\n    type: 'update_metapaths',\n    payload: { metapaths: metapaths }\n  };\n}\n\n// update path queries\nexport function updatePathQueries({ pathQueries }) {\n  return {\n    type: 'update_path_queries',\n    payload: { pathQueries: pathQueries }\n  };\n}\n","import React from 'react';\n\n// get html of number in exponential form\nexport function toExponential(number) {\n  number = parseFloat(number).toExponential(1);\n  const mantissa = parseFloat(number.split('e')[0]).toFixed(1);\n  const exponent = parseInt(number.split('e')[1]);\n  return (\n    <span>\n      {mantissa} &times; 10<sup>{exponent}</sup>\n    </span>\n  );\n}\n\n// get html of number in regular form, rounded to 1 decimal digit\nexport function toFixed(number) {\n  return <span>{parseFloat(number).toFixed(1)}</span>;\n}\n\n// map number to css color (rgba or hex) based on specified gradient\nexport function toGradient(number) {\n  // pretty gradient\n  let gradient = [\n    'rgba(255, 255, 255, 0)',\n    'rgba(255, 249, 196, 1)',\n    'rgba(255, 236, 179, 1)',\n    'rgba(255, 224, 178, 1)',\n    'rgba(255, 204, 188, 1)',\n    'rgba(248, 187, 208, 1)'\n  ];\n\n  // split each gradient color into component rgba values\n  gradient = gradient.map((color) => {\n    color = color.split(/[^0-9,]/).join('');\n    color = {\n      r: parseInt(color.split(',')[0]),\n      g: parseInt(color.split(',')[1]),\n      b: parseInt(color.split(',')[2]),\n      a: parseFloat(color.split(',')[3])\n    };\n    return color;\n  });\n\n  // take log of number\n  // (equivalent of getting exponent of number in exponential notation)\n  number = Math.log10(number);\n\n  // start/end cutoffs for exponent\n  const rangeStart = 0;\n  const rangeEnd = -8;\n\n  // get percent that number is through range\n  let percent = (number - rangeStart) / (rangeEnd - rangeStart);\n  percent = Math.min(Math.max(0, percent), 1);\n\n  // map percent to float gradient index\n  const gradientIndex = (gradient.length - 1) * percent;\n  // get integer indices below/above float index\n  const lowerColor = gradient[Math.floor(gradientIndex)];\n  const higherColor = gradient[Math.ceil(gradientIndex)];\n  // get percent that float index is between nearest integer indices\n  const percentBetween = gradientIndex % 1;\n\n  // interpolate color between gradient colors below/above float index\n  let color = {\n    r: lowerColor.r + (higherColor.r - lowerColor.r) * percentBetween,\n    g: lowerColor.g + (higherColor.g - lowerColor.g) * percentBetween,\n    b: lowerColor.b + (higherColor.b - lowerColor.b) * percentBetween,\n    a: lowerColor.a + (higherColor.a - lowerColor.a) * percentBetween\n  };\n\n  // clean rgba values\n  color.r = Math.floor(color.r);\n  color.g = Math.floor(color.g);\n  color.b = Math.floor(color.b);\n  color.a = color.a.toFixed(3);\n\n  // convert color in rgba format to css color string\n  color =\n    'rgba(' + color.r + ', ' + color.g + ', ' + color.b + ', ' + color.a + ')';\n\n  // return color\n  return color || '#ffffff';\n}\n\n// downloads provided data as csv file\n// data in format [ [A1, B1] , [A2, B2] ]\nexport function downloadCsv(data, filename) {\n  const fileContent = data.map((cell) => cell.join(',')).join('\\n');\n  const blob = new Blob([fileContent], { type: 'text/csv' });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  document.body.appendChild(link);\n  link.href = url;\n  link.download = (filename || 'data') + '.csv';\n  link.click();\n  window.URL.revokeObjectURL(url);\n  link.remove();\n}\n\n// make OS-friendly filename\nexport function makeFilenameFriendly(string) {\n  // remove leading and trailing whitespace\n  string = string.trim();\n  // replace special characters with dashes\n  string = string.replace(/[^0-9A-Za-z]/gi, '-');\n  // shorten if too long\n  string = string.substring(0, 15);\n  return string;\n}\n\n// downloads provided data as svg file\nexport function downloadSvg(data, filename) {\n  const fileContent = new XMLSerializer().serializeToString(data);\n  const blob = new Blob([fileContent], { type: 'image/svg+xml' });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  document.body.appendChild(link);\n  link.href = url;\n  link.download = (filename || 'data') + '.svg';\n  link.click();\n  window.URL.revokeObjectURL(url);\n  link.remove();\n}\n\n// show debug message on screen\n// useful for mobile debugging where no dev console available\nexport function debug(...args) {\n  let div = document.getElementById('_debug');\n  if (!div) {\n    div = document.createElement('div');\n    div.id = '_debug';\n    div.style.position = 'fixed';\n    div.style.left = 0;\n    div.style.top = 0;\n    div.style.background = 'rgba(255, 255, 255, 0.75)';\n    div.style.fontFamily = 'monospace';\n    div.style.fontSize = '10px';\n    div.style.color = '#ff00ff';\n    div.style.zIndex = 99999;\n    document.body.appendChild(div);\n  }\n  div.innerHTML += args.join(' | ');\n  div.innerHTML += '<br>';\n}\n\n// sort array in custom order\nexport function sortCustom(array, order, key) {\n  return array.sort((a, b) => {\n    if (key) {\n      a = a[key];\n      b = b[key];\n    }\n\n    a = order.indexOf(a);\n    b = order.indexOf(b);\n\n    if (a !== -1 && b !== -1)\n      return a - b;\n    else if (a !== -1)\n      return -1;\n    else if (b !== -1)\n      return 1;\n    else\n      return b - a;\n  });\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Downshift from 'downshift';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport { MetanodeChip } from './chips.js';\nimport { Tooltip } from './tooltip.js';\nimport { Button } from './buttons.js';\nimport { searchNodes } from './backend-query.js';\nimport { updateSourceTargetNodes } from './actions.js';\nimport { swapSourceTargetNodes } from './actions.js';\nimport { sortCustom } from './util.js';\nimport './node-search.css';\n\n// node search section component\n// target and source node search boxes and swap button\nexport class NodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.filters = [];\n    this.state.filterString = '';\n\n    this.updateFilters = this.updateFilters.bind(this);\n  }\n\n  // get filter state from filter child component\n  updateFilters(filters, filterString) {\n    this.setState({ filters: filters, filterString: filterString });\n  }\n\n  // display component\n  render() {\n    return (\n      <section className='center'>\n        <NodeSearchContext.Provider\n          value={{\n            filterString: this.state.filterString\n          }}\n        >\n          <Filters\n            filters={this.state.filters}\n            filterString={this.state.filterString}\n            updateFilters={this.updateFilters}\n          />\n          <SourceNodeSearch />\n          <SwapButton />\n          <TargetNodeSearch />\n        </NodeSearchContext.Provider>\n      </section>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst NodeSearchContext = React.createContext({});\n\n// filter filter component\n// toggle buttons to specify which types of nodes to limit search to\nclass Filters extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.solo = this.solo.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.metagraph.metanode_kinds === this.props.metagraph.metanode_kinds\n    )\n      return;\n\n    // initialize filters\n    let filters = [];\n    const filterString = '';\n\n    for (const filter of this.props.metagraph.metanode_kinds)\n      filters.push({ name: filter, active: true });\n\n    // display filters in custom order\n    const order = [\n      'Gene',\n      'Compound',\n      'Anatomy',\n      'Disease',\n      'Symptom',\n      'Side Effect',\n      'Biological Process',\n      'Cellular Component',\n      'Molecular Function',\n      'Pathway',\n      'Pharmacolocic Class'\n    ];\n    filters = sortCustom(filters, order, 'name');\n\n    this.props.updateFilters(filters, filterString);\n  }\n\n  // checks whether all filters are active\n  allOn(filters) {\n    for (const filter of filters) {\n      if (!filter.active)\n        return false;\n    }\n\n    return true;\n  }\n\n  // checks whether all filters besides the specified filter are off\n  allOthersOff(filters, type) {\n    for (const filter of filters) {\n      if (type !== filter.name && filter.active)\n        return false;\n    }\n\n    return true;\n  }\n\n  // toggles the specified filters on/off\n  toggle(type) {\n    const filters = this.props.filters.slice();\n\n    for (const filter of filters) {\n      if (filter.name === type)\n        filter.active = !filter.active;\n    }\n\n    this.props.updateFilters(filters, this.toString(filters));\n  }\n\n  // solo filter (turn all others off)\n  solo(type) {\n    const filters = this.props.filters.slice();\n    const allOthersOff = this.allOthersOff(filters, type);\n\n    for (const filter of filters) {\n      if (allOthersOff)\n        filter.active = true;\n      else {\n        if (type === filter.name)\n          filter.active = true;\n        else\n          filter.active = false;\n      }\n    }\n\n    this.props.updateFilters(filters, this.toString(filters));\n  }\n\n  // turn state of filters into string query list of metanode metagraph\n  toString(filters) {\n    if (this.allOn(filters))\n      return '';\n\n    const list = [];\n    for (const filter of filters) {\n      if (filter.active)\n        list.push(this.props.metagraph.kind_to_abbrev[filter.name]);\n    }\n\n    return list.join(',');\n  }\n\n  // display component\n  render() {\n    // make list of filter buttons\n    const buttons = this.props.filters.map((filter, index) => (\n      <FilterButton\n        key={index}\n        name={filter.name}\n        tooltipText={this.props.hetioDefinitions.metanodes[filter.name]}\n        active={filter.active}\n        toggle={this.toggle}\n        solo={this.solo}\n      />\n    ));\n\n    return <>{buttons}</>;\n  }\n}\n// connect component to global state\nFilters = connect((state) => ({\n  metagraph: state.metagraph,\n  hetioDefinitions: state.hetioDefinitions\n}))(Filters);\n\n// filter button component\nclass FilterButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className={\n          'node_search_filter_button' +\n          (this.props.active ? '' : ' node_search_filter_button_off')\n        }\n        tooltipText={this.props.tooltipText}\n        onClick={() => this.props.toggle(this.props.name)}\n        onCtrlClick={() => this.props.solo(this.props.name)}\n      >\n        <MetanodeChip type={this.props.name} />\n        {this.props.name}\n      </Button>\n    );\n  }\n}\n\n// source node search box component\nclass SourceNodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  // when user makes a new node selection\n  onChange(value) {\n    this.props.dispatch(updateSourceTargetNodes({ sourceNode: value }));\n  }\n\n  // display component\n  render() {\n    return (\n      <SearchBox\n        label='Source Node'\n        tooltipText='The starting node of the paths'\n        value={this.props.node}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n// connect component to global state\nSourceNodeSearch = connect((state) => ({\n  node: state.sourceNode\n}))(SourceNodeSearch);\n\n// source node search box component\nclass TargetNodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  // when user makes a new node selection\n  onChange(value) {\n    this.props.dispatch(updateSourceTargetNodes({ targetNode: value }));\n    if (value)\n      document.activeElement.blur();\n  }\n\n  // display component\n  render() {\n    return (\n      <SearchBox\n        label='Target Node'\n        tooltipText='The ending node of the paths'\n        value={this.props.node}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n// connect component to global state\nTargetNodeSearch = connect((state) => ({\n  node: state.targetNode\n}))(TargetNodeSearch);\n\n// search box component with dropdown autocomplete/autosuggest\nclass SearchBox extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.searchResults = [];\n\n    this.inputRef = React.createRef();\n    this.formRef = React.createRef();\n\n    this.onInput = this.onInput.bind(this);\n  }\n\n  // when user types into or modifies text in text box\n  onInput(searchString) {\n    searchNodes(searchString, this.context.filterString).then((results) =>\n      this.setState({ searchResults: results || [] })\n    );\n  }\n\n  // convert result/selection item to string to display in text box\n  itemToString(item) {\n    if (item && item.name)\n      return item.name;\n    else\n      return '';\n  }\n\n  // display component\n  render() {\n    return (\n      <Downshift\n        onChange={this.props.onChange}\n        onInputValueChange={this.onInput}\n        itemToString={this.itemToString}\n        selectedItem={this.props.value}\n      >\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          isOpen,\n          selectedItem,\n          highlightedIndex,\n          clearSelection\n        }) => (\n          <div className='node_search_form' ref={this.formRef}>\n            <span className='small light node_search_form_label'>\n              <Tooltip text={this.props.tooltipText}>\n                {this.props.label}\n              </Tooltip>\n            </span>\n            <TextBox\n              inputRef={this.inputRef}\n              getInputProps={getInputProps}\n              clearSelection={clearSelection}\n              selectedItem={selectedItem}\n            />\n            <Dropdown\n              isOpen={isOpen}\n              inputRef={this.inputRef}\n              formRef={this.formRef}\n              getMenuProps={getMenuProps}\n              searchResults={this.state.searchResults}\n              selectedItem={selectedItem}\n              highlightedIndex={highlightedIndex}\n              getItemProps={getItemProps}\n            />\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n// connect component to context component\nSearchBox.contextType = NodeSearchContext;\n\n// text box sub-component of search box component\nclass TextBox extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.focused = false;\n\n    this.onInput = this.onInput.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  // when user types into text box\n  onInput(event) {\n    if (event.target.value === '')\n      this.props.clearSelection();\n  }\n\n  // when user focuses text box\n  onFocus() {\n    this.setState({ focused: true });\n  }\n\n  // when user unfocuses text box\n  onBlur() {\n    this.setState({ focused: false });\n  }\n\n  // display component\n  render() {\n    let overlay = <></>;\n\n    const showOverlay =\n      !this.state.focused &&\n      this.props.selectedItem.metanode &&\n      this.props.selectedItem.name;\n\n    if (showOverlay) {\n      overlay = (\n        <div className='node_search_field_overlay'>\n          <MetanodeChip type={this.props.selectedItem.metanode} />\n          <span className='node_search_results_item_name nowrap'>\n            {this.props.selectedItem.name}\n          </span>\n        </div>\n      );\n    }\n    return (\n      <>\n        <TextField\n          {...this.props.getInputProps({\n            onChange: this.onInput\n          })}\n          inputRef={this.props.inputRef}\n          placeholder='id, name, or metanode'\n          classes={{ root: 'node_search_field_container' }}\n          InputProps={{\n            classes: {\n              root: 'node_search_field',\n              focused: 'node_search_field_focused',\n              input: showOverlay\n                ? 'node_search_input_blank'\n                : 'node_search_input'\n            }\n          }}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n        />\n        {overlay}\n        <div className='node_search_icon'>\n          <FontAwesomeIcon icon={faSearch} />\n        </div>\n      </>\n    );\n  }\n}\n\n// dropdown sub-component of search box component\nclass Dropdown extends Component {\n  // display component\n  render() {\n    return (\n      <Popper\n        open={this.props.isOpen}\n        anchorEl={this.props.inputRef.current}\n        placement='bottom-start'\n        className='node_search_results_popper'\n        container={this.props.formRef.current}\n        disablePortal={true}\n        {...this.props.getMenuProps()}\n      >\n        <Paper className='node_search_results_paper'>\n          {this.props.searchResults.map((result, index) => (\n            <MenuItem\n              className={\n                'node_search_results_item' +\n                (this.props.selectedItem.id === result.id\n                  ? ' node_search_results_item_selected'\n                  : '') +\n                (this.props.highlightedIndex === index\n                  ? ' node_search_results_item_selected'\n                  : '')\n              }\n              {...this.props.getItemProps({\n                item: result,\n                key: index\n              })}\n            >\n              <MetanodeChip type={result.metanode} />\n              <span className='node_search_results_item_name'>\n                {result.name}\n              </span>\n              <span className='node_search_results_item_identifier'>\n                {result.identifier}\n              </span>\n            </MenuItem>\n          ))}\n        </Paper>\n      </Popper>\n    );\n  }\n}\n\n// swap button component\n// switches source/target node\nclass SwapButton extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  // when user clicks button\n  onClick() {\n    this.props.dispatch(swapSourceTargetNodes());\n  }\n\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText='Swap source and target node'\n        className='node_search_swap_button'\n        onClick={this.onClick}\n      >\n        <FontAwesomeIcon icon={faExchangeAlt} />\n      </Button>\n    );\n  }\n}\n// connect component to global state\nSwapButton = connect()(SwapButton);\n","import React from 'react';\nimport { Component } from 'react';\n\nimport './dynamic-field.css';\n\n// expandable textbox-like component, similar to excel spreadsheet cell\n// when focused, field expands and prop 'fullValue' displayed,\n// otherwise, prop 'value' displayed (often 'fullValue' rounded off)\nexport class DynamicField extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.focused = false;\n    this.field = React.createRef();\n\n    this.onClick = this.onClick.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n  }\n\n  // when field is clicked or touched\n  onClick(event) {\n    // force click on link in field if link was target of click\n    if (event && event.target && event.target.tagName.toLowerCase() === 'a')\n      event.target.click();\n    // force focus on field\n    this.field.current.focus();\n  }\n\n  // when field loses focus\n  onBlur() {\n    this.setState({ focused: false }, this.deselectAll);\n  }\n\n  // when field is focused (tabbed to, clicked, etc)\n  onFocus() {\n    this.setState({ focused: true }, this.selectAll);\n  }\n\n  // deselect any selected text in window\n  deselectAll() {\n    window.getSelection().empty();\n  }\n\n  // select contents of field\n  selectAll() {\n    // set delay for select to make sure component has rendered\n    window.setTimeout(function() {\n      window.getSelection().empty();\n      window.getSelection().selectAllChildren(document.activeElement);\n    }, 10);\n  }\n\n  // display component\n  render() {\n    let displayValue;\n\n    // show full value if focused, or short value if not\n    if (this.state.focused)\n      displayValue = this.props.fullValue || this.props.value;\n    else\n      displayValue = this.props.value;\n\n    // if value just text, set 'nowrap' to truncate with ellipsis\n    if (typeof displayValue === 'string')\n      displayValue = <span className='nowrap'>{displayValue}</span>;\n\n    return (\n      <div\n        ref={this.field}\n        tabIndex='0'\n        onClick={this.onClick}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        className={'dynamic_field ' + (this.props.className || '')}\n        data-expanded={this.state.focused}\n      >\n        {displayValue}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { Button } from './buttons.js';\nimport './collapsible-section.css';\n\n// accordion (collapse/expand) section component\nexport class CollapsibleSection extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.collapsed = false;\n\n    this.loadState = this.loadState.bind(this);\n    this.saveState = this.saveState.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  // when component mounts\n  componentDidMount() {\n    if (this.loadState())\n      this.setState({ collapsed: true });\n  }\n\n  // load collapsed state from local storage if exists\n  loadState() {\n    const key = this.props.label;\n    return key && window.localStorage.getItem(key) === 'true';\n  }\n\n  // save collapse state to local storage\n  saveState(collapsed) {\n    const key = this.props.label;\n    if (key)\n      window.localStorage.setItem(key, String(String(collapsed) === 'true'));\n  }\n\n  // toggle collapse/expand\n  toggle() {\n    this.setState({ collapsed: !this.state.collapsed });\n    this.saveState(!this.state.collapsed);\n  }\n\n  // display component\n  render() {\n    return (\n      <div\n        className='collapsible_section'\n        data-collapsed={this.state.collapsed}\n      >\n        <Button\n          tooltipText={this.props.tooltipText}\n          className='collapsible_section_header'\n          onClick={this.toggle}\n        >\n          <div>{this.props.label}</div>\n          <FontAwesomeIcon\n            icon={this.state.collapsed ? faAngleUp : faAngleDown}\n          />\n        </Button>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { MetanodeChip } from './chips.js';\nimport { Tooltip } from './tooltip.js';\nimport { TextButton } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { CollapsibleSection } from './collapsible-section.js';\n\n// node results section component\n// details about source/target nodes\nexport class NodeResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <NodeCard label='Source Node' node={this.props.sourceNode} />\n        <NodeCard label='Target Node' node={this.props.targetNode} />\n      </section>\n    );\n  }\n}\n// connect component to global state\nNodeResults = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode\n}))(NodeResults);\n\n// node 'card' component\n// displays details about source/target node\nclass NodeCard extends Component {\n  // display component\n  render() {\n    return (\n      <CollapsibleSection\n        label={this.props.label}\n        tooltipText={'Details about the ' + this.props.label.toLowerCase()}\n      >\n        {this.props.node.name ? (\n          <TableFull node={this.props.node} />\n        ) : (\n          <TableEmpty label={this.props.label} />\n        )}\n      </CollapsibleSection>\n    );\n  }\n}\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.showMore = false;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n  }\n\n  // toggle show/hide extra fields\n  toggleShowMore() {\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // display row entries\n  rows() {\n    // explicitly specify and order primary fields\n    let fields = ['name', 'metanode', 'identifier', 'source'];\n\n    if (this.state.showMore) {\n      // get 'extra fields' from node 'data' field\n      let extraFields = Object.keys(this.props.node.data);\n      // remove unnecessary fields\n      extraFields.splice(extraFields.indexOf('source'), 1);\n      extraFields.splice(extraFields.indexOf('url'), 1);\n      // sort extra fields alphabetically\n      extraFields = extraFields.sort();\n      // add 'id' to beginning of extra fields\n      extraFields.unshift('id');\n      // append 'extraFields' to primary 'fields'\n      fields = fields.concat(extraFields);\n    }\n\n    // determine contents of first and second column for each row entry\n    return fields.map((field, index) => {\n      // set first col to field name\n      const firstCol = field;\n      // default second col to field value in node\n      let secondCol = this.props.node[field];\n      if (secondCol === undefined)\n        secondCol = this.props.node.data[field];\n      if (secondCol === undefined)\n        secondCol = '';\n\n      // handle special field cases\n      if (field === 'metanode') {\n        // make text with metanode chip\n        secondCol = (\n          <>\n            <MetanodeChip type={this.props.node[field]} />\n            <span className='nowrap'>{this.props.node[field]}</span>\n          </>\n        );\n      } else if (field === 'source') {\n        // make link\n        const linkUrl = this.props.node.url || this.props.node.data.url || '';\n        let linkText = this.props.node.data.source || linkUrl;\n        linkText = shortenUrl(linkText);\n        secondCol = (\n          <a className='nowrap' href={linkUrl}>\n            {linkText}\n          </a>\n        );\n      }\n\n      // helper text when user hovers over given field\n      let tooltipText = {};\n      if (this.props.hetioDefinitions.properties) {\n        tooltipText = {\n          ...tooltipText,\n          ...this.props.hetioDefinitions.properties.common,\n          ...this.props.hetioDefinitions.properties.nodes\n        };\n      }\n      tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n      // return row entry\n      return (\n        <tr key={index}>\n          <td className='col_s small light left'>\n            <Tooltip text={tooltipText[field]}>{firstCol}</Tooltip>\n          </td>\n          <td>\n            <DynamicField value={secondCol} className='left' />\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  // display component\n  render() {\n    return (\n      <table className='node_results_table'>\n        <tbody>\n          {this.rows()}\n          <tr>\n            <td className='center' colSpan='2'>\n              <TextButton\n                text={this.state.showMore ? 'show less ' : 'show more '}\n                icon={this.state.showMore ? faAngleUp : faAngleDown}\n                className='link_button small'\n                onClick={this.toggleShowMore}\n                tooltipText='Show more information about the node'\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n// connect component to global state\nTableFull = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableFull);\n\n// table with no results component\nclass TableEmpty extends Component {\n  render() {\n    return (\n      <table className='node_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>\n              select a {this.props.label.toLowerCase()}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// remove unnecessary preceding 'www.' and etc from url\nfunction shortenUrl(url) {\n  const remove = ['http://', 'https://', 'www.'];\n  for (const str of remove)\n    url = url.replace(str, '');\n\n  return url;\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { metapathChips } from './chips.js';\nimport { Button } from './buttons.js';\nimport { TextButton } from './buttons.js';\nimport { Checkbox } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { makeFilenameFriendly } from './util.js';\nimport { downloadCsv } from './util.js';\nimport { toFixed } from './util.js';\nimport { toExponential } from './util.js';\nimport { toGradient } from './util.js';\nimport { sortCustom } from './util.js';\nimport { updateMetapaths } from './actions.js';\nimport './metapath-results.css';\n\n// path results section component\nexport class MetapathResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <CollapsibleSection\n          label='Metapaths'\n          tooltipText='Metapaths of length <= 3 between the source and target node'\n        >\n          {this.props.metapaths.length > 0 ? <TableFull /> : <TableEmpty />}\n        </CollapsibleSection>\n      </section>\n    );\n  }\n}\n// connect component to global state\nMetapathResults = connect((state) => ({\n  metapaths: state.metapaths\n}))(MetapathResults);\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.showMore = false;\n    this.state.allChecked = false;\n    this.state.sortColumn = 'adjusted_p_value';\n    this.state.sortUp = false;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n    this.toggleAllChecked = this.toggleAllChecked.bind(this);\n    this.allChecked = this.allChecked.bind(this);\n    this.checkAll = this.checkAll.bind(this);\n    this.uncheckAll = this.uncheckAll.bind(this);\n    this.allOthersUnchecked = this.allOthersUnchecked.bind(this);\n    this.toggleChecked = this.toggleChecked.bind(this);\n    this.soloChecked = this.soloChecked.bind(this);\n    this.changeSort = this.changeSort.bind(this);\n    this.downloadCsv = this.downloadCsv.bind(this);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (this.props.metapaths !== prevProps.metapaths)\n      this.updateAllChecked();\n  }\n\n  // checks if all rows checked and updates state\n  updateAllChecked() {\n    if (this.allChecked())\n      this.setState({ allChecked: true });\n    else\n      this.setState({ allChecked: false });\n  }\n\n  // toggle show more/less\n  toggleShowMore(event) {\n    if (event)\n      event.preventDefault();\n\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // toggle check/uncheck all\n  toggleAllChecked() {\n    if (this.allChecked())\n      this.uncheckAll();\n    else\n      this.checkAll();\n  }\n\n  // checks whether all metapaths are checked\n  allChecked() {\n    for (const metapath of this.props.metapaths) {\n      if (!metapath.checked)\n        return false;\n    }\n\n    return true;\n  }\n\n  // makes all metapaths checked\n  checkAll() {\n    const metapaths = this.props.metapaths.slice();\n\n    for (const metapath of this.props.metapaths)\n      metapath.checked = true;\n\n    this.props.dispatch(updateMetapaths({ metapaths: metapaths }));\n  }\n\n  // makes all metapaths unchecked\n  uncheckAll() {\n    const metapaths = this.props.metapaths.slice();\n\n    for (const metapath of this.props.metapaths)\n      metapath.checked = false;\n\n    this.props.dispatch(updateMetapaths({ metapaths: metapaths }));\n  }\n\n  // checks whether all metapaths besides the specified are unchecked\n  allOthersUnchecked(id) {\n    for (const metapath of this.props.metapaths) {\n      if (id !== metapath.id && metapath.checked)\n        return false;\n    }\n\n    return true;\n  }\n\n  // toggles the specified metapaths on/off\n  toggleChecked(id) {\n    const metapaths = this.props.metapaths.slice();\n\n    for (const metapath of metapaths) {\n      if (metapath.id === id)\n        metapath.checked = !metapath.checked;\n    }\n\n    this.props.dispatch(updateMetapaths({ metapaths: metapaths }));\n  }\n\n  // solo metapath (turn all others off)\n  soloChecked(id) {\n    const metapaths = this.props.metapaths.slice();\n    const allOthersUnchecked = this.allOthersUnchecked(id);\n\n    for (const metapath of metapaths) {\n      if (allOthersUnchecked || id === metapath.id)\n        metapath.checked = true;\n      else\n        metapath.checked = false;\n    }\n\n    this.props.dispatch(updateMetapaths({ metapaths: metapaths }));\n  }\n\n  // change which column table is sorted by\n  changeSort(sortColumn) {\n    const newState = {};\n    newState.sortColumn = sortColumn;\n\n    if (sortColumn === this.state.sortColumn)\n      newState.sortUp = !this.state.sortUp;\n    else\n      newState.sortUp = true;\n\n    this.setState(newState);\n  }\n\n  // compare numbers (for sorting)\n  compareNumbers(a, b, key) {\n    // parse as numbers\n    const comparison = Number(a[key]) - Number(b[key]);\n    if (!Number.isNaN(comparison))\n      return comparison;\n\n    // otherwise parse as strings and compare alphabetically\n    if (a[key] < b[key])\n      return -1;\n    else if (a[key] > b[key])\n      return 1;\n    else\n      return 0;\n  }\n\n  // compare metapaths (for sorting)\n  compareMetapaths(a, b, key) {\n    a = a[key];\n    b = b[key];\n    // first by length\n    if (a.length < b.length)\n      return -1;\n    else if (a.length > b.length)\n      return 1;\n    else {\n      // then alphabetically\n      if (a < b)\n        return -1;\n      else if (a > b)\n        return 1;\n      else\n        return 0;\n    }\n  }\n\n  // download table data as .csv file\n  downloadCsv() {\n    if (\n      !this.props.metapaths.length ||\n      !this.props.sourceNode.name ||\n      !this.props.targetNode.name\n    )\n      return;\n\n    const tableData = makeMetapathsTable(this.props.metapaths);\n    const filename = [\n      'metapaths',\n      makeFilenameFriendly(this.props.sourceNode.name),\n      makeFilenameFriendly(this.props.targetNode.name)\n    ].join('_');\n    downloadCsv(tableData, filename);\n  }\n\n  // display component\n  render() {\n    // sort metapaths by specified column\n    const sortedMetapaths = this.props.metapaths;\n    const sortColumn = this.state.sortColumn;\n\n    // sort by appropriate field\n    if (sortColumn === 'metapath_metaedges')\n      sortedMetapaths.sort((a, b) => this.compareMetapaths(a, b, sortColumn));\n    else\n      sortedMetapaths.sort((a, b) => this.compareNumbers(a, b, sortColumn));\n\n    // reverse sort direction\n    if (this.state.sortUp)\n      sortedMetapaths.reverse();\n\n    // count metapaths\n    const metapathCount = sortedMetapaths.length;\n    let metapathSelectedCount = 0;\n    for (const metapath of sortedMetapaths) {\n      if (metapath.checked)\n        metapathSelectedCount++;\n    }\n\n    return (\n      <TableContext.Provider\n        value={{\n          sortedMetapaths: sortedMetapaths,\n          showMore: this.state.showMore,\n          allChecked: this.state.allChecked,\n          toggleAllChecked: this.toggleAllChecked,\n          toggleChecked: this.toggleChecked,\n          soloChecked: this.soloChecked,\n          sortColumn: this.state.sortColumn,\n          sortUp: this.state.sortUp,\n          changeSort: this.changeSort\n        }}\n      >\n        <div className='table_attic'>\n          <TextButton\n            text='.csv'\n            icon={faDownload}\n            className='link_button small'\n            onClick={this.downloadCsv}\n            tooltipText='Download table as .csv file'\n          />\n          <TextButton\n            text={this.state.showMore ? 'show less ' : 'show more '}\n            icon={this.state.showMore ? faAngleLeft : faAngleRight}\n            className='link_button small'\n            onClick={this.toggleShowMore}\n            tooltipText='Expand table and show more columns'\n          />\n          <div className='small light right'>\n            {metapathCount} results, {metapathSelectedCount} selected\n          </div>\n        </div>\n        <div className='table_container' data-expanded={this.state.showMore}>\n          <table className='metapath_results_table'>\n            <TableHead />\n            <TableBody />\n          </table>\n        </div>\n      </TableContext.Provider>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst TableContext = React.createContext({});\n// connect component to global state\nTableFull = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metapaths: state.metapaths\n}))(TableFull);\n\n// table header component\n// contains column labels and sort buttons\nclass TableHead extends Component {\n  // display component\n  render() {\n    // extra 'super-grouping' row at top of table\n    const extraRow = (\n      <tr>\n        <td className='col_xs' />\n        <td className='col_l' />\n        <td className='col_s' />\n        <td className='col_m' />\n        <td className='col_m' />\n        <td className='col_s' />\n        <td className='col_xxl center' colSpan='6'>\n          <div className='divider'>Null DWPC distribution information</div>\n        </td>\n      </tr>\n    );\n\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.nodes\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n    // primary columns\n    const cols = (\n      <>\n        <td className='col_xs'>\n          <Checkbox\n            checked={this.context.allChecked}\n            onClick={() => this.context.toggleAllChecked()}\n            onCtrlClick={() => this.context.toggleAllChecked()}\n            tooltipText='Show all paths'\n          />\n        </td>\n        <TableHeadCell\n          className='col_l'\n          buttonClass='left'\n          fieldName='metapath_metaedges'\n          tooltipText={tooltipText['metapath']}\n          text='metapath'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='path_count'\n          tooltipText={tooltipText['path_count']}\n          text='path count'\n        />\n        <TableHeadCell\n          className='col_m'\n          fieldName='adjusted_p_value'\n          tooltipText={tooltipText['adjusted_p_value']}\n          text={\n            <span>\n              adjusted\n              <br />\n              <i>p</i>-value\n            </span>\n          }\n        />\n      </>\n    );\n\n    // extra columns\n    const extraCols = (\n      <>\n        <TableHeadCell\n          className='col_m'\n          fieldName='p_value'\n          tooltipText={tooltipText['p_value']}\n          text={\n            <>\n              <i>p</i>-value\n            </>\n          }\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='dwpc'\n          tooltipText={tooltipText['dwpc']}\n          text='DWPC'\n        />\n        <TableHeadCell\n          fieldName='dgp_source_degree'\n          tooltipText={tooltipText['dgp_source_degree']}\n          text='source degree'\n        />\n        <TableHeadCell\n          fieldName='dgp_target_degree'\n          tooltipText={tooltipText['dgp_target_degree']}\n          text='target degree'\n        />\n        <TableHeadCell\n          fieldName='dgp_n_dwpcs'\n          tooltipText={tooltipText['dgp_n_dwpcs']}\n          text=\"# DWPC's\"\n        />\n        <TableHeadCell\n          fieldName='dgp_n_nonzero_dwpcs'\n          tooltipText={tooltipText['dgp_n_nonzero_dwpcs']}\n          text=\"# non-0 DWPC's\"\n        />\n        <TableHeadCell\n          fieldName='dgp_nonzero_mean'\n          tooltipText={tooltipText['dgp_nonzero_mean']}\n          text='non-0 mean'\n        />\n        <TableHeadCell\n          fieldName='dgp_nonzero_sd'\n          tooltipText={tooltipText['dgp_nonzero_sd']}\n          text={<>non-0 &sigma;</>}\n        />\n      </>\n    );\n\n    return (\n      <thead className='small light'>\n        {this.context.showMore && extraRow}\n        <tr>\n          {cols}\n          {this.context.showMore && extraCols}\n        </tr>\n      </thead>\n    );\n  }\n}\n// connect component to context component\nTableHead.contextType = TableContext;\n// connect component to global state\nTableHead = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableHead);\n\n// table header cell component\nclass TableHeadCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className}>\n        <SortButton\n          text={this.props.text}\n          tooltipText={this.props.tooltipText}\n          fieldName={this.props.fieldName}\n          className={this.props.buttonClass}\n        />\n      </td>\n    );\n  }\n}\n\n// column sort button component\nclass SortButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText={this.props.tooltipText}\n        className={'sort_button ' + (this.props.className || '')}\n        onClick={() => this.context.changeSort(this.props.fieldName)}\n      >\n        {this.props.text}\n        <FontAwesomeIcon\n          icon={\n            this.props.fieldName === this.context.sortColumn\n              ? this.context.sortUp\n                ? faSortUp\n                : faSortDown\n              : faSort\n          }\n        />\n      </Button>\n    );\n  }\n}\n// connect component to context component\nSortButton.contextType = TableContext;\n\n// table body component\n// contains actual data\nclass TableBody extends Component {\n  // display component\n  render() {\n    return (\n      <tbody>\n        {this.context.sortedMetapaths.map((metapath, index) => (\n          <TableBodyRow\n            key={index}\n            metapath={metapath}\n            checked={metapath.checked}\n            showMore={this.props.showMore}\n          />\n        ))}\n      </tbody>\n    );\n  }\n}\n// connect component to context component\nTableBody.contextType = TableContext;\n\n// table body row component\n// contains column data for one metapath\nclass TableBodyRow extends Component {\n  // display component\n  render() {\n    const metapath = this.props.metapath;\n\n    // primary columns\n    const cols = (\n      <>\n        <td>\n          <Checkbox\n            checked={this.props.checked}\n            onClick={() => this.context.toggleChecked(this.props.metapath.id)}\n            onCtrlClick={() => this.context.soloChecked(this.props.metapath.id)}\n            tooltipText={\n              'Show these ' +\n              (this.props.metapath.path_count || '') +\n              ' paths in the paths table'\n            }\n          />\n        </td>\n        <TableBodyCell\n          fieldClass='left'\n          value={metapathChips(metapath.metapath_metaedges)}\n          fullValue={metapath.metapath_name}\n        />\n        <TableBodyCell value={metapath.path_count} />\n        <TableBodyCell\n          style={{ backgroundColor: toGradient(metapath.adjusted_p_value) }}\n          value={toExponential(metapath.adjusted_p_value)}\n          fullValue={metapath.adjusted_p_value}\n        />\n      </>\n    );\n\n    // extra columns\n    const extraCols = (\n      <>\n        <TableBodyCell\n          style={{ backgroundColor: toGradient(metapath.p_value) }}\n          value={toExponential(metapath.p_value)}\n          fullValue={metapath.p_value}\n        />\n        <TableBodyCell\n          value={toFixed(metapath.dwpc)}\n          fullValue={metapath.dwpc}\n        />\n        <TableBodyCell value={metapath.dgp_source_degree} />\n        <TableBodyCell value={metapath.dgp_target_degree} />\n        <TableBodyCell value={metapath.dgp_n_dwpcs} />\n        <TableBodyCell value={metapath.dgp_n_nonzero_dwpcs} />\n        <TableBodyCell\n          value={toFixed(metapath.dgp_nonzero_mean)}\n          fullValue={metapath.dgp_nonzero_mean}\n        />\n        <TableBodyCell\n          value={toFixed(metapath.dgp_nonzero_sd)}\n          fullValue={metapath.dgp_nonzero_sd}\n        />\n      </>\n    );\n\n    return (\n      <tr>\n        {cols}\n        {this.context.showMore && extraCols}\n      </tr>\n    );\n  }\n}\n// connect component to context component\nTableBodyRow.contextType = TableContext;\n\n// table body cell component\nclass TableBodyCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className} style={this.props.style}>\n        <DynamicField\n          value={this.props.value}\n          fullValue={this.props.fullValue}\n          className={this.props.fieldClass}\n        />\n      </td>\n    );\n  }\n}\n\n// table with no results component\nclass TableEmpty extends Component {\n  // display component\n  render() {\n    return (\n      <table className='metapath_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>no results to show</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// make table array out of metapaths results object\nfunction makeMetapathsTable(metapaths) {\n  let headers = [];\n  for (const field of Object.keys(metapaths[0])) {\n    if (\n      typeof metapaths[0][field] === 'number' ||\n      typeof metapaths[0][field] === 'string'\n    )\n      headers.push(field);\n  }\n\n  // sort headers in custom order\n  const order = [\n    'id',\n    'metapath_name',\n    'metapath_abbreviation',\n    'path_count',\n    'adjusted_p_value',\n    'p_value',\n    'dwpc',\n    'dgp_source_degree',\n    'dgp_target_degree',\n    'dgp_n_dwpcs',\n    'dgp_n_nonzero_dwpcs',\n    'dgp_nonzero_mean',\n    'dgp_nonzero_sd'\n  ];\n  headers = sortCustom(headers, order);\n\n  const table = [];\n  table.push(headers);\n  for (const result of metapaths) {\n    const row = [];\n    for (const header of headers)\n      row.push(result[header]);\n    table.push(row);\n  }\n\n  return table;\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { Button } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { TextButton } from './buttons.js';\nimport { EyeCheckbox } from './buttons.js';\nimport { HighlighterCheckbox } from './buttons.js';\nimport { downloadCsv } from './util.js';\nimport { makeFilenameFriendly } from './util.js';\nimport { pathChips } from './chips.js';\nimport { updatePathQueries } from './actions.js';\nimport { toFixed } from './util.js';\nimport { sortCustom } from './util.js';\nimport './path-results.css';\n\n// path results section component\nexport class PathResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <CollapsibleSection\n          label='Paths'\n          tooltipText='Paths of the selected metapaths'\n        >\n          {this.props.pathQueries.length > 0 ? <TableFull /> : <TableEmpty />}\n        </CollapsibleSection>\n      </section>\n    );\n  }\n}\n// connect component to global state\nPathResults = connect((state) => ({\n  pathQueries: state.pathQueries\n}))(PathResults);\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.showMore = false;\n    this.state.allChecked = false;\n    this.state.allHighlighted = false;\n    this.state.sortColumn = 'score';\n    this.state.sortUp = true;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n    this.toggleAllChecked = this.toggleAllChecked.bind(this);\n    this.allChecked = this.allChecked.bind(this);\n    this.checkAll = this.checkAll.bind(this);\n    this.uncheckAll = this.uncheckAll.bind(this);\n    this.allOthersUnchecked = this.allOthersUnchecked.bind(this);\n    this.toggleChecked = this.toggleChecked.bind(this);\n    this.soloChecked = this.soloChecked.bind(this);\n    this.toggleAllHighlighted = this.toggleAllHighlighted.bind(this);\n    this.allHighlighted = this.allHighlighted.bind(this);\n    this.highlightAll = this.highlightAll.bind(this);\n    this.unhighlightAll = this.unhighlightAll.bind(this);\n    this.allOthersUnhighlighted = this.allOthersUnhighlighted.bind(this);\n    this.toggleHighlighted = this.toggleHighlighted.bind(this);\n    this.soloHighlighted = this.soloHighlighted.bind(this);\n    this.changeSort = this.changeSort.bind(this);\n    this.downloadCsv = this.downloadCsv.bind(this);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (this.props.pathQueries !== prevProps.pathQueries) {\n      this.updateAllChecked();\n      this.updateAllHighlighted();\n    }\n  }\n\n  // toggle show more/less\n  toggleShowMore(event) {\n    if (event)\n      event.preventDefault();\n\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // checks if all rows checked and updates state\n  updateAllChecked() {\n    if (this.allChecked())\n      this.setState({ allChecked: true });\n    else\n      this.setState({ allChecked: false });\n  }\n\n  // toggle check/uncheck all\n  toggleAllChecked() {\n    if (this.allChecked())\n      this.uncheckAll();\n    else\n      this.checkAll();\n  }\n\n  // checks whether all paths are checked\n  allChecked() {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!path.checked)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // makes all paths checked\n  checkAll() {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths)\n        path.checked = true;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // makes all paths unchecked\n  uncheckAll() {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths)\n        path.checked = false;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // checks whether all paths besides the specified are unchecked\n  allOthersUnchecked(thePath) {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!this.comparePaths(path, thePath) && path.checked)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // toggles the specified paths on/off\n  toggleChecked(thePath) {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (this.comparePaths(path, thePath))\n          path.checked = !path.checked;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // solo path (turn all others off)\n  soloChecked(thePath) {\n    const pathQueries = this.props.pathQueries.slice();\n    const allOthersUnchecked = this.allOthersUnchecked(thePath);\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (allOthersUnchecked || this.comparePaths(path, thePath))\n          path.checked = true;\n        else\n          path.checked = false;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // checks if all rows highlighted and updates state\n  updateAllHighlighted() {\n    if (this.allHighlighted())\n      this.setState({ allHighlighted: true });\n    else\n      this.setState({ allHighlighted: false });\n  }\n\n  // toggle highlight/unhighlight all\n  toggleAllHighlighted() {\n    if (this.allHighlighted())\n      this.unhighlightAll();\n    else\n      this.highlightAll();\n  }\n\n  // checks whether all paths are highlighted\n  allHighlighted() {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!path.highlighted)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // makes all paths highlighted\n  highlightAll() {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths)\n        path.highlighted = true;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // makes all paths unhighlighted\n  unhighlightAll() {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths)\n        path.highlighted = false;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // checks whether all paths besides the specified are unhighlighted\n  allOthersUnhighlighted(thePath) {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!this.comparePaths(path, thePath) && path.highlighted)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // toggles the specified paths on/off\n  toggleHighlighted(thePath) {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (this.comparePaths(path, thePath))\n          path.highlighted = !path.highlighted;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // solo path (turn all others off)\n  soloHighlighted(thePath) {\n    const pathQueries = this.props.pathQueries.slice();\n    const allOthersUnhighlighted = this.allOthersUnhighlighted(thePath);\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (allOthersUnhighlighted)\n          path.highlighted = true;\n        else {\n          if (this.comparePaths(path, thePath))\n            path.highlighted = true;\n          else\n            path.highlighted = false;\n        }\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // checks if paths are equal\n  comparePaths(path1, path2) {\n    return (\n      JSON.stringify(path1.node_ids) === JSON.stringify(path2.node_ids) &&\n      JSON.stringify(path1.rel_ids) === JSON.stringify(path2.rel_ids)\n    );\n  }\n\n  // change which column table is sorted by\n  changeSort(sortColumn) {\n    const newState = {};\n    newState.sortColumn = sortColumn;\n\n    if (sortColumn === this.state.sortColumn)\n      newState.sortUp = !this.state.sortUp;\n    else\n      newState.sortUp = true;\n\n    this.setState(newState);\n  }\n\n  // compare numbers (for sorting)\n  compareNumbers(a, b, key) {\n    // parse as numbers\n    const comparison = Number(a[key]) - Number(b[key]);\n    if (!Number.isNaN(comparison))\n      return comparison;\n\n    // otherwise parse as strings and compare alphabetically\n    if (a[key] < b[key])\n      return -1;\n    else if (a[key] > b[key])\n      return 1;\n    else\n      return 0;\n  }\n\n  // download table data as .csv file\n  downloadCsv() {\n    if (\n      !this.props.pathQueries.length ||\n      !this.props.sourceNode.name ||\n      !this.props.targetNode.name\n    )\n      return;\n\n    const tableData = makePathsTable(this.props.pathQueries);\n    const filename = [\n      'paths',\n      makeFilenameFriendly(this.props.sourceNode.name),\n      makeFilenameFriendly(this.props.targetNode.name)\n    ].join('_');\n    downloadCsv(tableData, filename);\n  }\n\n  // display component\n  render() {\n    let nodes = {};\n    for (const pathQuery of this.props.pathQueries)\n      nodes = { ...nodes, ...pathQuery.nodes };\n\n    let edges = {};\n    for (const pathQuery of this.props.pathQueries)\n      edges = { ...edges, ...pathQuery.relationships };\n\n    let sortedPaths = [];\n    for (const pathQuery of this.props.pathQueries)\n      sortedPaths = [...sortedPaths, ...pathQuery.paths];\n\n    // construct full path description/name\n    sortedPaths = sortedPaths.map((path) => ({\n      ...path,\n      chipDescription: pathChips(\n        assemblePath(path, nodes, edges),\n        this.state.showMore\n      ),\n      textDescription: textDescription(assemblePath(path, nodes, edges))\n    }));\n\n    // sort paths by specified column\n    const sortColumn = this.state.sortColumn;\n\n    // sort by appropriate field\n    sortedPaths.sort((a, b) => this.compareNumbers(a, b, sortColumn));\n\n    // reverse sort direction\n    if (this.state.sortUp)\n      sortedPaths.reverse();\n\n    // count paths\n    const pathCount = sortedPaths.length;\n    let pathSelectedCount = 0;\n    for (const path of sortedPaths) {\n      if (path.checked)\n        pathSelectedCount++;\n    }\n\n    let pathHighlightedCount = 0;\n    for (const path of sortedPaths) {\n      if (path.highlighted)\n        pathHighlightedCount++;\n    }\n\n    return (\n      <TableContext.Provider\n        value={{\n          sortedPaths: sortedPaths,\n          showMore: this.state.showMore,\n          allChecked: this.state.allChecked,\n          toggleAllChecked: this.toggleAllChecked,\n          toggleChecked: this.toggleChecked,\n          soloChecked: this.soloChecked,\n          allHighlighted: this.state.allHighlighted,\n          toggleAllHighlighted: this.toggleAllHighlighted,\n          toggleHighlighted: this.toggleHighlighted,\n          soloHighlighted: this.soloHighlighted,\n          sortColumn: this.state.sortColumn,\n          sortUp: this.state.sortUp,\n          changeSort: this.changeSort\n        }}\n      >\n        <div className='table_attic'>\n          <TextButton\n            text='.csv'\n            icon={faDownload}\n            className='link_button small'\n            onClick={this.downloadCsv}\n            tooltipText='Download table as .csv file'\n          />\n          <TextButton\n            text={this.state.showMore ? 'show less ' : 'show more '}\n            icon={this.state.showMore ? faAngleLeft : faAngleRight}\n            className='link_button small'\n            onClick={this.toggleShowMore}\n            tooltipText='Expand table'\n          />\n          <div className='small light right'>\n            {pathCount} results, {pathSelectedCount} selected,{' '}\n            {pathHighlightedCount} highlighted\n          </div>\n        </div>\n        <div className='table_container' data-expanded={this.state.showMore}>\n          <table\n            className='path_results_table'\n            data-expanded={this.state.showMore}\n          >\n            <TableHead />\n            <TableBody />\n          </table>\n        </div>\n      </TableContext.Provider>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst TableContext = React.createContext({});\n// connect component to global state\nTableFull = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metagraph: state.metagraph,\n  pathQueries: state.pathQueries\n}))(TableFull);\n\n// table header component\n// contains column labels and sort buttons\nclass TableHead extends Component {\n  // display component\n  render() {\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.nodes\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n    // primary columns\n    const cols = (\n      <>\n        <td className='col_xs'>\n          <EyeCheckbox\n            checked={this.context.allChecked}\n            onClick={() => this.context.toggleAllChecked()}\n            onCtrlClick={() => this.context.toggleAllChecked()}\n            tooltipText='Show all paths'\n          />\n        </td>\n        <td className='col_xs'>\n          <HighlighterCheckbox\n            checked={this.context.allHighlighted}\n            onClick={() => this.context.toggleAllHighlighted()}\n            onCtrlClick={() => this.context.toggleAllHighlighted()}\n            tooltipText='Highlight all paths'\n          />\n        </td>\n        <TableHeadCell\n          className='col_s left'\n          buttonClass='left'\n          fieldName='metapath'\n          tooltipText={tooltipText['metapath']}\n          text='metapath'\n        />\n        <TableHeadCell\n          className='col_xl left'\n          buttonClass='left'\n          fieldName='textDescription'\n          tooltipText={tooltipText['path']}\n          text='path'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='score'\n          tooltipText={tooltipText['score']}\n          text='path score'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='percent_of_DWPC'\n          tooltipText={tooltipText['percent_of_DWPC']}\n          text='% of DWPC'\n        />\n      </>\n    );\n\n    return (\n      <thead className='small light'>\n        <tr>{cols}</tr>\n      </thead>\n    );\n  }\n}\n// connect component to context component\nTableHead.contextType = TableContext;\n// connect component to global state\nTableHead = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableHead);\n\n// table header cell component\nclass TableHeadCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className}>\n        <SortButton\n          text={this.props.text}\n          tooltipText={this.props.tooltipText}\n          fieldName={this.props.fieldName}\n          className={this.props.buttonClass}\n        />\n      </td>\n    );\n  }\n}\n\n// column sort button component\nclass SortButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText={this.props.tooltipText}\n        className={'sort_button ' + (this.props.className || '')}\n        onClick={() => this.context.changeSort(this.props.fieldName)}\n      >\n        {this.props.text}\n        <FontAwesomeIcon\n          icon={\n            this.props.fieldName === this.context.sortColumn\n              ? this.context.sortUp\n                ? faSortUp\n                : faSortDown\n              : faSort\n          }\n        />\n      </Button>\n    );\n  }\n}\n// connect component to context component\nSortButton.contextType = TableContext;\n\n// table body component\n// contains actual data\nclass TableBody extends Component {\n  // display component\n  render() {\n    return (\n      <tbody>\n        {this.context.sortedPaths.map((path, index) => (\n          <TableBodyRow\n            key={index}\n            path={path}\n            checked={path.checked}\n            highlighted={path.highlighted}\n          />\n        ))}\n      </tbody>\n    );\n  }\n}\n// connect component to context component\nTableBody.contextType = TableContext;\n// connect component to global state\nTableBody = connect((state) => ({\n  pathQueries: state.pathQueries\n}))(TableBody);\n\n// table body row component\n// contains column data for one path\nclass TableBodyRow extends Component {\n  // display component\n  render() {\n    const path = this.props.path;\n\n    // primary columns\n    const cols = (\n      <>\n        <td>\n          <EyeCheckbox\n            checked={this.props.checked}\n            onClick={() => this.context.toggleChecked(this.props.path)}\n            onCtrlClick={() => this.context.soloChecked(this.props.path)}\n            tooltipText='Show this path in the graph display'\n          />\n        </td>\n        <td>\n          <HighlighterCheckbox\n            checked={this.props.highlighted}\n            onClick={() => this.context.toggleHighlighted(this.props.path)}\n            onCtrlClick={() => this.context.soloHighlighted(this.props.path)}\n            tooltipText='Highlight this path in the graph display'\n          />\n        </td>\n        <TableBodyCell\n          className='left small'\n          fieldClass='left'\n          value={path.metapath}\n          fullValue={path.metapath}\n        />\n        <TableBodyCell\n          className='left small'\n          fieldClass='left'\n          value={path.chipDescription}\n          fullValue={path.textDescription}\n        />\n        <TableBodyCell\n          value={path.score ? toFixed(path.score) : '-'}\n          fullValue={path.score || '-'}\n        />\n        <TableBodyCell\n          value={toFixed(path.percent_of_DWPC)}\n          fullValue={path.percent_of_DWPC}\n        />\n      </>\n    );\n\n    return <tr>{cols}</tr>;\n  }\n}\n// connect component to context component\nTableBodyRow.contextType = TableContext;\n\n// table body cell component\nclass TableBodyCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className} style={this.props.style}>\n        <DynamicField\n          value={this.props.value}\n          fullValue={this.props.fullValue}\n          className={this.props.fieldClass}\n        />\n      </td>\n    );\n  }\n}\n\n// table with no results component\nclass TableEmpty extends Component {\n  // display component\n  render() {\n    return (\n      <table className='metapath_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>no results to show</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// construct path object with relevant properties for each node/edge entry\nfunction assemblePath(path, nodes, edges) {\n  const pathNodes = [];\n  for (const nodeId of path.node_ids) {\n    const node = nodes[nodeId];\n    if (!node)\n      continue;\n\n    pathNodes.push({\n      element: 'node',\n      type: node.metanode,\n      name: node.data.name\n    });\n  }\n\n  const pathEdges = [];\n  for (let index = 0; index < path.rel_ids.length; index++) {\n    const edge = edges[path.rel_ids[index]];\n    const prevNode = nodes[path.node_ids[index]];\n    if (!edge || !prevNode)\n      continue;\n\n    let direction = '';\n    if (edge.directed) {\n      if (edge.source_neo4j_id === prevNode.neo4j_id)\n        direction = 'forward';\n      else\n        direction = 'backward';\n    }\n\n    pathEdges.push({\n      element: 'edge',\n      type: edge.kind,\n      direction: direction\n    });\n  }\n\n  const assembledPath = [];\n  for (const node of pathNodes) {\n    assembledPath.push(node);\n    if (pathEdges.length > 0)\n      assembledPath.push(pathEdges.shift());\n  }\n\n  return assembledPath;\n}\n\n// produce text path description from assembled path\nfunction textDescription(path) {\n  return path.map((entry) => {\n    if (entry.element === 'node')\n      return entry.name;\n    if (entry.element === 'edge') {\n      let arrow = '–';\n      if (entry.direction === 'forward')\n        arrow = '→';\n      else if (entry.direction === 'backward')\n        arrow = '←';\n      return ['', arrow, entry.type, arrow, ''].join(' ');\n    }\n    return '';\n  });\n}\n\n// make table array out of path queries results object\nfunction makePathsTable(pathQueries) {\n  let nodes = {};\n  for (const pathQuery of pathQueries)\n    nodes = { ...nodes, ...pathQuery.nodes };\n\n  let edges = {};\n  for (const pathQuery of pathQueries)\n    edges = { ...edges, ...pathQuery.relationships };\n\n  let paths = [];\n  for (const pathQuery of pathQueries)\n    paths = [...paths, ...pathQuery.paths];\n\n  for (const path of paths) {\n    path.description = textDescription(assemblePath(path, nodes, edges)).join(\n      ''\n    );\n  }\n\n  let headers = [];\n  for (const field of Object.keys(paths[0])) {\n    if (\n      typeof paths[0][field] === 'number' ||\n      typeof paths[0][field] === 'string'\n    )\n      headers.push(field);\n  }\n\n  // sort headers in custom order\n  const order = [\n    'description',\n    'metapath',\n    'score',\n    'percent_of_DWPC'\n  ];\n  headers = sortCustom(headers, order);\n\n  const table = [];\n  table.push(headers);\n  for (const result of paths) {\n    const row = [];\n    for (const header of headers)\n      row.push(result[header]);\n    table.push(row);\n  }\n\n  return table;\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Header } from './header.js';\nimport { NodeSearch } from './node-search.js';\nimport { NodeResults } from './node-results.js';\nimport { MetapathResults } from './metapath-results.js';\nimport { PathResults } from './path-results.js';\nimport { getMetagraph } from './backend-query.js';\nimport { getHetioDefinitions } from './backend-query.js';\nimport { getHetioStyles } from './backend-query.js';\nimport { getHetmechDefinitions } from './backend-query.js';\nimport { lookupNodeById } from './backend-query.js';\nimport { searchMetapaths } from './backend-query.js';\nimport { searchPaths } from './backend-query.js';\nimport { setDefinitions } from './actions.js';\nimport { updateSourceTargetNodes } from './actions.js';\nimport { updateMetapaths } from './actions.js';\nimport { updatePathQueries } from './actions.js';\nimport './styles.css';\n\n// main app component\nclass App extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.fetchDefinitions = this.fetchDefinitions.bind(this);\n    this.updateNodesFromUrl = this.updateNodesFromUrl.bind(this);\n    this.updateMetapaths = this.updateMetapaths.bind(this);\n    this.updateHistory = this.updateHistory.bind(this);\n    this.updateTitle = this.updateTitle.bind(this);\n    this.updatePaths = this.updatePaths.bind(this);\n\n    // fetch definitions when page first loads\n    this.fetchDefinitions();\n    // get parameters from url when page first loads\n    this.updateNodesFromUrl();\n    // listen for back/forward navigation (history)\n    window.addEventListener('popstate', this.updateNodesFromUrl);\n  }\n\n  // when component changes\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.sourceNode !== this.props.sourceNode ||\n      prevProps.targetNode !== this.props.targetNode\n    )\n      this.onNodeChange();\n    if (prevProps.metapaths !== this.props.metapaths)\n      this.onMetapathChange();\n  }\n\n  // get metagraph, hetio definitions, and hetmech definitions\n  fetchDefinitions() {\n    this.props.dispatch((dispatch) => {\n      // wait until all fetches return to update state\n      const promises = [\n        getMetagraph(),\n        getHetioDefinitions(),\n        getHetioStyles(),\n        getHetmechDefinitions()\n      ];\n      Promise.all(promises).then((results) => {\n        dispatch(\n          setDefinitions({\n            metagraph: results[0],\n            hetioDefinitions: results[1],\n            hetioStyles: results[2],\n            hetmechDefinitions: results[3]\n          })\n        );\n      });\n    });\n  }\n\n  // update source/target nodes from url\n  updateNodesFromUrl() {\n    this.props.dispatch((dispatch) => {\n      const params = new URLSearchParams(window.location.search);\n      const sourceNodeId = params.get('source');\n      const targetNodeId = params.get('target');\n\n      // wait until both node searches return to update state\n      const promises = [\n        lookupNodeById(sourceNodeId),\n        lookupNodeById(targetNodeId)\n      ];\n      Promise.all(promises).then((results) => {\n        dispatch(\n          updateSourceTargetNodes({\n            sourceNode: results[0],\n            targetNode: results[1]\n          })\n        );\n      });\n    });\n  }\n\n  // when source/target node change\n  onNodeChange() {\n    // update history url before title to make sure title gets changed for\n    // correct page\n    this.updateMetapaths();\n    this.updateHistory();\n    this.updateTitle();\n  }\n\n  // update metapaths (node pair query results) when source/target node change\n  updateMetapaths() {\n    this.props.dispatch((dispatch) =>\n      searchMetapaths(this.props.sourceNode.id, this.props.targetNode.id).then(\n        (results) =>\n          dispatch(\n            updateMetapaths({\n              metapaths: results\n            })\n          )\n      )\n    );\n  }\n\n  // add history entry for source/target node without navigating page\n  updateHistory() {\n    const oldParams = new URLSearchParams(window.location.search);\n    const newParams = new URLSearchParams();\n\n    if (this.props.sourceNode.id !== undefined)\n      newParams.set('source', this.props.sourceNode.id);\n    if (this.props.targetNode.id !== undefined)\n      newParams.set('target', this.props.targetNode.id);\n\n    // if url already matches source/target nodes, don't update.\n    // will prevent extra history entry from getting source/target from url on\n    // page load\n    if (\n      (oldParams.get('source') === newParams.get('source')) &\n      (oldParams.get('target') === newParams.get('target'))\n    )\n      return;\n\n    let search = newParams.toString();\n    if (search.length > 0)\n      search = '?' + search;\n\n    const url = window.location.origin + window.location.pathname + search;\n    window.history.pushState({}, '', url);\n  }\n\n  // update page title based on source/target node\n  updateTitle() {\n    if (!this.props.sourceNode.id && !this.props.targetNode.id)\n      return;\n    const title =\n      'hetmech · ' +\n      (this.props.sourceNode.name || '___') +\n      ' → ' +\n      (this.props.targetNode.name || '___');\n    document.title = title;\n  }\n\n  // when checked metapaths change\n  onMetapathChange() {\n    this.updatePaths();\n  }\n\n  // update paths when checked metapaths change\n  updatePaths() {\n    this.props.dispatch((dispatch) => {\n      // fetch paths for all checked metapaths\n      const promises = [];\n      for (const metapath of this.props.metapaths) {\n        if (metapath.checked) {\n          promises.push(\n            searchPaths(\n              this.props.sourceNode.id,\n              this.props.targetNode.id,\n              metapath.metapath_abbreviation\n            )\n          );\n        }\n      }\n\n      // update path queries when all queries have returned\n      Promise.all(promises).then((results) => {\n        dispatch(\n          updatePathQueries({\n            pathQueries: results\n          })\n        );\n      });\n    });\n  }\n\n  // display component\n  render() {\n    return (\n      <>\n        <Header />\n        <NodeSearch />\n        <NodeResults />\n        <MetapathResults />\n        <PathResults />\n      </>\n    );\n  }\n}\n// connect component to global state\nApp = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metapaths: state.metapaths\n}))(App);\n\nexport { App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport { Reducer } from './reducers.js';\nimport { App } from './app.js';\n\n// create global state store\nconst store = createStore(Reducer, applyMiddleware(thunk));\n\n// render/run app\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","// map previous global state to new global state based on action\nexport function Reducer(previousState = {}, action) {\n  // start with previous state\n  const newState = { ...previousState };\n\n  // detect action type and set new state accordingly\n  switch (action.type) {\n    // set definitions\n    case 'set_definitions':\n      if (action.payload.metagraph !== undefined)\n        newState.metagraph = action.payload.metagraph;\n      if (action.payload.hetioDefinitions !== undefined)\n        newState.hetioDefinitions = action.payload.hetioDefinitions;\n      if (action.payload.hetioStyles !== undefined)\n        newState.hetioStyles = action.payload.hetioStyles;\n      if (action.payload.hetmechDefinitions !== undefined)\n        newState.hetmechDefinitions = action.payload.hetmechDefinitions;\n      break;\n\n    // update source and/or target node\n    case 'update_source_target_nodes':\n      if (action.payload.sourceNode !== undefined)\n        newState.sourceNode = action.payload.sourceNode;\n      if (action.payload.targetNode !== undefined)\n        newState.targetNode = action.payload.targetNode;\n      break;\n\n    // swap source/target nodes\n    case 'swap_source_target_nodes':\n      if (previousState.sourceNode && previousState.targetNode) {\n        newState.sourceNode = previousState.targetNode;\n        newState.targetNode = previousState.sourceNode;\n      }\n      break;\n\n    // update metapaths\n    case 'update_metapaths':\n      if (action.payload.metapaths !== undefined)\n        newState.metapaths = action.payload.metapaths;\n      break;\n\n    // update path queries\n    case 'update_path_queries':\n      if (action.payload.pathQueries !== undefined)\n        newState.pathQueries = action.payload.pathQueries;\n      break;\n\n    default:\n      break;\n  }\n\n  // make sure critical variables defined\n  if (!newState.metagraph)\n    newState.metagraph = {};\n  if (!newState.hetioDefinitions)\n    newState.hetioDefinitions = {};\n  if (!newState.hetioStyles)\n    newState.hetioStyles = {};\n  if (!newState.hetmechDefinitions)\n    newState.hetmechDefinitions = {};\n  if (!newState.sourceNode)\n    newState.sourceNode = {};\n  if (!newState.targetNode)\n    newState.targetNode = {};\n  if (!newState.metapaths)\n    newState.metapaths = [];\n  if (!newState.pathQueries)\n    newState.pathQueries = [];\n\n  // set new state\n  return newState;\n}\n"],"sourceRoot":""}