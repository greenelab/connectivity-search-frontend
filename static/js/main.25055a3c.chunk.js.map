{"version":3,"sources":["util.js","logo-animated.svg","header.js","arrow-icon-both.svg","arrow-icon-forward.svg","arrow-icon-backward.svg","chip-gene.svg","chip-compound.svg","chip-anatomy.svg","chip-disease.svg","chip-symptom.svg","chip-side-effect.svg","chip-biological-process.svg","chip-cellular-component.svg","chip-molecular-function.svg","chip-pathway.svg","chip-pharmacologic-class.svg","chips.js","tooltip.js","buttons.js","backend-query.js","actions.js","node-search.js","dynamic-field.js","collapsible-section.js","node-results.js","metapath-results.js","path-results.js","number-box.js","path-graph.js","app.js","index.js","reducers.js"],"names":["toExponential","number","parseFloat","mantissa","split","toFixed","exponent","parseInt","react_default","a","createElement","toGradient","gradient","map","color","join","r","g","b","percent","Math","log10","min","max","gradientIndex","length","lowerColor","floor","higherColor","ceil","percentBetween","downloadCsv","data","filename","fileContent","cell","blob","Blob","type","url","window","URL","createObjectURL","link","document","body","appendChild","href","download","click","revokeObjectURL","remove","makeFilenameFriendly","string","trim","replace","substring","sortCustom","array","order","key","sort","indexOf","transferObjectProps","oldArray","newArray","compareKeys","transferKeys","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","newElement","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","oldElement","matches","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","compareKey","err","return","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","transferKey","compareArrays","array1","array2","checkReverse","every","index","slice","reverse","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","logo_animated_ref2","logo_animated_ref3","id","stroke","strokeWidth","fill","d","_ref4","_ref5","transform","cx","cy","_ref6","_ref7","_ref8","logo_animated_SvgLogoAnimated","_ref","svgRef","props","viewBox","ref","ForwardRef","forwardRef","Header","__webpack_require__","p","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","showLogo","setTimeout","setState","inherits","createClass","logo","className","Component","arrow_icon_both_extends","arrow_icon_both_objectWithoutProperties","arrow_icon_both_objectWithoutPropertiesLoose","arrow_icon_both_ref2","arrow_icon_both_SvgArrowIconBoth","arrow_icon_both_ForwardRef","arrow_icon_forward_extends","arrow_icon_forward_objectWithoutProperties","arrow_icon_forward_objectWithoutPropertiesLoose","arrow_icon_forward_ref2","arrow_icon_forward_SvgArrowIconForward","arrow_icon_forward_ForwardRef","arrow_icon_backward_extends","arrow_icon_backward_objectWithoutProperties","arrow_icon_backward_objectWithoutPropertiesLoose","arrow_icon_backward_ref2","arrow_icon_backward_SvgArrowIconBackward","arrow_icon_backward_ForwardRef","chip_gene_extends","chip_gene_objectWithoutProperties","chip_gene_objectWithoutPropertiesLoose","chip_gene_ref2","chip_gene_SvgChipGene","chip_gene_ForwardRef","chip_compound_extends","chip_compound_objectWithoutProperties","chip_compound_objectWithoutPropertiesLoose","chip_compound_ref2","chip_compound_SvgChipCompound","chip_compound_ForwardRef","chip_anatomy_extends","chip_anatomy_objectWithoutProperties","chip_anatomy_objectWithoutPropertiesLoose","chip_anatomy_ref2","x","y","width","height","chip_anatomy_ref3","strokeLinecap","clipPath","chip_anatomy_SvgChipAnatomy","chip_anatomy_ForwardRef","chip_disease_extends","chip_disease_objectWithoutProperties","chip_disease_objectWithoutPropertiesLoose","chip_disease_ref2","chip_disease_SvgChipDisease","chip_disease_ForwardRef","chip_symptom_extends","chip_symptom_objectWithoutProperties","chip_symptom_objectWithoutPropertiesLoose","chip_symptom_ref2","chip_symptom_ref3","chip_symptom_SvgChipSymptom","chip_symptom_ForwardRef","chip_side_effect_extends","chip_side_effect_objectWithoutProperties","chip_side_effect_objectWithoutPropertiesLoose","chip_side_effect_ref2","chip_side_effect_ref3","chip_side_effect_SvgChipSideEffect","chip_side_effect_ForwardRef","chip_biological_process_extends","chip_biological_process_objectWithoutProperties","chip_biological_process_objectWithoutPropertiesLoose","chip_biological_process_ref2","chip_biological_process_ref3","chip_biological_process_SvgChipBiologicalProcess","chip_biological_process_ForwardRef","chip_cellular_component_extends","chip_cellular_component_objectWithoutProperties","chip_cellular_component_objectWithoutPropertiesLoose","chip_cellular_component_ref2","chip_cellular_component_ref3","chip_cellular_component_SvgChipCellularComponent","chip_cellular_component_ForwardRef","chip_molecular_function_extends","chip_molecular_function_objectWithoutProperties","chip_molecular_function_objectWithoutPropertiesLoose","chip_molecular_function_ref2","chip_molecular_function_ref3","strokeLinejoin","chip_molecular_function_ref4","chip_molecular_function_SvgChipMolecularFunction","chip_molecular_function_ForwardRef","chip_pathway_extends","chip_pathway_objectWithoutProperties","chip_pathway_objectWithoutPropertiesLoose","chip_pathway_ref2","chip_pathway_ref3","chip_pathway_ref4","chip_pathway_SvgChipPathway","chip_pathway_ForwardRef","chip_pharmacologic_class_extends","chip_pharmacologic_class_objectWithoutProperties","chip_pharmacologic_class_objectWithoutPropertiesLoose","chip_pharmacologic_class_ref2","chip_pharmacologic_class_ref3","chip_pharmacologic_class_SvgChipPharmacologicClass","chip_pharmacologic_class_ForwardRef","MetanodeChip","icon","fillColor","textColor","style","hetioStyles","fill_color","text_color","connect","MetaedgeChip","_Component2","direction","abbreviation","metagraph","kind_to_abbrev","data-name","data-abbreviation","pathChips","path","expanded","entry","element","chips_NodeChip","name","chips_MetaedgeChip","NodeChip","_Component3","background","data-expanded","Tooltip","open","opacity","onMouseEnter","bind","assertThisInitialized","openTooltip","onMouseLeave","event","_this2","hover","left","getBoundingClientRect","documentElement","scrollLeft","top","scrollTop","clientWidth","text","Fragment","children","React","Children","isValidElement","cloneElement","tooltip_Popup","Popup","ReactDOM","createPortal","Fade_default","in","Button","tooltip_Tooltip","tooltipText","onClick","ctrlKey","onCtrlClick","shiftKey","onShiftClick","TextButton","buttons_Button","index_es","Checkbox","checked","faCheck","EyeCheckbox","_Component4","faEye","HighlighterCheckbox","_Component5","faHighlighter","metagraphUrl","hetioDefinitions","nodeSearchServer","randomNodeServer","metapathSearchServer","pathSearchServer","fetchJson","fetch","then","response","json","results","catch","error","console","log","lookupNodeById","searchPaths","sourceId","targetId","metapath","params","URLSearchParams","set","toString","updateSourceTargetNodes","_ref2","payload","sourceNode","targetNode","updateMetapaths","_ref3","metapaths","updatePathQueries","pathQueries","NodeSearch","filters","filterString","updateFilters","NodeSearchContext","Provider","node_search_Filters","node_search_SourceNodeSearch","node_search_SwapButton","node_search_RandomButton","node_search_TargetNodeSearch","createContext","Filters","toggle","solo","prevProps","metanode_kinds","filter","push","active","allOthersOff","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","allOn","list","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_this3","buttons","node_search_FilterButton","metanodes","FilterButton","_this4","chips_MetanodeChip","SourceNodeSearch","_this5","onChange","dispatch","node_search_SearchBox","label","node","TargetNodeSearch","_this6","activeElement","blur","SearchBox","_this7","searchResults","inputRef","createRef","formRef","onInput","searchString","_this8","metatypes","searchNodes","context","item","_this9","downshift_esm","onInputValueChange","itemToString","selectedItem","getInputProps","getItemProps","getMenuProps","isOpen","highlightedIndex","clearSelection","node_search_TextBox","node_search_Dropdown","contextType","TextBox","_this10","focused","onFocus","onBlur","overlay","showOverlay","metanode","TextField_default","placeholder","classes","root","InputProps","input","faSearch","Dropdown","_this11","Popper_default","anchorEl","current","placement","container","disablePortal","Paper_default","result","MenuItem_default","identifier","SwapButton","_this12","faExchangeAlt","RandomButton","_this13","_this14","Promise","all","source_id","target_id","slicedToArray","newSourceNode","newTargetNode","faDice","DynamicField","field","tagName","toLowerCase","focus","deselectAll","selectAll","getSelection","empty","selectAllChildren","displayValue","fullValue","tabIndex","CollapsibleSection","collapsed","loadState","saveState","localStorage","getItem","setItem","String","data-collapsed","faAngleUp","faAngleDown","NodeResults","node_results_NodeCard","NodeCard","collapsible_section_CollapsibleSection","node_results_TableFull","node_results_TableEmpty","TableFull","showMore","toggleShowMore","properties","objectSpread","common","nodes","hetmechDefinitions","primaryFields","specialSecondCol","linkUrl","linkText","_i","_regexes","regex","RegExp","shortenUrl","firstCol","secondCol","splice","findIndex","extraFields","fields","concat","dynamic_field_DynamicField","rows","colSpan","buttons_TextButton","TableEmpty","MetapathResults","metapath_results_TableFull","metapath_results_TableEmpty","allChecked","sortColumn","sortUp","toggleAllChecked","checkAll","uncheckAll","allOthersUnchecked","toggleChecked","soloChecked","changeSort","updateAllChecked","preventDefault","newState","comparison","Number","isNaN","headers","_Object$keys","table","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","row","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","header","makeMetapathsTable","sortedMetapaths","compareMetapaths","compareNumbers","metapathCount","metapathSelectedCount","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","TableContext","faDownload","faAngleLeft","faAngleRight","metapath_results_TableHead","metapath_results_TableBody","TableHead","extraRow","cols","buttons_Checkbox","metapath_results_TableHeadCell","buttonClass","fieldName","extraCols","TableHeadCell","metapath_results_SortButton","SortButton","faSortUp","faSortDown","faSort","TableBody","metapath_results_TableBodyRow","TableBodyRow","edges","path_count","metapath_results_TableBodyCell","fieldClass","metapath_metaedges","metapath_name","backgroundColor","adjusted_p_value","p_value","dwpc","dgp_source_degree","dgp_target_degree","dgp_n_dwpcs","dgp_n_nonzero_dwpcs","dgp_nonzero_mean","dgp_nonzero_sd","TableBodyCell","PathResults","path_results_TableFull","path_results_TableEmpty","allHighlighted","toggleAllHighlighted","highlightAll","unhighlightAll","allOthersUnhighlighted","toggleHighlighted","soloHighlighted","updateAllHighlighted","pathQuery","paths","thePath","comparePaths","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","highlighted","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_iterator24","path1","path2","node_ids","rel_ids","_iteratorNormalCompletion31","_didIteratorError31","_iteratorError31","_step31","_iterator31","_iteratorNormalCompletion32","_didIteratorError32","_iteratorError32","_step32","_iterator32","relationships","_iteratorNormalCompletion33","_didIteratorError33","_iteratorError33","_step33","_iterator33","toConsumableArray","_i2","_paths","description","textDescription","assemblePath","_i3","_i4","_paths2","_iteratorNormalCompletion34","_didIteratorError34","_iteratorError34","_step34","_iterator34","makePathsTable","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","_iteratorNormalCompletion26","_didIteratorError26","_iteratorError26","_step26","_iterator26","sortedPaths","_iteratorNormalCompletion27","_didIteratorError27","_iteratorError27","_step27","_iterator27","chipDescription","pathCount","pathSelectedCount","_iteratorNormalCompletion28","_didIteratorError28","_iteratorError28","_step28","_iterator28","pathHighlightedCount","_iteratorNormalCompletion29","_didIteratorError29","_iteratorError29","_step29","_iterator29","path_results_TableContext","path_results_TableHead","path_results_TableBody","buttons_EyeCheckbox","buttons_HighlighterCheckbox","path_results_TableHeadCell","path_results_SortButton","path_results_TableBodyRow","path_results_TableBodyCell","score","percent_of_DWPC","pathNodes","_iteratorNormalCompletion30","_didIteratorError30","_iteratorError30","_step30","_iterator30","pathEdges","edge","prevNode","directed","source_neo4j_id","neo4j_id","kind","assembledPath","_pathNodes","shift","arrow","NumberBox","onKeyPress","nativeEvent","onArrows","onType","onSubmit","step","maxWidth","maxHeight","edgeSpreadAngle","PI","PathGraph","nodeCount","edgeCount","selectedElement","graph","expandContainer","collapseContainer","updateSectionWidth","setWidth","setHeight","setGraphCounts","setSelectedElement","addEventListener","prevState","round","sectionWidth","findDOMNode","XMLSerializer","serializeToString","downloadSvg","getElementById","info","elementType","path_graph_SelectedInfo","faPowerOff","restartGraph","faMapMarkerAlt","unpinAll","faMapMarker","pinAll","faExpand","fitView","number_box_NumberBox","faExpandArrowsAlt","faCompressArrowsAlt","path_graph_Graph","Graph","assembleGraph","resetView","onSimulationTick","onNodeEdgeClick","onNodeDragStart","onNodeDragEnd","onViewClick","createGraph","updateGraph","simulation","alpha","restart","svg","d3","force","distance","radius","strength","on","viewZoomHandler","scaleExtent","onViewZoom","nodeDragHandler","onNodeDrag","each","positionEdge","positionEdgeLabel","positionNode","s","attr","x1","y1","x2","y2","angle","atan2","targetRadius","nodeRadius","edgeArrowSize","coincidentOffset","cos","sin","angleOffset","sqrt","pow","sag","textX","textY","dy","edgeLabel","contents","getBBox","midX","midY","scale","translateX","translateY","translate","forEach","fx","fy","stopPropagation","selected","updateNodeCircles","updateEdgeLines","alphaTarget","links","edgeLineHighlights","enter","append","merge","exit","edgeLines","edgeThickness","edgeLabels","nodeCircleHighlights","nodeCircles","getNodeFillColor","layer","nodeLabels","select","nodeFontSize","getNodeTextColor","html","substr","nodeCharLimit","updateEdgeLineHighlights","updateEdgeLabels","updateNodeCircleHighlights","updateNodeLabels","pinSourceAndTargetNodes","updateSimulation","target_neo4j_id","nodeDistance","firstPath","_loop","nodeId","existingNode","find","existing","_loop2","relId","existingEdge","edgeBins","_loop3","edgeA","matched","_edgeBins2","edgeBin","edgeB","_edgeBins","firstSource","offset","sourceNodeIndex","targetNodeIndex","minLeft","title","location","xmlns","refX","refY","orient","markerUnits","markerWidth","markerHeight","SelectedInfo","Array","col","App","fetchDefinitions","updateNodesFromUrl","updateHistory","updateTitle","updatePaths","onNodeChange","onMetapathChange","promises","search","sourceNodeId","get","targetNodeId","path_counts","searchMetapaths","oldParams","newParams","origin","pathname","history","pushState","metapath_abbreviation","header_Header","node_search_NodeSearch","node_results_NodeResults","metapath_results_MetapathResults","path_results_PathResults","path_graph_PathGraph","store","createStore","action","oldQueries","newQueries","subKey","element1","element2","newQuery","oldQuery","isArray","transferQueryProps","applyMiddleware","thunk","render","react_redux_es","app_App"],"mappings":"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","file":"static/js/main.25055a3c.chunk.js","sourcesContent":["import React from 'react';\n\n// get html of number in exponential form\nexport function toExponential(number) {\n  number = parseFloat(number).toExponential(1);\n  const mantissa = parseFloat(number.split('e')[0]).toFixed(1);\n  const exponent = parseInt(number.split('e')[1]);\n  return (\n    <span>\n      {mantissa} &times; 10<sup>{exponent}</sup>\n    </span>\n  );\n}\n\n// get html of number in regular form, rounded to 1 decimal digit\nexport function toFixed(number) {\n  return <span>{parseFloat(number).toFixed(1)}</span>;\n}\n\n// map number to css color (rgba or hex) based on specified gradient\nexport function toGradient(number) {\n  // pretty gradient\n  let gradient = [\n    'rgba(255, 255, 255, 0)',\n    'rgba(255, 249, 196, 1)',\n    'rgba(255, 236, 179, 1)',\n    'rgba(255, 224, 178, 1)',\n    'rgba(255, 204, 188, 1)',\n    'rgba(248, 187, 208, 1)'\n  ];\n\n  // split each gradient color into component rgba values\n  gradient = gradient.map((color) => {\n    color = color.split(/[^0-9,]/).join('');\n    color = {\n      r: parseInt(color.split(',')[0]),\n      g: parseInt(color.split(',')[1]),\n      b: parseInt(color.split(',')[2]),\n      a: parseFloat(color.split(',')[3])\n    };\n    return color;\n  });\n\n  // take log of number\n  // (equivalent of getting exponent of number in exponential notation)\n  number = Math.log10(number);\n\n  // start/end cutoffs for exponent\n  const rangeStart = 0;\n  const rangeEnd = -8;\n\n  // get percent that number is through range\n  let percent = (number - rangeStart) / (rangeEnd - rangeStart);\n  percent = Math.min(Math.max(0, percent), 1);\n\n  // map percent to float gradient index\n  const gradientIndex = (gradient.length - 1) * percent;\n  // get integer indices below/above float index\n  const lowerColor = gradient[Math.floor(gradientIndex)];\n  const higherColor = gradient[Math.ceil(gradientIndex)];\n  // get percent that float index is between nearest integer indices\n  const percentBetween = gradientIndex % 1;\n\n  // interpolate color between gradient colors below/above float index\n  let color = {\n    r: lowerColor.r + (higherColor.r - lowerColor.r) * percentBetween,\n    g: lowerColor.g + (higherColor.g - lowerColor.g) * percentBetween,\n    b: lowerColor.b + (higherColor.b - lowerColor.b) * percentBetween,\n    a: lowerColor.a + (higherColor.a - lowerColor.a) * percentBetween\n  };\n\n  // clean rgba values\n  color.r = Math.floor(color.r);\n  color.g = Math.floor(color.g);\n  color.b = Math.floor(color.b);\n  color.a = color.a.toFixed(3);\n\n  // convert color in rgba format to css color string\n  color =\n    'rgba(' + color.r + ', ' + color.g + ', ' + color.b + ', ' + color.a + ')';\n\n  // return color\n  return color || '#ffffff';\n}\n\n// downloads provided data as csv file\n// data in format [ [A1, B1] , [A2, B2] ]\nexport function downloadCsv(data, filename) {\n  const fileContent = data.map((cell) => cell.join(',')).join('\\n');\n  const blob = new Blob([fileContent], { type: 'text/csv' });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  document.body.appendChild(link);\n  link.href = url;\n  link.download = (filename || 'data') + '.csv';\n  link.click();\n  window.URL.revokeObjectURL(url);\n  link.remove();\n}\n\n// make OS-friendly filename\nexport function makeFilenameFriendly(string) {\n  // remove leading and trailing whitespace\n  string = string.trim();\n  // replace special characters with dashes\n  string = string.replace(/[^0-9A-Za-z]/gi, '-');\n  // shorten if too long\n  string = string.substring(0, 15);\n  return string;\n}\n\n// downloads provided data as svg file\nexport function downloadSvg(data, filename) {\n  const fileContent = new XMLSerializer().serializeToString(data);\n  const blob = new Blob([fileContent], { type: 'image/svg+xml' });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  document.body.appendChild(link);\n  link.href = url;\n  link.download = (filename || 'data') + '.svg';\n  link.click();\n  window.URL.revokeObjectURL(url);\n  link.remove();\n}\n\n// show debug message on screen\n// useful for mobile debugging where no dev console available\nexport function debug(...args) {\n  let div = document.getElementById('_debug');\n  if (!div) {\n    div = document.createElement('div');\n    div.id = '_debug';\n    div.style.position = 'fixed';\n    div.style.left = 0;\n    div.style.top = 0;\n    div.style.background = 'rgba(255, 255, 255, 0.75)';\n    div.style.fontFamily = 'monospace';\n    div.style.fontSize = '10px';\n    div.style.color = '#ff00ff';\n    div.style.zIndex = 99999;\n    document.body.appendChild(div);\n  }\n  div.innerHTML += args.join(' | ');\n  div.innerHTML += '<br>';\n}\n\n// sort array in custom order\nexport function sortCustom(array, order, key) {\n  return array.sort((a, b) => {\n    if (key) {\n      a = a[key];\n      b = b[key];\n    }\n\n    a = order.indexOf(a);\n    b = order.indexOf(b);\n\n    if (a !== -1 && b !== -1)\n      return a - b;\n    else if (a !== -1)\n      return -1;\n    else if (b !== -1)\n      return 1;\n    else\n      return b - a;\n  });\n}\n\n// remove unnecessary preceding 'www.' and etc from url\nexport function shortenUrl(url) {\n  const regexes = ['^http://', '^https://', '^www.'];\n  for (const regex of regexes)\n    url = url.replace(new RegExp(regex), '');\n\n  return url;\n}\n\n// loop through new array of objects. for each object, find object in old\n// array that matches all compare keys, and transfer specified keys from\n// old object to new\nexport function transferObjectProps(\n  oldArray,\n  newArray,\n  compareKeys,\n  transferKeys\n) {\n  for (const newElement of newArray) {\n    for (const oldElement of oldArray) {\n      let matches = true;\n      for (const compareKey of compareKeys) {\n        if (oldElement[compareKey] !== newElement[compareKey]) {\n          matches = false;\n          break;\n        }\n      }\n      if (matches) {\n        for (const transferKey of transferKeys)\n          newElement[transferKey] = oldElement[transferKey];\n      }\n    }\n  }\n\n  return newArray;\n}\n\n// same as transferObjectProps, except arrays are now assumed to contain\n// objects with subKey that contains another array that contains the objects\n// to be transferred\nexport function transferQueryProps(\n  oldQueries,\n  newQueries,\n  subKey,\n  compareKeys,\n  transferKeys\n) {\n  for (const newQuery of newQueries) {\n    for (const newElement of newQuery[subKey]) {\n      for (const oldQuery of oldQueries) {\n        for (const oldElement of oldQuery[subKey]) {\n          let matches = true;\n          for (const compareKey of compareKeys) {\n            if (\n              !compareElements(oldElement[compareKey], newElement[compareKey])\n            ) {\n              matches = false;\n              break;\n            }\n          }\n          if (matches) {\n            for (const transferKey of transferKeys)\n              newElement[transferKey] = oldElement[transferKey];\n          }\n        }\n      }\n    }\n  }\n\n  return newQueries;\n}\n\n// compare two elements as primitives (eg number === number or string ===\n// string) or as arrays if both are arrays\nexport function compareElements(element1, element2) {\n  if (Array.isArray(element1) && Array.isArray(element2))\n    return compareArrays(element1, element2, true);\n  else\n    return element1 === element2;\n}\n\n// checks if arrays of primitives (strings, numbers, etc) are equal.\n// if specified, also check if arrays are equal in reverse\nexport function compareArrays(array1, array2, checkReverse) {\n  if (array1.length !== array2.length)\n    return false;\n\n  if (!checkReverse) {\n    // check forwards\n    return array1.every((value, index) => value === array2[index]);\n  } else {\n    // check forwards and backwards\n    return (\n      array1.every((value, index) => value === array2[index]) ||\n      array1\n        .slice()\n        .reverse()\n        .every((value, index) => value === array2[index])\n    );\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"style\", null, \"\\n    #back_line,\\n    #front_line,\\n    #circle_1,\\n    #circle_2,\\n    #circle_3,\\n    #circle_4 {\\n      animation-duration: 1.5s;\\n      animation-timing-function: ease;\\n      animation-fill-mode: forwards;\\n    }\\n    #back_line {\\n      animation-name: draw_back_line;\\n    }\\n    @keyframes draw_back_line {\\n      0% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 60;\\n      }\\n      60% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 60;\\n      }\\n      100% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 0;\\n      }\\n    }\\n    #front_line {\\n      animation-name: draw_front_line;\\n    }\\n    @keyframes draw_front_line {\\n      0% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 158;\\n      }\\n      60% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 0;\\n      }\\n      100% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 0;\\n      }\\n    }\\n    #circle_1 {\\n      animation-name: draw_circle_1;\\n    }\\n    #circle_2 {\\n      animation-name: draw_circle_2;\\n    }\\n    #circle_3 {\\n      animation-name: draw_circle_3;\\n    }\\n    #circle_4 {\\n      animation-name: draw_circle_4;\\n    }\\n    @keyframes draw_circle_1 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      20% {\\n        transform: scale(0);\\n      }\\n      40% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_2 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      30% {\\n        transform: scale(0);\\n      }\\n      50% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_3 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      40% {\\n        transform: scale(0);\\n      }\\n      60% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_4 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      50% {\\n        transform: scale(0);\\n      }\\n      70% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n  \");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"back_line\",\n  stroke: \"#bdbdbd\",\n  strokeWidth: 5,\n  fill: \"none\",\n  d: \"       M 20 50       L 80 50     \"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"front_line\",\n  stroke: \"#424242\",\n  strokeWidth: 7.5,\n  fill: \"none\",\n  d: \"       M 0 50       L 20 50       L 40 75       L 60 25       L 80 50       L 100 50     \"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(20,50)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_1\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#02b3e4\"\n}));\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(40,75)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_2\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#c341d8\"\n}));\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(60,25)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_3\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#fa750f\"\n}));\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(80,50)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_4\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#e91e63\"\n}));\n\nvar SvgLogoAnimated = function SvgLogoAnimated(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogoAnimated, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo-animated.94624129.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Component } from 'react';\n\nimport { ReactComponent as Logo } from './logo-animated.svg';\n\n// page header display component\nexport class Header extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.showLogo = false;\n\n    // wait a bit for page to load before starting logo animation\n    window.setTimeout(() => this.setState({ showLogo: true }), 1000);\n  }\n\n  // display component\n  render() {\n    let logo;\n\n    if (this.state.showLogo)\n      logo = <Logo className='logo' />;\n    else\n      logo = <svg className='logo' />;\n    return (\n      <header>\n        {logo}\n        <h1>HETMECH</h1>\n        <h2>\n          A project of the{' '}\n          <a href='http://www.greenelab.com/'>Greene Laboratory</a>\n        </h2>\n      </header>\n    );\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50     \"\n});\n\nvar SvgArrowIconBoth = function SvgArrowIconBoth(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconBoth, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-both.5f01d574.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50       M 70 35       L 90 50       L 70 65     \"\n});\n\nvar SvgArrowIconForward = function SvgArrowIconForward(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconForward, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-forward.43aa27a1.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50       M 30 35       L 10 50       L 30 65     \"\n});\n\nvar SvgArrowIconBackward = function SvgArrowIconBackward(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconBackward, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-backward.c6a85500.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746       L 78.2842755245486 50       L 50 50     \"\n});\n\nvar SvgChipGene = function SvgChipGene(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipGene, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-gene.6afa0a5b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipCompound = function SvgChipCompound(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipCompound, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-compound.90909a37.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  clipPath: \"url(#clip)\",\n  d: \"         M 10 110         L 50 0         L 90 110         M 30 70         L 70 70       \"\n}));\n\nvar SvgChipAnatomy = function SvgChipAnatomy(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipAnatomy, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-anatomy.b055d214.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 25 10       L 50 10       A 40 40 0 0 1 50 90       L 25 90       Z     \"\n});\n\nvar SvgChipDisease = function SvgChipDisease(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipDisease, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-disease.1a26261b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 80 18       C 70 14 62 10 50 10       C 42 10 22 14 22 30       C 22 46 38 48.4 50 50       C 62 51.6 78 54 78 70       C 78 86 59 90 50 90       C 38 90 30 86 20 82     \"\n});\n\nvar SvgChipSymptom = function SvgChipSymptom(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipSymptom, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-symptom.2689ac77.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-42,0)\",\n  d: \"       M 80 18       C 70 14 62 10 50 10       C 42 10 22 14 22 30       C 22 46 38 48.4 50 50       C 62 51.6 78 54 78 70       C 78 86 59 90 50 90       C 38 90 30 86 20 82     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(42,0)\",\n  d: \"       M 75 10       L 25 10       L 25 90       L 75 90       M 30 50       L 65 50     \"\n});\n\nvar SvgChipSideEffect = function SvgChipSideEffect(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipSideEffect, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-side-effect.dbe94434.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-44,0)\",\n  d: \"       M 25 10       L 60 10       A 20 20 0 0 1 60 50       A 20 20 0 0 1 60 90       L 25 90       Z       M 30 50       L 60 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(44,0)\",\n  d: \"       M 25 90       L 25 10       L 60 10       A 20 20 0 0 1 60 50       L 30 50     \"\n});\n\nvar SvgChipBiologicalProcess = function SvgChipBiologicalProcess(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipBiologicalProcess, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-biological-process.979f4ab8.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-43,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(48,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipCellularComponent = function SvgChipCellularComponent(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipCellularComponent, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-cellular-component.b874e365.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  strokeLinejoin: \"bevel\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-40,0)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 10 90       L 10 -10       L 50 65       L 90 -10       L 90 90     \"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(60,0)\",\n  d: \"       M 75 10       L 25 10       L 25 90       M 30 50       L 65 50     \"\n});\n\nvar SvgChipMolecularFunction = function SvgChipMolecularFunction(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipMolecularFunction, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-molecular-function.787806a8.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-52,0)\",\n  d: \"     M 25 90     L 25 10     L 60 10     A 20 20 0 0 1 60 50     L 30 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  strokeLinejoin: \"bevel\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(45,0)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 10 -10       L 25 100       L 50 35       L 75 100       L 90 -10     \"\n});\n\nvar SvgChipPathway = function SvgChipPathway(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipPathway, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-pathway.543f179a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-50,0)\",\n  d: \"       M 25 90       L 25 10       L 60 10       A 20 20 0 0 1 60 50       L 30 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(48,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipPharmacologicClass = function SvgChipPharmacologicClass(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipPharmacologicClass, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-pharmacologic-class.b1fbdc49.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './chips.css';\n\nimport { ReactComponent as ArrowBoth } from './arrow-icon-both.svg';\nimport { ReactComponent as ArrowForward } from './arrow-icon-forward.svg';\nimport { ReactComponent as ArrowBackward } from './arrow-icon-backward.svg';\n\nimport { ReactComponent as Gene } from './chip-gene.svg';\nimport { ReactComponent as Compound } from './chip-compound.svg';\nimport { ReactComponent as Anatomy } from './chip-anatomy.svg';\nimport { ReactComponent as Disease } from './chip-disease.svg';\nimport { ReactComponent as Symptom } from './chip-symptom.svg';\nimport { ReactComponent as SideEffect } from './chip-side-effect.svg';\nimport { ReactComponent as BiologicalProcess } from './chip-biological-process.svg';\nimport { ReactComponent as CellularComponent } from './chip-cellular-component.svg';\nimport { ReactComponent as MolecularFunction } from './chip-molecular-function.svg';\nimport { ReactComponent as Pathway } from './chip-pathway.svg';\nimport { ReactComponent as PharmacologicClass } from './chip-pharmacologic-class.svg';\n\n// metanode 'chip' component\n// colored circle with abbreviation text in middle\n// eg (G) for 'gene'\nexport class MetanodeChip extends Component {\n  // display component\n  render() {\n    // get icon\n    let icon;\n    switch (this.props.type) {\n      case 'Gene':\n        icon = <Gene />;\n        break;\n      case 'Compound':\n        icon = <Compound />;\n        break;\n      case 'Anatomy':\n        icon = <Anatomy />;\n        break;\n      case 'Disease':\n        icon = <Disease />;\n        break;\n      case 'Symptom':\n        icon = <Symptom />;\n        break;\n      case 'Side Effect':\n        icon = <SideEffect />;\n        break;\n      case 'Biological Process':\n        icon = <BiologicalProcess />;\n        break;\n      case 'Cellular Component':\n        icon = <CellularComponent />;\n        break;\n      case 'Molecular Function':\n        icon = <MolecularFunction />;\n        break;\n      case 'Pathway':\n        icon = <Pathway />;\n        break;\n      case 'Pharmacologic Class':\n        icon = <PharmacologicClass />;\n        break;\n      default:\n        break;\n    }\n\n    let fillColor = '#424242';\n    let textColor = '#fafafa';\n    const style = this.props.hetioStyles[this.props.type];\n    if (style && style.fill_color)\n      fillColor = style.fill_color;\n    if (style && style.text_color)\n      textColor = style.text_color;\n\n    return (\n      <div className='metanode_chip' style={{ color: textColor }}>\n        <svg viewBox='0 0 100 100'>\n          <circle cx='50' cy='50' r='49' fill={fillColor} />\n        </svg>\n        {icon}\n      </div>\n    );\n  }\n}\n// connect component to global state\nMetanodeChip = connect((state) => ({\n  hetioStyles: state.hetioStyles\n}))(MetanodeChip);\n\n// metaedge 'chip' component\n// svg arrow with abbreviation text above\nexport class MetaedgeChip extends Component {\n  // display component\n  render() {\n    // get edge direction icon\n    let icon;\n    switch (this.props.direction) {\n      case 'backward':\n        icon = <ArrowBackward />;\n        break;\n      case 'forward':\n        icon = <ArrowForward />;\n        break;\n      default:\n        icon = <ArrowBoth />;\n        break;\n    }\n\n    let abbreviation = '';\n    if (this.props.metagraph.kind_to_abbrev)\n      abbreviation = this.props.metagraph.kind_to_abbrev[this.props.type];\n\n    return (\n      <div\n        className='metaedge_chip'\n        data-name={this.props.type}\n        data-abbreviation={abbreviation}\n      >\n        {icon}\n      </div>\n    );\n  }\n}\n// connect component to global state\nMetaedgeChip = connect((state) => ({\n  metagraph: state.metagraph\n}))(MetaedgeChip);\n\n// get html of metapath in form of visualization chips\nexport function metapathChips(edges) {\n  const path = edges.map((entry, index) => {\n    return (\n      <React.Fragment key={index}>\n        <MetanodeChip type={entry[0]} />\n        <MetaedgeChip type={entry[2]} direction={entry[3]} />\n        {index === edges.length - 1 && <MetanodeChip type={entry[1]} />}\n      </React.Fragment>\n    );\n  });\n\n  return path;\n}\n\n// get html of path in form of visualization chips\nexport function pathChips(path, expanded) {\n  return path.map((entry, index) => {\n    if (entry.element === 'node') {\n      return (\n        <NodeChip\n          key={index}\n          type={entry.type}\n          name={entry.name}\n          expanded={expanded}\n        />\n      );\n    }\n    if (entry.element === 'edge') {\n      return (\n        <MetaedgeChip\n          key={index}\n          type={entry.type}\n          direction={entry.direction}\n        />\n      );\n    }\n    return '';\n  });\n}\n\n// node 'chip' component\nexport class NodeChip extends Component {\n  // display component\n  render() {\n    let fillColor = '#424242';\n    let textColor = '#fafafa';\n    const style = this.props.hetioStyles[this.props.type];\n    if (style && style.fill_color)\n      fillColor = style.fill_color;\n    if (style && style.text_color)\n      textColor = style.text_color;\n\n    return (\n      <span\n        className='node_chip'\n        style={{ background: fillColor, color: textColor }}\n        data-expanded={this.props.expanded}\n      >\n        {this.props.name}\n      </span>\n    );\n  }\n}\n// connect component to global state\nNodeChip = connect((state) => ({\n  hetioStyles: state.hetioStyles\n}))(NodeChip);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Component } from 'react';\nimport Fade from '@material-ui/core/Fade';\n\nimport './tooltip.css';\n\n// open delay in ms\nconst delay = 1000;\n\n// tooltip (helper text) popup component\nexport class Tooltip extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.open = false;\n    this.state.x = 0;\n    this.state.y = 0;\n    this.state.opacity = 0;\n\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.openTooltip = this.openTooltip.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n  }\n\n  // when mouse enters target\n  onMouseEnter(event) {\n    const target = event.target;\n    // delay opening tooltip\n    window.setTimeout(() => this.openTooltip(target), delay);\n    // track hover state\n    this.setState({ hover: true });\n  }\n\n  // open tooltip\n  openTooltip(target) {\n    // if target not being hovered anymore, cancel open\n    // if target not specified, exit\n    if (!this.state.hover || !target) {\n      this.setState({ open: false });\n      return;\n    }\n\n    // get x/y position of target to pass to tooltip popup\n    const left =\n      target.getBoundingClientRect().left + document.documentElement.scrollLeft;\n    const top =\n      target.getBoundingClientRect().top + document.documentElement.scrollTop;\n\n    // avoid scrunching tooltip too skinny when close to right side of view\n    const x = Math.min(left, document.body.clientWidth - 200);\n    const y = top;\n\n    // open tooltip and update x/y position\n    this.setState({ open: true, x: x, y: y });\n  }\n\n  // when mouse leaves target\n  onMouseLeave() {\n    this.setState({ hover: false, open: false });\n  }\n\n  // display component\n  render() {\n    // if no specified text, skip attaching events and render\n    if (!this.props.text)\n      return <>{this.props.children}</>;\n\n    // mouse handler props to attach to children\n    const props = {\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave\n    };\n\n    // attach handler props to children\n    const children = React.Children.map(this.props.children, (element) => {\n      // if element is react element, create clone with attached props\n      if (React.isValidElement(element))\n        return React.cloneElement(element, props);\n      // if element is text node, wrap in span and attach props\n      else if (typeof element === 'string')\n        return <span {...props}>{element}</span>;\n      // otherwise, pass element through untouched\n      else\n        return element;\n    });\n\n    return (\n      <>\n        {children}\n        {this.state.open && (\n          <Popup\n            text={this.props.text}\n            open={this.state.open}\n            x={this.state.x}\n            y={this.state.y}\n          />\n        )}\n      </>\n    );\n  }\n}\n\n// popup component to display tooltip and text\n// make React 'portal' to append tooltip to body instead of parent\n// (allows tooltip to pop out of containing elements like tables)\nclass Popup extends Component {\n  render() {\n    return ReactDOM.createPortal(\n      <Fade in={this.props.open}>\n        <div\n          className='tooltip'\n          style={{\n            left: this.props.x + 'px',\n            top: this.props.y + 'px'\n          }}\n        >\n          {this.props.text}\n        </div>\n      </Fade>,\n      document.body\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faHighlighter } from '@fortawesome/free-solid-svg-icons';\n\nimport { Tooltip } from './tooltip.js';\nimport './buttons.css';\n\n// button component\nexport class Button extends Component {\n  // display component\n  render() {\n    return (\n      <Tooltip text={this.props.tooltipText}>\n        <button\n          className={this.props.className}\n          onClick={(event) => {\n            if (event.ctrlKey) {\n              if (this.props.onCtrlClick)\n                this.props.onCtrlClick();\n            } else if (event.shiftKey) {\n              if (this.props.onShiftClick)\n                this.props.onShiftClick();\n            } else if (this.props.onClick)\n              this.props.onClick();\n          }}\n        >\n          {this.props.children}\n        </button>\n      </Tooltip>\n    );\n  }\n}\n\n// text button component\n// link colored button with text and icon to right\nexport class TextButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className={this.props.className + ' text_button small'}\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.text && <span>{this.props.text}</span>}\n        <FontAwesomeIcon icon={this.props.icon} className='text_button_icon' />\n      </Button>\n    );\n  }\n}\n\n// checkbox button component\nexport class Checkbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faCheck} />\n        )}\n      </Button>\n    );\n  }\n}\n\n// eye checkbox button component\nexport class EyeCheckbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faEye} />\n        )}\n      </Button>\n    );\n  }\n}\n\n// highlighter checkbox button component\nexport class HighlighterCheckbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faHighlighter} />\n        )}\n      </Button>\n    );\n  }\n}\n","// url for hetmech specific definitions (path count, p value, dwpc, etc)\nimport hetmechDefinitions from './definitions.json';\n// url for metagraph (node and edge metatypes and abbreviations)\nconst metagraphUrl =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/hetnet/json/hetionet-v1.0-metagraph.json';\n// url for hetio definitions (metanodes, properties, etc)\nconst hetioDefinitions =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/describe/definitions.json';\n// url for hetio styles (metanode fill/text color, etc)\nconst hetioStyles =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/describe/styles.json';\n// url for node search\nconst nodeSearchServer = 'https://search-api.het.io/v1/nodes/';\n// url for random node pair\nconst randomNodeServer = 'https://search-api.het.io/v1/random-node-pair/';\n// url for metapaths search\nconst metapathSearchServer = 'https://search-api.het.io/v1/query-metapaths/';\n// url for paths search\nconst pathSearchServer = 'https://search-api.het.io/v1/query-paths/';\n\n// get resource at url and parse as json\nexport function fetchJson(url) {\n  return fetch(url)\n    .then((response) => response.json())\n    .then((results) => {\n      return results || {};\n    })\n    .catch((error) => {\n      console.log(error);\n      return {};\n    });\n}\n\n// get metagraph\nexport function getMetagraph() {\n  return fetchJson(metagraphUrl);\n}\n\n// get hetio definitions\nexport function getHetioDefinitions() {\n  return fetchJson(hetioDefinitions);\n}\n\n// get hetio styles\nexport function getHetioStyles() {\n  return fetchJson(hetioStyles);\n}\n\n// get hetmech definitions\nexport function getHetmechDefinitions() {\n  return hetmechDefinitions;\n}\n\n// lookup node by id\nexport function lookupNodeById(id) {\n  if (!id)\n    return null;\n  const query = nodeSearchServer + id;\n  return fetchJson(query);\n}\n\n// search for nodes by string, and with metatype filter list\n// accepts comma-separated list of abbreviations of metatypes to include\nexport function searchNodes(searchString, metatypes) {\n  const params = new URLSearchParams();\n  params.set('search', searchString);\n  params.set('limit', '100');\n  if (metatypes)\n    params.set('metanodes', metatypes);\n  const query = nodeSearchServer + '?' + params.toString();\n  return fetchJson(query).then((response) => {\n    return response.results;\n  });\n}\n\n// get random source/target node pair that has metapath(s)\nexport function getRandomNodePair() {\n  const query = randomNodeServer;\n  return fetchJson(query).then((response) => {\n    return response;\n  });\n}\n\n// search for metapaths by source/target id\nexport function searchMetapaths(sourceId, targetId) {\n  const params = new URLSearchParams();\n  params.set('source', sourceId);\n  params.set('target', targetId);\n  const query = metapathSearchServer + '?' + params.toString();\n  return fetchJson(query).then((response) => {\n    return response.path_counts;\n  });\n}\n\n// search for paths by metapaths\nexport function searchPaths(sourceId, targetId, metapath) {\n  const params = new URLSearchParams();\n  params.set('source', sourceId);\n  params.set('target', targetId);\n  params.set('metapath', metapath);\n  const query = pathSearchServer + '?' + params.toString();\n  return fetchJson(query).then((response) => {\n    return response;\n  });\n}\n","// actions to update global state variables\n\n// set definitions\nexport function setDefinitions({\n  metagraph,\n  hetioDefinitions,\n  hetioStyles,\n  hetmechDefinitions\n}) {\n  return {\n    type: 'set_definitions',\n    payload: {\n      metagraph: metagraph,\n      hetioDefinitions: hetioDefinitions,\n      hetioStyles: hetioStyles,\n      hetmechDefinitions: hetmechDefinitions\n    }\n  };\n}\n\n// update source and/or target node\nexport function updateSourceTargetNodes({ sourceNode, targetNode }) {\n  return {\n    type: 'update_source_target_nodes',\n    payload: { sourceNode: sourceNode, targetNode: targetNode }\n  };\n}\n\n// swap source/target node\nexport function swapSourceTargetNodes() {\n  return {\n    type: 'swap_source_target_nodes'\n  };\n}\n\n// update metapaths\nexport function updateMetapaths({ metapaths }) {\n  return {\n    type: 'update_metapaths',\n    payload: { metapaths: metapaths }\n  };\n}\n\n// update path queries\nexport function updatePathQueries({ pathQueries }) {\n  return {\n    type: 'update_path_queries',\n    payload: { pathQueries: pathQueries }\n  };\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Downshift from 'downshift';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faDice } from '@fortawesome/free-solid-svg-icons';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport { MetanodeChip } from './chips.js';\nimport { Tooltip } from './tooltip.js';\nimport { Button } from './buttons.js';\nimport { searchNodes } from './backend-query.js';\nimport { lookupNodeById } from './backend-query.js';\nimport { getRandomNodePair } from './backend-query.js';\nimport { updateSourceTargetNodes } from './actions.js';\nimport { swapSourceTargetNodes } from './actions.js';\nimport { sortCustom } from './util.js';\nimport './node-search.css';\n\n// node search section component\n// target and source node search boxes and swap button\nexport class NodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.filters = [];\n    this.state.filterString = '';\n\n    this.updateFilters = this.updateFilters.bind(this);\n  }\n\n  // get filter state from filter child component\n  updateFilters(filters, filterString) {\n    this.setState({ filters: filters, filterString: filterString });\n  }\n\n  // display component\n  render() {\n    return (\n      <section className='center'>\n        <NodeSearchContext.Provider\n          value={{\n            filterString: this.state.filterString\n          }}\n        >\n          <Filters\n            filters={this.state.filters}\n            filterString={this.state.filterString}\n            updateFilters={this.updateFilters}\n          />\n          <SourceNodeSearch />\n          <SwapButton />\n          <RandomButton />\n          <TargetNodeSearch />\n        </NodeSearchContext.Provider>\n      </section>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst NodeSearchContext = React.createContext({});\n\n// filter filter component\n// toggle buttons to specify which types of nodes to limit search to\nclass Filters extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.solo = this.solo.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.metagraph.metanode_kinds === this.props.metagraph.metanode_kinds\n    )\n      return;\n\n    // initialize filters\n    let filters = [];\n    const filterString = '';\n\n    for (const filter of this.props.metagraph.metanode_kinds)\n      filters.push({ name: filter, active: true });\n\n    // display filters in custom order\n    const order = [\n      'Gene',\n      'Compound',\n      'Anatomy',\n      'Disease',\n      'Symptom',\n      'Side Effect',\n      'Biological Process',\n      'Cellular Component',\n      'Molecular Function',\n      'Pathway',\n      'Pharmacolocic Class'\n    ];\n    filters = sortCustom(filters, order, 'name');\n\n    this.props.updateFilters(filters, filterString);\n  }\n\n  // checks whether all filters are active\n  allOn(filters) {\n    for (const filter of filters) {\n      if (!filter.active)\n        return false;\n    }\n\n    return true;\n  }\n\n  // checks whether all filters besides the specified filter are off\n  allOthersOff(filters, type) {\n    for (const filter of filters) {\n      if (type !== filter.name && filter.active)\n        return false;\n    }\n\n    return true;\n  }\n\n  // toggles the specified filters on/off\n  toggle(type) {\n    const filters = this.props.filters.slice();\n\n    for (const filter of filters) {\n      if (filter.name === type)\n        filter.active = !filter.active;\n    }\n\n    this.props.updateFilters(filters, this.toString(filters));\n  }\n\n  // solo filter (turn all others off)\n  solo(type) {\n    const filters = this.props.filters.slice();\n    const allOthersOff = this.allOthersOff(filters, type);\n\n    for (const filter of filters) {\n      if (allOthersOff)\n        filter.active = true;\n      else {\n        if (type === filter.name)\n          filter.active = true;\n        else\n          filter.active = false;\n      }\n    }\n\n    this.props.updateFilters(filters, this.toString(filters));\n  }\n\n  // turn state of filters into string query list of metanode metagraph\n  toString(filters) {\n    if (this.allOn(filters))\n      return '';\n\n    const list = [];\n    for (const filter of filters) {\n      if (filter.active)\n        list.push(this.props.metagraph.kind_to_abbrev[filter.name]);\n    }\n\n    return list.join(',');\n  }\n\n  // display component\n  render() {\n    // make list of filter buttons\n    const buttons = this.props.filters.map((filter, index) => (\n      <FilterButton\n        key={index}\n        name={filter.name}\n        tooltipText={this.props.hetioDefinitions.metanodes[filter.name]}\n        active={filter.active}\n        toggle={this.toggle}\n        solo={this.solo}\n      />\n    ));\n\n    return <>{buttons}</>;\n  }\n}\n// connect component to global state\nFilters = connect((state) => ({\n  metagraph: state.metagraph,\n  hetioDefinitions: state.hetioDefinitions\n}))(Filters);\n\n// filter button component\nclass FilterButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className={\n          'node_search_filter_button' +\n          (this.props.active ? '' : ' node_search_filter_button_off')\n        }\n        tooltipText={this.props.tooltipText}\n        onClick={() => this.props.toggle(this.props.name)}\n        onCtrlClick={() => this.props.solo(this.props.name)}\n      >\n        <MetanodeChip type={this.props.name} />\n        {this.props.name}\n      </Button>\n    );\n  }\n}\n\n// source node search box component\nclass SourceNodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  // when user makes a new node selection\n  onChange(value) {\n    this.props.dispatch(updateSourceTargetNodes({ sourceNode: value }));\n  }\n\n  // display component\n  render() {\n    return (\n      <SearchBox\n        label='Source Node'\n        tooltipText='The starting node of the paths'\n        value={this.props.node}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n// connect component to global state\nSourceNodeSearch = connect((state) => ({\n  node: state.sourceNode\n}))(SourceNodeSearch);\n\n// source node search box component\nclass TargetNodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  // when user makes a new node selection\n  onChange(value) {\n    this.props.dispatch(updateSourceTargetNodes({ targetNode: value }));\n    if (value)\n      document.activeElement.blur();\n  }\n\n  // display component\n  render() {\n    return (\n      <SearchBox\n        label='Target Node'\n        tooltipText='The ending node of the paths'\n        value={this.props.node}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n// connect component to global state\nTargetNodeSearch = connect((state) => ({\n  node: state.targetNode\n}))(TargetNodeSearch);\n\n// search box component with dropdown autocomplete/autosuggest\nclass SearchBox extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.searchResults = [];\n\n    this.inputRef = React.createRef();\n    this.formRef = React.createRef();\n\n    this.onInput = this.onInput.bind(this);\n  }\n\n  // when user types into or modifies text in text box\n  onInput(searchString) {\n    searchNodes(searchString, this.context.filterString).then((results) =>\n      this.setState({ searchResults: results || [] })\n    );\n  }\n\n  // convert result/selection item to string to display in text box\n  itemToString(item) {\n    if (item && item.name)\n      return item.name;\n    else\n      return '';\n  }\n\n  // display component\n  render() {\n    return (\n      <Downshift\n        onChange={this.props.onChange}\n        onInputValueChange={this.onInput}\n        itemToString={this.itemToString}\n        selectedItem={this.props.value}\n      >\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          isOpen,\n          selectedItem,\n          highlightedIndex,\n          clearSelection\n        }) => (\n          <div className='node_search_form' ref={this.formRef}>\n            <span className='small light node_search_form_label'>\n              <Tooltip text={this.props.tooltipText}>\n                {this.props.label}\n              </Tooltip>\n            </span>\n            <TextBox\n              inputRef={this.inputRef}\n              getInputProps={getInputProps}\n              clearSelection={clearSelection}\n              selectedItem={selectedItem}\n            />\n            <Dropdown\n              isOpen={isOpen}\n              inputRef={this.inputRef}\n              formRef={this.formRef}\n              getMenuProps={getMenuProps}\n              searchResults={this.state.searchResults}\n              selectedItem={selectedItem}\n              highlightedIndex={highlightedIndex}\n              getItemProps={getItemProps}\n            />\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n// connect component to context component\nSearchBox.contextType = NodeSearchContext;\n\n// text box sub-component of search box component\nclass TextBox extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.focused = false;\n\n    this.onInput = this.onInput.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  // when user types into text box\n  onInput(event) {\n    if (event.target.value === '')\n      this.props.clearSelection();\n  }\n\n  // when user focuses text box\n  onFocus() {\n    this.setState({ focused: true });\n  }\n\n  // when user unfocuses text box\n  onBlur() {\n    this.setState({ focused: false });\n  }\n\n  // display component\n  render() {\n    let overlay = <></>;\n\n    const showOverlay =\n      !this.state.focused &&\n      this.props.selectedItem.metanode &&\n      this.props.selectedItem.name;\n\n    if (showOverlay) {\n      overlay = (\n        <div className='node_search_field_overlay'>\n          <MetanodeChip type={this.props.selectedItem.metanode} />\n          <span className='node_search_results_item_name nowrap'>\n            {this.props.selectedItem.name}\n          </span>\n        </div>\n      );\n    }\n    return (\n      <>\n        <TextField\n          {...this.props.getInputProps({\n            onChange: this.onInput\n          })}\n          inputRef={this.props.inputRef}\n          placeholder='id, name, or metanode'\n          classes={{ root: 'node_search_field_container' }}\n          InputProps={{\n            classes: {\n              root: 'node_search_field',\n              focused: 'node_search_field_focused',\n              input: showOverlay\n                ? 'node_search_input_blank'\n                : 'node_search_input'\n            }\n          }}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n        />\n        {overlay}\n        <div className='node_search_icon'>\n          <FontAwesomeIcon icon={faSearch} />\n        </div>\n      </>\n    );\n  }\n}\n\n// dropdown sub-component of search box component\nclass Dropdown extends Component {\n  // display component\n  render() {\n    return (\n      <Popper\n        open={this.props.isOpen}\n        anchorEl={this.props.inputRef.current}\n        placement='bottom-start'\n        className='node_search_results_popper'\n        container={this.props.formRef.current}\n        disablePortal={true}\n        {...this.props.getMenuProps()}\n      >\n        <Paper className='node_search_results_paper'>\n          {this.props.searchResults.map((result, index) => (\n            <MenuItem\n              className={\n                'node_search_results_item' +\n                (this.props.selectedItem.id === result.id\n                  ? ' node_search_results_item_selected'\n                  : '') +\n                (this.props.highlightedIndex === index\n                  ? ' node_search_results_item_selected'\n                  : '')\n              }\n              {...this.props.getItemProps({\n                item: result,\n                key: index\n              })}\n            >\n              <MetanodeChip type={result.metanode} />\n              <span className='node_search_results_item_name'>\n                {result.name}\n              </span>\n              <span className='node_search_results_item_identifier'>\n                {result.identifier}\n              </span>\n            </MenuItem>\n          ))}\n        </Paper>\n      </Popper>\n    );\n  }\n}\n\n// swap button component\n// switches source/target node\nclass SwapButton extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  // when user clicks button\n  onClick() {\n    this.props.dispatch(swapSourceTargetNodes());\n  }\n\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText='Swap source and target node'\n        className='node_search_swap_button'\n        onClick={this.onClick}\n      >\n        <FontAwesomeIcon icon={faExchangeAlt} />\n      </Button>\n    );\n  }\n}\n// connect component to global state\nSwapButton = connect()(SwapButton);\n\n// random button component\n// picks random source/target node with metapaths\nclass RandomButton extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  // when user clicks button\n  onClick() {\n    getRandomNodePair()\n      .then((results) => {\n        return Promise.all([\n          lookupNodeById(results.source_id),\n          lookupNodeById(results.target_id)\n        ]);\n      })\n      .then(([newSourceNode, newTargetNode]) =>\n        this.props.dispatch(\n          updateSourceTargetNodes({\n            sourceNode: newSourceNode,\n            targetNode: newTargetNode\n          })\n        )\n      );\n  }\n\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText='Get random source/target node pair that has at least one metapath result'\n        className='node_search_swap_button'\n        onClick={this.onClick}\n      >\n        <FontAwesomeIcon icon={faDice} />\n      </Button>\n    );\n  }\n}\n// connect component to global state\nRandomButton = connect()(RandomButton);\n","import React from 'react';\nimport { Component } from 'react';\n\nimport './dynamic-field.css';\n\n// expandable textbox-like component, similar to excel spreadsheet cell\n// when focused, field expands and prop 'fullValue' displayed,\n// otherwise, prop 'value' displayed (often 'fullValue' rounded off)\nexport class DynamicField extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.focused = false;\n    this.field = React.createRef();\n\n    this.onClick = this.onClick.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n  }\n\n  // when field is clicked or touched\n  onClick(event) {\n    // force click on link in field if link was target of click\n    if (event && event.target && event.target.tagName.toLowerCase() === 'a')\n      event.target.click();\n    // force focus on field\n    this.field.current.focus();\n  }\n\n  // when field loses focus\n  onBlur() {\n    this.setState({ focused: false }, this.deselectAll);\n  }\n\n  // when field is focused (tabbed to, clicked, etc)\n  onFocus() {\n    this.setState({ focused: true }, this.selectAll);\n  }\n\n  // deselect any selected text in window\n  deselectAll() {\n    window.getSelection().empty();\n  }\n\n  // select contents of field\n  selectAll() {\n    // set delay for select to make sure component has rendered\n    window.setTimeout(function() {\n      window.getSelection().empty();\n      window.getSelection().selectAllChildren(document.activeElement);\n    }, 10);\n  }\n\n  // display component\n  render() {\n    let displayValue;\n\n    // show full value if focused, or short value if not\n    if (this.state.focused)\n      displayValue = this.props.fullValue || this.props.value;\n    else\n      displayValue = this.props.value;\n\n    // if value just text, set 'nowrap' to truncate with ellipsis\n    if (typeof displayValue === 'string')\n      displayValue = <span className='nowrap'>{displayValue}</span>;\n\n    return (\n      <div\n        ref={this.field}\n        tabIndex='0'\n        onClick={this.onClick}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        className={'dynamic_field ' + (this.props.className || '')}\n        data-expanded={this.state.focused}\n      >\n        {displayValue}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { Button } from './buttons.js';\nimport './collapsible-section.css';\n\n// accordion (collapse/expand) section component\nexport class CollapsibleSection extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.collapsed = false;\n\n    this.loadState = this.loadState.bind(this);\n    this.saveState = this.saveState.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  // when component mounts\n  componentDidMount() {\n    if (this.loadState())\n      this.setState({ collapsed: true });\n  }\n\n  // load collapsed state from local storage if exists\n  loadState() {\n    const key = this.props.label;\n    return key && window.localStorage.getItem(key) === 'true';\n  }\n\n  // save collapse state to local storage\n  saveState(collapsed) {\n    const key = this.props.label;\n    if (key)\n      window.localStorage.setItem(key, String(String(collapsed) === 'true'));\n  }\n\n  // toggle collapse/expand\n  toggle() {\n    this.setState({ collapsed: !this.state.collapsed });\n    this.saveState(!this.state.collapsed);\n  }\n\n  // display component\n  render() {\n    return (\n      <div\n        className='collapsible_section'\n        data-collapsed={this.state.collapsed}\n      >\n        <Button\n          tooltipText={this.props.tooltipText}\n          className='collapsible_section_header'\n          onClick={this.toggle}\n        >\n          <div>{this.props.label}</div>\n          <FontAwesomeIcon\n            icon={this.state.collapsed ? faAngleUp : faAngleDown}\n          />\n        </Button>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { MetanodeChip } from './chips.js';\nimport { Tooltip } from './tooltip.js';\nimport { TextButton } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { shortenUrl } from './util.js';\nimport { sortCustom } from './util.js';\n\n// node results section component\n// details about source/target nodes\nexport class NodeResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <NodeCard label='Source Node' node={this.props.sourceNode} />\n        <NodeCard label='Target Node' node={this.props.targetNode} />\n      </section>\n    );\n  }\n}\n// connect component to global state\nNodeResults = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode\n}))(NodeResults);\n\n// node 'card' component\n// displays details about source/target node\nclass NodeCard extends Component {\n  // display component\n  render() {\n    return (\n      <CollapsibleSection\n        label={this.props.label}\n        tooltipText={'Details about the ' + this.props.label.toLowerCase()}\n      >\n        {this.props.node.name ? (\n          <TableFull node={this.props.node} />\n        ) : (\n          <TableEmpty label={this.props.label} />\n        )}\n      </CollapsibleSection>\n    );\n  }\n}\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.showMore = false;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n  }\n\n  // toggle show/hide extra fields\n  toggleShowMore() {\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // display row entries\n  rows() {\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.nodes\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n    // get primary fields from top level of node\n    let primaryFields = ['name', 'metanode', 'source', 'identifier', 'id'];\n    // get first/second column text (key/value) for each field\n    primaryFields = primaryFields.map((field) => {\n      // handle special field cases\n      let specialSecondCol;\n      if (field === 'metanode') {\n        // make text with metanode chip\n        specialSecondCol = (\n          <>\n            <MetanodeChip type={this.props.node[field]} />\n            <span className='nowrap'>{this.props.node[field]}</span>\n          </>\n        );\n      } else if (field === 'source') {\n        // make link\n        const linkUrl = this.props.node.url || this.props.node.properties.url || '';\n        let linkText = this.props.node.properties.source || linkUrl;\n        linkText = shortenUrl(linkText);\n        specialSecondCol = (\n          <a className='nowrap' href={linkUrl}>\n            {linkText}\n          </a>\n        );\n      }\n      // get first/second column text (key/value) for each field\n      return {\n        firstCol: field,\n        secondCol: specialSecondCol || String(this.props.node[field]),\n        tooltipText: tooltipText[field]\n      };\n    });\n    // remove id and identifier if table not expanded\n    if (!this.state.showMore) {\n      primaryFields.splice(\n        primaryFields.findIndex((field) => field.firstCol === 'id'),\n        1\n      );\n      primaryFields.splice(\n        primaryFields.findIndex((field) => field.firstCol === 'identifier'),\n        1\n      );\n    }\n\n    // get 'extra fields' from node 'properties' field\n    let extraFields = [];\n    if (this.state.showMore) {\n      extraFields = Object.keys(this.props.node.properties);\n      // remove source and url, since they are combined and added to\n      // primary fields above\n      extraFields.splice(extraFields.indexOf('source'), 1);\n      extraFields.splice(extraFields.indexOf('url'), 1);\n      // get first/second column text (key/value) for each field\n      extraFields = extraFields.map((field) => ({\n        firstCol: field,\n        secondCol: String(this.props.node.properties[field]),\n        tooltipText: tooltipText[field]\n      }));\n    }\n\n    // combine primary and extra fields\n    let fields = primaryFields.concat(extraFields);\n\n    // display fields in custom order\n    const order = [\n      'name',\n      'metanode',\n      'source',\n      'description',\n      'identifier',\n      'id'\n    ];\n    fields = sortCustom(fields, order, 'firstCol');\n\n    // make rows from fields\n    return fields.map((field, index) => {\n      return (\n        <tr key={index}>\n          <td className='col_s small light'>\n            <Tooltip text={field.tooltipText}>{field.firstCol}</Tooltip>\n          </td>\n          <td>\n            <DynamicField value={field.secondCol} className='left' />\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  // display component\n  render() {\n    return (\n      <table className='node_results_table'>\n        <tbody>\n          {this.rows()}\n          <tr>\n            <td className='center' colSpan='2'>\n              <TextButton\n                text={this.state.showMore ? 'show less ' : 'show more '}\n                icon={this.state.showMore ? faAngleUp : faAngleDown}\n                className='link_button small'\n                onClick={this.toggleShowMore}\n                tooltipText='Show more information about the node'\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n// connect component to global state\nTableFull = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableFull);\n\n// table with no results component\nclass TableEmpty extends Component {\n  render() {\n    return (\n      <table className='node_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>\n              select a {this.props.label.toLowerCase()}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { metapathChips } from './chips.js';\nimport { Button } from './buttons.js';\nimport { TextButton } from './buttons.js';\nimport { Checkbox } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { makeFilenameFriendly } from './util.js';\nimport { downloadCsv } from './util.js';\nimport { toFixed } from './util.js';\nimport { toExponential } from './util.js';\nimport { toGradient } from './util.js';\nimport { sortCustom } from './util.js';\nimport { updateMetapaths } from './actions.js';\nimport './metapath-results.css';\n\n// path results section component\nexport class MetapathResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <CollapsibleSection\n          label='Metapaths'\n          tooltipText='Metapaths of length <= 3 between the source and target node'\n        >\n          {this.props.metapaths.length > 0 ? <TableFull /> : <TableEmpty />}\n        </CollapsibleSection>\n      </section>\n    );\n  }\n}\n// connect component to global state\nMetapathResults = connect((state) => ({\n  metapaths: state.metapaths\n}))(MetapathResults);\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.showMore = false;\n    this.state.allChecked = false;\n    this.state.sortColumn = 'adjusted_p_value';\n    this.state.sortUp = false;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n    this.toggleAllChecked = this.toggleAllChecked.bind(this);\n    this.allChecked = this.allChecked.bind(this);\n    this.checkAll = this.checkAll.bind(this);\n    this.uncheckAll = this.uncheckAll.bind(this);\n    this.allOthersUnchecked = this.allOthersUnchecked.bind(this);\n    this.toggleChecked = this.toggleChecked.bind(this);\n    this.soloChecked = this.soloChecked.bind(this);\n    this.changeSort = this.changeSort.bind(this);\n    this.downloadCsv = this.downloadCsv.bind(this);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (this.props.metapaths !== prevProps.metapaths)\n      this.updateAllChecked();\n  }\n\n  // checks if all rows checked and updates state\n  updateAllChecked() {\n    if (this.allChecked())\n      this.setState({ allChecked: true });\n    else\n      this.setState({ allChecked: false });\n  }\n\n  // toggle show more/less\n  toggleShowMore(event) {\n    if (event)\n      event.preventDefault();\n\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // toggle check/uncheck all\n  toggleAllChecked() {\n    if (this.allChecked())\n      this.uncheckAll();\n    else\n      this.checkAll();\n  }\n\n  // checks whether all metapaths are checked\n  allChecked() {\n    for (const metapath of this.props.metapaths) {\n      if (!metapath.checked)\n        return false;\n    }\n\n    return true;\n  }\n\n  // makes all metapaths checked\n  checkAll() {\n    const metapaths = this.props.metapaths.slice();\n\n    for (const metapath of this.props.metapaths)\n      metapath.checked = true;\n\n    this.props.dispatch(updateMetapaths({ metapaths: metapaths }));\n  }\n\n  // makes all metapaths unchecked\n  uncheckAll() {\n    const metapaths = this.props.metapaths.slice();\n\n    for (const metapath of this.props.metapaths)\n      metapath.checked = false;\n\n    this.props.dispatch(updateMetapaths({ metapaths: metapaths }));\n  }\n\n  // checks whether all metapaths besides the specified are unchecked\n  allOthersUnchecked(id) {\n    for (const metapath of this.props.metapaths) {\n      if (id !== metapath.id && metapath.checked)\n        return false;\n    }\n\n    return true;\n  }\n\n  // toggles the specified metapaths on/off\n  toggleChecked(id) {\n    const metapaths = this.props.metapaths.slice();\n\n    for (const metapath of metapaths) {\n      if (metapath.id === id)\n        metapath.checked = !metapath.checked;\n    }\n\n    this.props.dispatch(updateMetapaths({ metapaths: metapaths }));\n  }\n\n  // solo metapath (turn all others off)\n  soloChecked(id) {\n    const metapaths = this.props.metapaths.slice();\n    const allOthersUnchecked = this.allOthersUnchecked(id);\n\n    for (const metapath of metapaths) {\n      if (allOthersUnchecked || id === metapath.id)\n        metapath.checked = true;\n      else\n        metapath.checked = false;\n    }\n\n    this.props.dispatch(updateMetapaths({ metapaths: metapaths }));\n  }\n\n  // change which column table is sorted by\n  changeSort(sortColumn) {\n    const newState = {};\n    newState.sortColumn = sortColumn;\n\n    if (sortColumn === this.state.sortColumn)\n      newState.sortUp = !this.state.sortUp;\n    else\n      newState.sortUp = true;\n\n    this.setState(newState);\n  }\n\n  // compare numbers (for sorting)\n  compareNumbers(a, b, key) {\n    // parse as numbers\n    const comparison = Number(a[key]) - Number(b[key]);\n    if (!Number.isNaN(comparison))\n      return comparison;\n\n    // otherwise parse as strings and compare alphabetically\n    if (a[key] < b[key])\n      return -1;\n    else if (a[key] > b[key])\n      return 1;\n    else\n      return 0;\n  }\n\n  // compare metapaths (for sorting)\n  compareMetapaths(a, b, key) {\n    a = a[key];\n    b = b[key];\n    // first by length\n    if (a.length < b.length)\n      return -1;\n    else if (a.length > b.length)\n      return 1;\n    else {\n      // then alphabetically\n      if (a < b)\n        return -1;\n      else if (a > b)\n        return 1;\n      else\n        return 0;\n    }\n  }\n\n  // download table data as .csv file\n  downloadCsv() {\n    if (\n      !this.props.metapaths.length ||\n      !this.props.sourceNode.name ||\n      !this.props.targetNode.name\n    )\n      return;\n\n    const tableData = makeMetapathsTable(this.props.metapaths);\n    const filename = [\n      'metapaths',\n      makeFilenameFriendly(this.props.sourceNode.name),\n      makeFilenameFriendly(this.props.targetNode.name)\n    ].join('_');\n    downloadCsv(tableData, filename);\n  }\n\n  // display component\n  render() {\n    // sort metapaths by specified column\n    const sortedMetapaths = this.props.metapaths;\n    const sortColumn = this.state.sortColumn;\n\n    // sort by appropriate field\n    if (sortColumn === 'metapath_metaedges')\n      sortedMetapaths.sort((a, b) => this.compareMetapaths(a, b, sortColumn));\n    else\n      sortedMetapaths.sort((a, b) => this.compareNumbers(a, b, sortColumn));\n\n    // reverse sort direction\n    if (this.state.sortUp)\n      sortedMetapaths.reverse();\n\n    // count metapaths\n    const metapathCount = sortedMetapaths.length;\n    let metapathSelectedCount = 0;\n    for (const metapath of sortedMetapaths) {\n      if (metapath.checked)\n        metapathSelectedCount++;\n    }\n\n    return (\n      <TableContext.Provider\n        value={{\n          sortedMetapaths: sortedMetapaths,\n          showMore: this.state.showMore,\n          allChecked: this.state.allChecked,\n          toggleAllChecked: this.toggleAllChecked,\n          toggleChecked: this.toggleChecked,\n          soloChecked: this.soloChecked,\n          sortColumn: this.state.sortColumn,\n          sortUp: this.state.sortUp,\n          changeSort: this.changeSort\n        }}\n      >\n        <div className='table_attic'>\n          <TextButton\n            text='.csv'\n            icon={faDownload}\n            className='link_button small'\n            onClick={this.downloadCsv}\n            tooltipText='Download table as .csv file'\n          />\n          <TextButton\n            text={this.state.showMore ? 'show less ' : 'show more '}\n            icon={this.state.showMore ? faAngleLeft : faAngleRight}\n            className='link_button small'\n            onClick={this.toggleShowMore}\n            tooltipText='Expand table and show more columns'\n          />\n          <div className='small light right'>\n            {metapathCount} results, {metapathSelectedCount} selected\n          </div>\n        </div>\n        <div className='table_container' data-expanded={this.state.showMore}>\n          <table className='metapath_results_table'>\n            <TableHead />\n            <TableBody />\n          </table>\n        </div>\n      </TableContext.Provider>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst TableContext = React.createContext({});\n// connect component to global state\nTableFull = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metapaths: state.metapaths\n}))(TableFull);\n\n// table header component\n// contains column labels and sort buttons\nclass TableHead extends Component {\n  // display component\n  render() {\n    // extra 'super-grouping' row at top of table\n    const extraRow = (\n      <tr>\n        <td className='col_xs' />\n        <td className='col_l' />\n        <td className='col_s' />\n        <td className='col_m' />\n        <td className='col_m' />\n        <td className='col_s' />\n        <td className='col_xxl center' colSpan='6'>\n          <div className='divider'>Null DWPC distribution information</div>\n        </td>\n      </tr>\n    );\n\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.nodes\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n    // primary columns\n    const cols = (\n      <>\n        <td className='col_xs'>\n          <Checkbox\n            checked={this.context.allChecked}\n            onClick={() => this.context.toggleAllChecked()}\n            onCtrlClick={() => this.context.toggleAllChecked()}\n            tooltipText='Show all paths'\n          />\n        </td>\n        <TableHeadCell\n          className='col_l'\n          buttonClass='left'\n          fieldName='metapath_metaedges'\n          tooltipText={tooltipText['metapath']}\n          text='metapath'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='path_count'\n          tooltipText={tooltipText['path_count']}\n          text='path count'\n        />\n        <TableHeadCell\n          className='col_m'\n          fieldName='adjusted_p_value'\n          tooltipText={tooltipText['adjusted_p_value']}\n          text={\n            <span>\n              adjusted\n              <br />\n              <i>p</i>-value\n            </span>\n          }\n        />\n      </>\n    );\n\n    // extra columns\n    const extraCols = (\n      <>\n        <TableHeadCell\n          className='col_m'\n          fieldName='p_value'\n          tooltipText={tooltipText['p_value']}\n          text={\n            <>\n              <i>p</i>-value\n            </>\n          }\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='dwpc'\n          tooltipText={tooltipText['dwpc']}\n          text='DWPC'\n        />\n        <TableHeadCell\n          fieldName='dgp_source_degree'\n          tooltipText={tooltipText['dgp_source_degree']}\n          text='source degree'\n        />\n        <TableHeadCell\n          fieldName='dgp_target_degree'\n          tooltipText={tooltipText['dgp_target_degree']}\n          text='target degree'\n        />\n        <TableHeadCell\n          fieldName='dgp_n_dwpcs'\n          tooltipText={tooltipText['dgp_n_dwpcs']}\n          text=\"# DWPC's\"\n        />\n        <TableHeadCell\n          fieldName='dgp_n_nonzero_dwpcs'\n          tooltipText={tooltipText['dgp_n_nonzero_dwpcs']}\n          text=\"# non-0 DWPC's\"\n        />\n        <TableHeadCell\n          fieldName='dgp_nonzero_mean'\n          tooltipText={tooltipText['dgp_nonzero_mean']}\n          text='non-0 mean'\n        />\n        <TableHeadCell\n          fieldName='dgp_nonzero_sd'\n          tooltipText={tooltipText['dgp_nonzero_sd']}\n          text={<>non-0 &sigma;</>}\n        />\n      </>\n    );\n\n    return (\n      <thead className='small light'>\n        {this.context.showMore && extraRow}\n        <tr>\n          {cols}\n          {this.context.showMore && extraCols}\n        </tr>\n      </thead>\n    );\n  }\n}\n// connect component to context component\nTableHead.contextType = TableContext;\n// connect component to global state\nTableHead = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableHead);\n\n// table header cell component\nclass TableHeadCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className}>\n        <SortButton\n          text={this.props.text}\n          tooltipText={this.props.tooltipText}\n          fieldName={this.props.fieldName}\n          className={this.props.buttonClass}\n        />\n      </td>\n    );\n  }\n}\n\n// column sort button component\nclass SortButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText={this.props.tooltipText}\n        className={'sort_button ' + (this.props.className || '')}\n        onClick={() => this.context.changeSort(this.props.fieldName)}\n      >\n        {this.props.text}\n        <FontAwesomeIcon\n          icon={\n            this.props.fieldName === this.context.sortColumn\n              ? this.context.sortUp\n                ? faSortUp\n                : faSortDown\n              : faSort\n          }\n        />\n      </Button>\n    );\n  }\n}\n// connect component to context component\nSortButton.contextType = TableContext;\n\n// table body component\n// contains actual data\nclass TableBody extends Component {\n  // display component\n  render() {\n    return (\n      <tbody>\n        {this.context.sortedMetapaths.map((metapath, index) => (\n          <TableBodyRow\n            key={index}\n            metapath={metapath}\n            checked={metapath.checked}\n            showMore={this.props.showMore}\n          />\n        ))}\n      </tbody>\n    );\n  }\n}\n// connect component to context component\nTableBody.contextType = TableContext;\n\n// table body row component\n// contains column data for one metapath\nclass TableBodyRow extends Component {\n  // display component\n  render() {\n    const metapath = this.props.metapath;\n\n    // primary columns\n    const cols = (\n      <>\n        <td>\n          <Checkbox\n            checked={this.props.checked}\n            onClick={() => this.context.toggleChecked(this.props.metapath.id)}\n            onCtrlClick={() => this.context.soloChecked(this.props.metapath.id)}\n            tooltipText={\n              'Show these ' +\n              (this.props.metapath.path_count || '') +\n              ' paths in the paths table'\n            }\n          />\n        </td>\n        <TableBodyCell\n          fieldClass='left'\n          value={metapathChips(metapath.metapath_metaedges)}\n          fullValue={metapath.metapath_name}\n        />\n        <TableBodyCell value={metapath.path_count} />\n        <TableBodyCell\n          style={{ backgroundColor: toGradient(metapath.adjusted_p_value) }}\n          value={toExponential(metapath.adjusted_p_value)}\n          fullValue={metapath.adjusted_p_value}\n        />\n      </>\n    );\n\n    // extra columns\n    const extraCols = (\n      <>\n        <TableBodyCell\n          style={{ backgroundColor: toGradient(metapath.p_value) }}\n          value={toExponential(metapath.p_value)}\n          fullValue={metapath.p_value}\n        />\n        <TableBodyCell\n          value={toFixed(metapath.dwpc)}\n          fullValue={metapath.dwpc}\n        />\n        <TableBodyCell value={metapath.dgp_source_degree} />\n        <TableBodyCell value={metapath.dgp_target_degree} />\n        <TableBodyCell value={metapath.dgp_n_dwpcs} />\n        <TableBodyCell value={metapath.dgp_n_nonzero_dwpcs} />\n        <TableBodyCell\n          value={toFixed(metapath.dgp_nonzero_mean)}\n          fullValue={metapath.dgp_nonzero_mean}\n        />\n        <TableBodyCell\n          value={toFixed(metapath.dgp_nonzero_sd)}\n          fullValue={metapath.dgp_nonzero_sd}\n        />\n      </>\n    );\n\n    return (\n      <tr>\n        {cols}\n        {this.context.showMore && extraCols}\n      </tr>\n    );\n  }\n}\n// connect component to context component\nTableBodyRow.contextType = TableContext;\n\n// table body cell component\nclass TableBodyCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className} style={this.props.style}>\n        <DynamicField\n          value={this.props.value}\n          fullValue={this.props.fullValue}\n          className={this.props.fieldClass}\n        />\n      </td>\n    );\n  }\n}\n\n// table with no results component\nclass TableEmpty extends Component {\n  // display component\n  render() {\n    return (\n      <table className='metapath_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>no results to show</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// make table array out of metapaths results object\nfunction makeMetapathsTable(metapaths) {\n  let headers = [];\n  for (const field of Object.keys(metapaths[0])) {\n    if (\n      typeof metapaths[0][field] === 'number' ||\n      typeof metapaths[0][field] === 'string'\n    )\n      headers.push(field);\n  }\n\n  // sort headers in custom order\n  const order = [\n    'id',\n    'metapath_name',\n    'metapath_abbreviation',\n    'path_count',\n    'adjusted_p_value',\n    'p_value',\n    'dwpc',\n    'dgp_source_degree',\n    'dgp_target_degree',\n    'dgp_n_dwpcs',\n    'dgp_n_nonzero_dwpcs',\n    'dgp_nonzero_mean',\n    'dgp_nonzero_sd'\n  ];\n  headers = sortCustom(headers, order);\n\n  const table = [];\n  table.push(headers);\n  for (const result of metapaths) {\n    const row = [];\n    for (const header of headers)\n      row.push(result[header]);\n    table.push(row);\n  }\n\n  return table;\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { Button } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { TextButton } from './buttons.js';\nimport { EyeCheckbox } from './buttons.js';\nimport { HighlighterCheckbox } from './buttons.js';\nimport { downloadCsv } from './util.js';\nimport { makeFilenameFriendly } from './util.js';\nimport { pathChips } from './chips.js';\nimport { updatePathQueries } from './actions.js';\nimport { toFixed } from './util.js';\nimport { sortCustom } from './util.js';\nimport { compareArrays } from './util.js';\nimport './path-results.css';\n\n// path results section component\nexport class PathResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <CollapsibleSection\n          label='Paths'\n          tooltipText='Paths of the selected metapaths'\n        >\n          {this.props.pathQueries.length > 0 ? <TableFull /> : <TableEmpty />}\n        </CollapsibleSection>\n      </section>\n    );\n  }\n}\n// connect component to global state\nPathResults = connect((state) => ({\n  pathQueries: state.pathQueries\n}))(PathResults);\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.showMore = false;\n    this.state.allChecked = false;\n    this.state.allHighlighted = false;\n    this.state.sortColumn = 'score';\n    this.state.sortUp = true;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n    this.toggleAllChecked = this.toggleAllChecked.bind(this);\n    this.allChecked = this.allChecked.bind(this);\n    this.checkAll = this.checkAll.bind(this);\n    this.uncheckAll = this.uncheckAll.bind(this);\n    this.allOthersUnchecked = this.allOthersUnchecked.bind(this);\n    this.toggleChecked = this.toggleChecked.bind(this);\n    this.soloChecked = this.soloChecked.bind(this);\n    this.toggleAllHighlighted = this.toggleAllHighlighted.bind(this);\n    this.allHighlighted = this.allHighlighted.bind(this);\n    this.highlightAll = this.highlightAll.bind(this);\n    this.unhighlightAll = this.unhighlightAll.bind(this);\n    this.allOthersUnhighlighted = this.allOthersUnhighlighted.bind(this);\n    this.toggleHighlighted = this.toggleHighlighted.bind(this);\n    this.soloHighlighted = this.soloHighlighted.bind(this);\n    this.changeSort = this.changeSort.bind(this);\n    this.downloadCsv = this.downloadCsv.bind(this);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (this.props.pathQueries !== prevProps.pathQueries) {\n      this.updateAllChecked();\n      this.updateAllHighlighted();\n    }\n  }\n\n  // toggle show more/less\n  toggleShowMore(event) {\n    if (event)\n      event.preventDefault();\n\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // checks if all rows checked and updates state\n  updateAllChecked() {\n    if (this.allChecked())\n      this.setState({ allChecked: true });\n    else\n      this.setState({ allChecked: false });\n  }\n\n  // toggle check/uncheck all\n  toggleAllChecked() {\n    if (this.allChecked())\n      this.uncheckAll();\n    else\n      this.checkAll();\n  }\n\n  // checks whether all paths are checked\n  allChecked() {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!path.checked)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // makes all paths checked\n  checkAll() {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths)\n        path.checked = true;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // makes all paths unchecked\n  uncheckAll() {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths)\n        path.checked = false;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // checks whether all paths besides the specified are unchecked\n  allOthersUnchecked(thePath) {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!this.comparePaths(path, thePath) && path.checked)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // toggles the specified paths on/off\n  toggleChecked(thePath) {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (this.comparePaths(path, thePath))\n          path.checked = !path.checked;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // solo path (turn all others off)\n  soloChecked(thePath) {\n    const pathQueries = this.props.pathQueries.slice();\n    const allOthersUnchecked = this.allOthersUnchecked(thePath);\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (allOthersUnchecked || this.comparePaths(path, thePath))\n          path.checked = true;\n        else\n          path.checked = false;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // checks if all rows highlighted and updates state\n  updateAllHighlighted() {\n    if (this.allHighlighted())\n      this.setState({ allHighlighted: true });\n    else\n      this.setState({ allHighlighted: false });\n  }\n\n  // toggle highlight/unhighlight all\n  toggleAllHighlighted() {\n    if (this.allHighlighted())\n      this.unhighlightAll();\n    else\n      this.highlightAll();\n  }\n\n  // checks whether all paths are highlighted\n  allHighlighted() {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!path.highlighted)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // makes all paths highlighted\n  highlightAll() {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths)\n        path.highlighted = true;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // makes all paths unhighlighted\n  unhighlightAll() {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths)\n        path.highlighted = false;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // checks whether all paths besides the specified are unhighlighted\n  allOthersUnhighlighted(thePath) {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!this.comparePaths(path, thePath) && path.highlighted)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // toggles the specified paths on/off\n  toggleHighlighted(thePath) {\n    const pathQueries = this.props.pathQueries.slice();\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (this.comparePaths(path, thePath))\n          path.highlighted = !path.highlighted;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // solo path (turn all others off)\n  soloHighlighted(thePath) {\n    const pathQueries = this.props.pathQueries.slice();\n    const allOthersUnhighlighted = this.allOthersUnhighlighted(thePath);\n\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (allOthersUnhighlighted)\n          path.highlighted = true;\n        else {\n          if (this.comparePaths(path, thePath))\n            path.highlighted = true;\n          else\n            path.highlighted = false;\n        }\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: pathQueries }));\n  }\n\n  // checks if paths are equal\n  comparePaths(path1, path2) {\n    return (\n      compareArrays(path1.node_ids, path2.node_ids) &&\n      compareArrays(path1.rel_ids, path2.rel_ids)\n    );\n  }\n\n  // change which column table is sorted by\n  changeSort(sortColumn) {\n    const newState = {};\n    newState.sortColumn = sortColumn;\n\n    if (sortColumn === this.state.sortColumn)\n      newState.sortUp = !this.state.sortUp;\n    else\n      newState.sortUp = true;\n\n    this.setState(newState);\n  }\n\n  // compare numbers (for sorting)\n  compareNumbers(a, b, key) {\n    // parse as numbers\n    const comparison = Number(a[key]) - Number(b[key]);\n    if (!Number.isNaN(comparison))\n      return comparison;\n\n    // otherwise parse as strings and compare alphabetically\n    if (a[key] < b[key])\n      return -1;\n    else if (a[key] > b[key])\n      return 1;\n    else\n      return 0;\n  }\n\n  // download table data as .csv file\n  downloadCsv() {\n    if (\n      !this.props.pathQueries.length ||\n      !this.props.sourceNode.name ||\n      !this.props.targetNode.name\n    )\n      return;\n\n    const tableData = makePathsTable(this.props.pathQueries);\n    const filename = [\n      'paths',\n      makeFilenameFriendly(this.props.sourceNode.name),\n      makeFilenameFriendly(this.props.targetNode.name)\n    ].join('_');\n    downloadCsv(tableData, filename);\n  }\n\n  // display component\n  render() {\n    let nodes = {};\n    for (const pathQuery of this.props.pathQueries)\n      nodes = { ...nodes, ...pathQuery.nodes };\n\n    let edges = {};\n    for (const pathQuery of this.props.pathQueries)\n      edges = { ...edges, ...pathQuery.relationships };\n\n    let sortedPaths = [];\n    for (const pathQuery of this.props.pathQueries)\n      sortedPaths = [...sortedPaths, ...pathQuery.paths];\n\n    // construct full path description/name\n    sortedPaths = sortedPaths.map((path) => ({\n      ...path,\n      chipDescription: pathChips(\n        assemblePath(path, nodes, edges),\n        this.state.showMore\n      ),\n      textDescription: textDescription(assemblePath(path, nodes, edges))\n    }));\n\n    // sort paths by specified column\n    const sortColumn = this.state.sortColumn;\n\n    // sort by appropriate field\n    sortedPaths.sort((a, b) => this.compareNumbers(a, b, sortColumn));\n\n    // reverse sort direction\n    if (this.state.sortUp)\n      sortedPaths.reverse();\n\n    // count paths\n    const pathCount = sortedPaths.length;\n    let pathSelectedCount = 0;\n    for (const path of sortedPaths) {\n      if (path.checked)\n        pathSelectedCount++;\n    }\n\n    let pathHighlightedCount = 0;\n    for (const path of sortedPaths) {\n      if (path.highlighted)\n        pathHighlightedCount++;\n    }\n\n    return (\n      <TableContext.Provider\n        value={{\n          sortedPaths: sortedPaths,\n          showMore: this.state.showMore,\n          allChecked: this.state.allChecked,\n          toggleAllChecked: this.toggleAllChecked,\n          toggleChecked: this.toggleChecked,\n          soloChecked: this.soloChecked,\n          allHighlighted: this.state.allHighlighted,\n          toggleAllHighlighted: this.toggleAllHighlighted,\n          toggleHighlighted: this.toggleHighlighted,\n          soloHighlighted: this.soloHighlighted,\n          sortColumn: this.state.sortColumn,\n          sortUp: this.state.sortUp,\n          changeSort: this.changeSort\n        }}\n      >\n        <div className='table_attic'>\n          <TextButton\n            text='.csv'\n            icon={faDownload}\n            className='link_button small'\n            onClick={this.downloadCsv}\n            tooltipText='Download table as .csv file'\n          />\n          <TextButton\n            text={this.state.showMore ? 'show less ' : 'show more '}\n            icon={this.state.showMore ? faAngleLeft : faAngleRight}\n            className='link_button small'\n            onClick={this.toggleShowMore}\n            tooltipText='Expand table'\n          />\n          <div className='small light right'>\n            {pathCount} results, {pathSelectedCount} selected,{' '}\n            {pathHighlightedCount} highlighted\n          </div>\n        </div>\n        <div className='table_container' data-expanded={this.state.showMore}>\n          <table\n            className='path_results_table'\n            data-expanded={this.state.showMore}\n          >\n            <TableHead />\n            <TableBody />\n          </table>\n        </div>\n      </TableContext.Provider>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst TableContext = React.createContext({});\n// connect component to global state\nTableFull = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metagraph: state.metagraph,\n  pathQueries: state.pathQueries\n}))(TableFull);\n\n// table header component\n// contains column labels and sort buttons\nclass TableHead extends Component {\n  // display component\n  render() {\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.nodes\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n    // primary columns\n    const cols = (\n      <>\n        <td className='col_xs'>\n          <EyeCheckbox\n            checked={this.context.allChecked}\n            onClick={() => this.context.toggleAllChecked()}\n            onCtrlClick={() => this.context.toggleAllChecked()}\n            tooltipText='Show all paths'\n          />\n        </td>\n        <td className='col_xs'>\n          <HighlighterCheckbox\n            checked={this.context.allHighlighted}\n            onClick={() => this.context.toggleAllHighlighted()}\n            onCtrlClick={() => this.context.toggleAllHighlighted()}\n            tooltipText='Highlight all paths'\n          />\n        </td>\n        <TableHeadCell\n          className='col_s left'\n          buttonClass='left'\n          fieldName='metapath'\n          tooltipText={tooltipText['metapath']}\n          text='metapath'\n        />\n        <TableHeadCell\n          className='col_xl left'\n          buttonClass='left'\n          fieldName='textDescription'\n          tooltipText={tooltipText['path']}\n          text='path'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='score'\n          tooltipText={tooltipText['score']}\n          text='path score'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='percent_of_DWPC'\n          tooltipText={tooltipText['percent_of_DWPC']}\n          text='% of DWPC'\n        />\n      </>\n    );\n\n    return (\n      <thead className='small light'>\n        <tr>{cols}</tr>\n      </thead>\n    );\n  }\n}\n// connect component to context component\nTableHead.contextType = TableContext;\n// connect component to global state\nTableHead = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableHead);\n\n// table header cell component\nclass TableHeadCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className}>\n        <SortButton\n          text={this.props.text}\n          tooltipText={this.props.tooltipText}\n          fieldName={this.props.fieldName}\n          className={this.props.buttonClass}\n        />\n      </td>\n    );\n  }\n}\n\n// column sort button component\nclass SortButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText={this.props.tooltipText}\n        className={'sort_button ' + (this.props.className || '')}\n        onClick={() => this.context.changeSort(this.props.fieldName)}\n      >\n        {this.props.text}\n        <FontAwesomeIcon\n          icon={\n            this.props.fieldName === this.context.sortColumn\n              ? this.context.sortUp\n                ? faSortUp\n                : faSortDown\n              : faSort\n          }\n        />\n      </Button>\n    );\n  }\n}\n// connect component to context component\nSortButton.contextType = TableContext;\n\n// table body component\n// contains actual data\nclass TableBody extends Component {\n  // display component\n  render() {\n    return (\n      <tbody>\n        {this.context.sortedPaths.map((path, index) => (\n          <TableBodyRow\n            key={index}\n            path={path}\n            checked={path.checked}\n            highlighted={path.highlighted}\n          />\n        ))}\n      </tbody>\n    );\n  }\n}\n// connect component to context component\nTableBody.contextType = TableContext;\n// connect component to global state\nTableBody = connect((state) => ({\n  pathQueries: state.pathQueries\n}))(TableBody);\n\n// table body row component\n// contains column data for one path\nclass TableBodyRow extends Component {\n  // display component\n  render() {\n    const path = this.props.path;\n\n    // primary columns\n    const cols = (\n      <>\n        <td>\n          <EyeCheckbox\n            checked={this.props.checked}\n            onClick={() => this.context.toggleChecked(this.props.path)}\n            onCtrlClick={() => this.context.soloChecked(this.props.path)}\n            tooltipText='Show this path in the graph display'\n          />\n        </td>\n        <td>\n          <HighlighterCheckbox\n            checked={this.props.highlighted}\n            onClick={() => this.context.toggleHighlighted(this.props.path)}\n            onCtrlClick={() => this.context.soloHighlighted(this.props.path)}\n            tooltipText='Highlight this path in the graph display'\n          />\n        </td>\n        <TableBodyCell\n          className='left small'\n          fieldClass='left'\n          value={path.metapath}\n          fullValue={path.metapath}\n        />\n        <TableBodyCell\n          className='left small'\n          fieldClass='left'\n          value={path.chipDescription}\n          fullValue={path.textDescription}\n        />\n        <TableBodyCell\n          value={path.score ? toFixed(path.score) : '-'}\n          fullValue={path.score || '-'}\n        />\n        <TableBodyCell\n          value={toFixed(path.percent_of_DWPC)}\n          fullValue={path.percent_of_DWPC}\n        />\n      </>\n    );\n\n    return <tr>{cols}</tr>;\n  }\n}\n// connect component to context component\nTableBodyRow.contextType = TableContext;\n\n// table body cell component\nclass TableBodyCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className} style={this.props.style}>\n        <DynamicField\n          value={this.props.value}\n          fullValue={this.props.fullValue}\n          className={this.props.fieldClass}\n        />\n      </td>\n    );\n  }\n}\n\n// table with no results component\nclass TableEmpty extends Component {\n  // display component\n  render() {\n    return (\n      <table className='metapath_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>no results to show</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// construct path object with relevant properties for each node/edge entry\nfunction assemblePath(path, nodes, edges) {\n  const pathNodes = [];\n  for (const nodeId of path.node_ids) {\n    const node = nodes[nodeId];\n    if (!node)\n      continue;\n\n    pathNodes.push({\n      element: 'node',\n      type: node.metanode,\n      name: node.properties.name\n    });\n  }\n\n  const pathEdges = [];\n  for (let index = 0; index < path.rel_ids.length; index++) {\n    const edge = edges[path.rel_ids[index]];\n    const prevNode = nodes[path.node_ids[index]];\n    if (!edge || !prevNode)\n      continue;\n\n    let direction = '';\n    if (edge.directed) {\n      if (edge.source_neo4j_id === prevNode.neo4j_id)\n        direction = 'forward';\n      else\n        direction = 'backward';\n    }\n\n    pathEdges.push({\n      element: 'edge',\n      type: edge.kind,\n      direction: direction\n    });\n  }\n\n  const assembledPath = [];\n  for (const node of pathNodes) {\n    assembledPath.push(node);\n    if (pathEdges.length > 0)\n      assembledPath.push(pathEdges.shift());\n  }\n\n  return assembledPath;\n}\n\n// produce text path description from assembled path\nfunction textDescription(path) {\n  return path.map((entry) => {\n    if (entry.element === 'node')\n      return entry.name;\n    if (entry.element === 'edge') {\n      let arrow = '–';\n      if (entry.direction === 'forward')\n        arrow = '→';\n      else if (entry.direction === 'backward')\n        arrow = '←';\n      return ['', arrow, entry.type, arrow, ''].join(' ');\n    }\n    return '';\n  });\n}\n\n// make table array out of path queries results object\nfunction makePathsTable(pathQueries) {\n  let nodes = {};\n  for (const pathQuery of pathQueries)\n    nodes = { ...nodes, ...pathQuery.nodes };\n\n  let edges = {};\n  for (const pathQuery of pathQueries)\n    edges = { ...edges, ...pathQuery.relationships };\n\n  let paths = [];\n  for (const pathQuery of pathQueries)\n    paths = [...paths, ...pathQuery.paths];\n\n  for (const path of paths) {\n    path.description = textDescription(assemblePath(path, nodes, edges)).join(\n      ''\n    );\n  }\n\n  let headers = [];\n  for (const field of Object.keys(paths[0])) {\n    if (\n      typeof paths[0][field] === 'number' ||\n      typeof paths[0][field] === 'string'\n    )\n      headers.push(field);\n  }\n\n  // sort headers in custom order\n  const order = [\n    'description',\n    'metapath',\n    'score',\n    'percent_of_DWPC'\n  ];\n  headers = sortCustom(headers, order);\n\n  const table = [];\n  table.push(headers);\n  for (const result of paths) {\n    const row = [];\n    for (const header of headers)\n      row.push(result[header]);\n    table.push(row);\n  }\n\n  return table;\n}\n","import React from 'react';\nimport { Component } from 'react';\n\nimport { Tooltip } from './tooltip.js';\nimport './number-box.css';\n\n// number input box component\nexport class NumberBox extends Component {\n  // intialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.value = this.props.value;\n\n    this.onChange = this.onChange.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== prevProps.value)\n      this.setState({ value: this.props.value });\n  }\n\n  // when user changes field\n  onChange(event) {\n    this.setState({ value: event.target.value });\n    if (event.nativeEvent.data === undefined)\n      this.onArrows(event.target.value);\n    else\n      this.onType(event.target.value);\n  }\n\n  // when user presses key in box\n  onKeyPress(event) {\n    if (event.key.toLowerCase() === 'enter')\n      event.target.blur();\n  }\n\n  // when user un-focuses field\n  onBlur(event) {\n    this.onSubmit(event.target.value);\n  }\n\n  // when box changed via arrow buttons or arrow keys\n  onArrows(value) {\n    if (this.props.onArrows)\n      this.props.onArrows(value);\n  }\n\n  // when box changed via typing or copy/paste\n  onType(value) {\n    if (this.props.onType)\n      this.props.onType(value);\n  }\n\n  // when box change submitted\n  onSubmit(value) {\n    if (this.props.onSubmit)\n      this.props.onSubmit(value);\n  }\n\n  // display component\n  render() {\n    return (\n      <Tooltip text={this.props.tooltipText}>\n        <input\n          type='number'\n          className='number_box'\n          onChange={this.onChange}\n          onKeyPress={this.onKeyPress}\n          onBlur={this.onBlur}\n          min={this.props.min}\n          step={this.props.step}\n          max={this.props.max}\n          value={this.state.value}\n        />\n      </Tooltip>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport { faPowerOff } from '@fortawesome/free-solid-svg-icons';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faMapMarker } from '@fortawesome/free-solid-svg-icons';\nimport { faExpand } from '@fortawesome/free-solid-svg-icons';\nimport { faExpandArrowsAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faCompressArrowsAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\n\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { NumberBox } from './number-box.js';\nimport { TextButton } from './buttons.js';\nimport { downloadSvg } from './util.js';\nimport { transferObjectProps } from './util.js';\nimport { Tooltip } from './tooltip.js';\nimport { sortCustom } from './util.js';\nimport './path-graph.css';\n\n// graph settings\nconst minWidth = 240;\nconst minHeight = 240;\nconst maxWidth = 3840;\nconst maxHeight = 2160;\nconst minZoom = 0.25;\nconst maxZoom = 4;\nconst nodeRadius = 25;\nconst nodeDistance = 100;\nconst nodeCharLimit = 25;\nconst nodeFontSize = 8;\nconst nodeRepulsion = 200;\nconst edgeFontSize = 8;\nconst edgeThickness = 2;\nconst edgeArrowSize = 10;\nconst edgeSpreadDistance = 20;\nconst edgeSpreadAngle = (45 / 360) * 2 * Math.PI;\nconst inkColor = '#424242';\nconst backgroundColor = '#fafafa';\nconst highlightColor = '#B3E8F7';\n\n// path graph section component\nexport class PathGraph extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.width = maxWidth;\n    this.state.height = maxHeight;\n    this.state.nodeCount = 0;\n    this.state.edgeCount = 0;\n    this.state.selectedElement = null;\n\n    this.graph = React.createRef();\n\n    this.expandContainer = this.expandContainer.bind(this);\n    this.collapseContainer = this.collapseContainer.bind(this);\n    this.updateSectionWidth = this.updateSectionWidth.bind(this);\n    this.setWidth = this.setWidth.bind(this);\n    this.setHeight = this.setHeight.bind(this);\n    this.setGraphCounts = this.setGraphCounts.bind(this);\n    this.setSelectedElement = this.setSelectedElement.bind(this);\n  }\n\n  // when component mounts\n  componentDidMount() {\n    this.updateSectionWidth();\n    this.collapseContainer();\n    window.addEventListener('resize', this.updateSectionWidth);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.width !== prevState.width) {\n      let width = this.state.width;\n      if (Math.round(width) !== width)\n        width = Math.round(width);\n      if (width > maxWidth)\n        width = maxWidth;\n      if (width < minWidth)\n        width = minWidth;\n      this.setState({ width: width });\n    }\n    if (this.state.height !== prevState.height) {\n      let height = this.state.height;\n      if (Math.round(height) !== height)\n        height = Math.round(height);\n      if (height > maxHeight)\n        height = maxHeight;\n      if (height < minHeight)\n        height = minHeight;\n      this.setState({ height: height });\n    }\n  }\n\n  // get current width of <section> element\n  updateSectionWidth() {\n    this.setState({ sectionWidth: ReactDOM.findDOMNode(this).clientWidth });\n  }\n\n  // expand graph container to width of window\n  expandContainer() {\n    const width = document.body.clientWidth - 20 - 20;\n    const height = (width * 3) / 4;\n    this.setState({\n      width: width,\n      height: height\n    });\n  }\n\n  // collapse graph container to width of <section> element\n  collapseContainer() {\n    const width = ReactDOM.findDOMNode(this).clientWidth;\n    const height = (width * 3) / 4;\n    this.setState({\n      width: width,\n      height: height\n    });\n  }\n\n  // set width of graph container\n  setWidth(value) {\n    this.setState({ width: value });\n  }\n\n  // set height of graph container\n  setHeight(value) {\n    this.setState({ height: value });\n  }\n\n  // download graph as svg\n  downloadSvg() {\n    const svg = document.getElementById('graph');\n    downloadSvg(svg);\n  }\n\n  // set counts of nodes, edges, etc\n  setGraphCounts(nodeCount, edgeCount) {\n    this.setState({\n      nodeCount: nodeCount,\n      edgeCount: edgeCount\n    });\n  }\n\n  // sets the selected node/edge\n  setSelectedElement(element) {\n    this.setState({ selectedElement: element });\n  }\n\n  // display component\n  render() {\n    let info = '';\n    if (this.state.selectedElement) {\n      if (this.state.selectedElement.elementType === 'node') {\n        info = (\n          <>\n            <div className='graph_info_header small light'>Selected Node</div>\n            <SelectedInfo\n              node={this.state.selectedElement}\n              primaryFields={['metanode', 'neo4j_id']}\n              order={[\n                'name',\n                'metanode',\n                'source',\n                'url',\n                'description',\n                'identifier',\n                'neo4j_id'\n              ]}\n            />\n          </>\n        );\n      }\n      if (this.state.selectedElement.elementType === 'edge') {\n        info = (\n          <>\n            <div className='graph_info_header small light'>Selected Edge</div>\n            <SelectedInfo\n              edge={this.state.selectedElement}\n              primaryFields={['kind', 'directed', 'neo4j_id']}\n              order={['kind', 'neo4j_id', 'source']}\n            />\n          </>\n        );\n      }\n    }\n    return (\n      <section>\n        <CollapsibleSection\n          label='Path Graph'\n          tooltipText='Graph of path results'\n        >\n          <div className='table_attic'>\n            <TextButton\n              text='reset'\n              icon={faPowerOff}\n              onClick={() => {\n                if (this.graph.current)\n                  this.graph.current.restartGraph();\n              }}\n              tooltipText='Completely restart graph'\n            />\n            <TextButton\n              text='unpin all'\n              icon={faMapMarkerAlt}\n              onClick={() => {\n                if (this.graph.current)\n                  this.graph.current.unpinAll();\n              }}\n              tooltipText='Unpin all nodes'\n            />\n            <TextButton\n              text='pin all'\n              icon={faMapMarker}\n              onClick={() => {\n                if (this.graph.current)\n                  this.graph.current.pinAll();\n              }}\n              tooltipText='Pin all nodes in their current position'\n            />\n            <TextButton\n              text='fit'\n              icon={faExpand}\n              onClick={() => {\n                if (this.graph.current)\n                  this.graph.current.fitView();\n              }}\n              tooltipText='Fit the view to the contents of the graph'\n            />\n            <TextButton\n              text='.svg'\n              icon={faDownload}\n              onClick={this.downloadSvg}\n              tooltipText='Download the graph as an .svg file'\n            />\n            <NumberBox\n              tooltipText='Width of the container'\n              min={minWidth}\n              step='5'\n              max={maxWidth}\n              value={this.state.width}\n              onArrows={this.setWidth}\n              onSubmit={this.setWidth}\n            />\n            &times;\n            <NumberBox\n              tooltipText='Height of the container'\n              min={minHeight}\n              step='5'\n              max={maxHeight}\n              value={this.state.height}\n              onArrows={this.setHeight}\n              onSubmit={this.setHeight}\n            />\n            <TextButton\n              className='graph_expand_collapse_button'\n              text=''\n              icon={faExpandArrowsAlt}\n              onClick={this.expandContainer}\n              tooltipText='Fit the graph to the window'\n            />\n            <TextButton\n              className='graph_expand_collapse_button'\n              text=''\n              icon={faCompressArrowsAlt}\n              onClick={this.collapseContainer}\n              tooltipText='Fit the graph to the \"Path Graph\" section'\n            />\n            <span className='small light right'>\n              {this.state.nodeCount} nodes, {this.state.edgeCount} edges\n            </span>\n          </div>\n          <Graph\n            ref={this.graph}\n            width={this.state.width}\n            height={this.state.height}\n            sectionWidth={this.state.sectionWidth}\n            setGraphCounts={this.setGraphCounts}\n            setSelectedElement={this.setSelectedElement}\n          />\n          {info}\n        </CollapsibleSection>\n      </section>\n    );\n  }\n}\n\n// path graph component\nexport class Graph extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.data = this.assembleGraph(null);\n\n    this.fitView = this.fitView.bind(this);\n    this.resetView = this.resetView.bind(this);\n    this.onSimulationTick = this.onSimulationTick.bind(this);\n    this.onNodeEdgeClick = this.onNodeEdgeClick.bind(this);\n    this.onNodeDragStart = this.onNodeDragStart.bind(this);\n    this.onNodeDragEnd = this.onNodeDragEnd.bind(this);\n    this.onViewClick = this.onViewClick.bind(this);\n  }\n\n  // when component mounts\n  componentDidMount() {\n    this.createGraph();\n    this.setState({ data: this.assembleGraph() });\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps, prevState) {\n    // if path queries have changed\n    if (this.props.pathQueries !== prevProps.pathQueries)\n      // update graph data\n      this.setState({ data: this.assembleGraph() });\n    // if graph data has changed\n    else if (this.state.data !== prevState.data) {\n      // copy simulation vars from old data to new data to persist node\n      // positions/velocities/etc\n      transferObjectProps(\n        prevState.data.nodes,\n        this.state.data.nodes,\n        ['neo4j_id'],\n        ['x', 'y', 'fx', 'fy', 'vx', 'vy']\n      );\n\n      // update graph\n      this.updateGraph();\n\n      // update graph info (node count, edge count, etc)\n      this.props.setGraphCounts(\n        this.state.data.nodes.length,\n        this.state.data.edges.length\n      );\n    }\n  }\n\n  // completely restart graph\n  restartGraph() {\n    this.resetView();\n    this.state.simulation.alpha(1).restart();\n    // set graph data to null then back to data again\n    this.setState({ data: this.assembleGraph(null) }, () =>\n      this.setState({ data: this.assembleGraph() })\n    );\n  }\n\n  // create graph when page first loads\n  createGraph() {\n    const svg = d3.select('#graph');\n\n    // create physics simulation for nodes to detangle and prettify layout\n    const simulation = d3\n      .forceSimulation()\n      .force(\n        'link',\n        d3\n          .forceLink()\n          .distance(nodeDistance)\n          .id((d) => d.neo4j_id)\n      )\n      .force(\n        'collide',\n        d3\n          .forceCollide()\n          .radius(nodeRadius)\n          .strength(1)\n      )\n      .force('charge', d3.forceManyBody().strength(-nodeRepulsion))\n      .force('center', d3.forceCenter(0, 0));\n    simulation.on('tick', this.onSimulationTick);\n\n    // create handler for panning and zooming view\n    const viewZoomHandler = d3\n      .zoom()\n      .scaleExtent([minZoom, maxZoom])\n      .on('zoom', this.onViewZoom);\n    svg.call(viewZoomHandler);\n\n    // handle clicks on background\n    svg.on('click', this.onViewClick);\n\n    // create handler for dragging nodes\n    const nodeDragHandler = d3\n      .drag()\n      .on('drag', this.onNodeDrag)\n      .on('start', this.onNodeDragStart)\n      .on('end', this.onNodeDragEnd);\n\n    // store the above objects to be referenced on graph updates\n    this.setState(\n      {\n        simulation: simulation,\n        viewZoomHandler: viewZoomHandler,\n        nodeDragHandler: nodeDragHandler\n      },\n      this.resetView\n    );\n  }\n\n  // when simulation ticks forward\n  onSimulationTick() {\n    // position all elements in graph\n    d3.selectAll('.graph_edge_line_highlight').each(this.positionEdge);\n    d3.selectAll('.graph_edge_line').each(this.positionEdge);\n    d3.selectAll('.graph_edge_label').each(this.positionEdgeLabel);\n    d3.selectAll('.graph_node_circle_highlight').each(this.positionNode);\n    d3.selectAll('.graph_node_circle').each(this.positionNode);\n    d3.selectAll('.graph_node_label').each(this.positionNode);\n  }\n\n  // position node based on results of simulation\n  // d3 simulation stores positions/velocities/etc directly in data object\n  positionNode(d, i, s) {\n    const node = s[i];\n    d3.select(node).attr('transform', 'translate(' + d.x + ',' + d.y + ')');\n  }\n\n  // position edge line between source/target node\n  positionEdge(d, i, s) {\n    let x1 = d.source.x;\n    let y1 = d.source.y;\n    let x2 = d.target.x;\n    let y2 = d.target.y;\n    let path = '';\n\n    // get angle between source/target in radians\n    const angle = Math.atan2(y2 - y1, x2 - x1);\n\n    // get radius of source/target nodes\n    const sourceRadius = nodeRadius - 0.25;\n    let targetRadius = nodeRadius - 0.25;\n    // increase target node radius to bring tip of arrowhead out of circle\n    if (d.directed)\n      targetRadius += edgeArrowSize / 4;\n\n    if (d.coincidentOffset === 0) {\n      // if no coincident edges, or middle of odd number of coincident edges,\n      // just draw straight line\n\n      // bring start/end of line to edge of circles\n      x1 += Math.cos(angle) * sourceRadius;\n      y1 += Math.sin(angle) * sourceRadius;\n      x2 -= Math.cos(angle) * targetRadius;\n      y2 -= Math.sin(angle) * targetRadius;\n\n      // straight line path\n      path = ['M', x1, y1, 'L', x2, y2].join(' ');\n    } else {\n      // otherwise, if coincident edge, draw a curve\n\n      // spread out contact points with circle over spread angle\n      const angleOffset = edgeSpreadAngle * d.coincidentOffset;\n\n      // bring start/end of curve to edge of circle\n      x1 += Math.cos(angle + angleOffset) * sourceRadius;\n      y1 += Math.sin(angle + angleOffset) * sourceRadius;\n      x2 -= Math.cos(angle - angleOffset) * targetRadius;\n      y2 -= Math.sin(angle - angleOffset) * targetRadius;\n\n      // get straight line distance between start/end of curve\n      const distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n      // get \"sagitta\" distance\n      const sag = Math.min(edgeSpreadDistance, distance) * d.coincidentOffset;\n\n      // get point distance \"sag\" away from midpoint of line\n      const qX = (x2 + x1) / 2 - (2 * sag * (y2 - y1)) / distance;\n      const qY = (y2 + y1) / 2 + (2 * sag * (x2 - x1)) / distance;\n\n      // draw curve with handle point Q\n      path = ['M', x1, y1, 'Q', qX, qY, x2, y2].join(' ');\n    }\n\n    // set edge path\n    const edge = s[i];\n    d3.select(edge).attr('d', path);\n  }\n\n  // position edge label in center of edge line and rotate\n  positionEdgeLabel(d, i, s) {\n    let x1 = d.source.x;\n    let y1 = d.source.y;\n    let x2 = d.target.x;\n    let y2 = d.target.y;\n\n    // get angle between source/target in radians\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n\n    // get radius of source/target nodes\n    const sourceRadius = nodeRadius - 0.25;\n    let targetRadius = nodeRadius - 0.25;\n    // increase target node radius to bring tip of arrowhead out of circle\n    if (d.directed)\n      targetRadius += edgeArrowSize / 4;\n\n    // spread out contact points with circle over spread angle\n    const angleOffset = edgeSpreadAngle * d.coincidentOffset;\n\n    // bring start/end of curve to edge of circle\n    x1 += Math.cos(angle + angleOffset) * sourceRadius;\n    y1 += Math.sin(angle + angleOffset) * sourceRadius;\n    x2 -= Math.cos(angle - angleOffset) * targetRadius;\n    y2 -= Math.sin(angle - angleOffset) * targetRadius;\n\n    // get straight line distance between start/end of curve\n    const distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n    // get \"sagitta\" distance\n    const sag = Math.min(edgeSpreadDistance, distance) * d.coincidentOffset;\n\n    // get anchor point of text, point distance \"sag\" away from midpoint of line\n    const textX = (x2 + x1) / 2 - (sag * (y2 - y1)) / distance;\n    const textY = (y2 + y1) / 2 + (sag * (x2 - x1)) / distance;\n\n    // get angle of text in degrees\n    angle = (angle / (2 * Math.PI)) * 360;\n    // rotate text to always show upright\n    if (angle > 90)\n      angle -= 180;\n    if (angle <= -90)\n      angle += 180;\n\n    // set vertical alignment of text relative to anchor point\n    let dy = -0.35 * edgeFontSize;\n    // always place text on \"outside\" side of curve\n    if (sag < 0 && d.source.x > d.target.x)\n      dy = 1.1 * edgeFontSize;\n\n    // set edge text transform\n    const edgeLabel = s[i];\n    d3.select(edgeLabel)\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('dy', dy)\n      .attr(\n        'transform',\n        'translate(' + textX + ',' + textY + ') rotate(' + angle + ') '\n      );\n  }\n\n  // fit view to contents of graph\n  fitView() {\n    const contents = d3\n      .select('#graph_view')\n      .node()\n      .getBBox();\n    const container = d3\n      .select('#graph')\n      .node()\n      .getBoundingClientRect();\n    const padding = nodeRadius;\n\n    // if no contents, exit\n    if (contents.width === 0 || contents.height === 0)\n      return;\n\n    // dimensions minus borders\n    container.width -= 2;\n    container.height -= 2;\n\n    // calculate center of contents\n    contents.midX = contents.x + contents.width / 2;\n    contents.midY = contents.y + contents.height / 2;\n\n    // determine scale and translate to fit view\n    const scale =\n      1 /\n      Math.max(\n        contents.width / (container.width - padding),\n        contents.height / (container.height - padding)\n      );\n    const translateX = container.width / 2 - scale * contents.midX;\n    const translateY = container.height / 2 - scale * contents.midY;\n\n    // perform view transform\n    d3.select('#graph').call(\n      this.state.viewZoomHandler.transform,\n      d3.zoomIdentity.translate(translateX, translateY).scale(scale)\n    );\n  }\n\n  // center view and reset to 100% zoom\n  resetView() {\n    const container = d3\n      .select('#graph')\n      .node()\n      .getBoundingClientRect();\n\n    // dimensions minus borders\n    container.width -= 2;\n    container.height -= 2;\n\n    // determine scale and translate to fit view\n    const scale = 1;\n    const translateX = container.width / 2;\n    const translateY = container.height / 2;\n\n    // perform view transform\n    d3.select('#graph').call(\n      this.state.viewZoomHandler.transform,\n      d3.zoomIdentity.translate(translateX, translateY).scale(scale)\n    );\n  }\n\n  // unpin all nodes\n  unpinAll() {\n    const data = this.state.data;\n\n    data.nodes.forEach((node) => {\n      node.fx = null;\n      node.fy = null;\n    });\n\n    this.state.simulation.alpha(1).restart();\n  }\n\n  // pin all nodes\n  pinAll() {\n    const data = this.state.data;\n\n    data.nodes.forEach((node) => {\n      node.fx = node.x;\n      node.fy = node.y;\n    });\n  }\n\n  // when node or edge clicked by user\n  onNodeEdgeClick(d) {\n    d3.event.stopPropagation();\n\n    if (!d.selected) {\n      this.deselectAll();\n      d.selected = true;\n    } else\n      this.deselectAll();\n\n    this.updateNodeCircles();\n    this.updateEdgeLines();\n\n    this.props.setSelectedElement(d);\n  }\n\n  // deselect all elements\n  deselectAll() {\n    for (const node of this.state.data.nodes)\n      node.selected = undefined;\n    for (const edge of this.state.data.edges)\n      edge.selected = undefined;\n  }\n\n  // when node dragged by user\n  onNodeDragStart() {\n    this.state.simulation.alphaTarget(1).restart();\n  }\n\n  // when node dragged by user\n  onNodeDrag(d) {\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n  }\n\n  // when node dragged by user\n  onNodeDragEnd() {\n    this.state.simulation.alphaTarget(0).restart();\n  }\n\n  // when view/background is clicked by user\n  onViewClick() {\n    this.deselectAll();\n    this.updateNodeCircles();\n    this.updateEdgeLines();\n    this.props.setSelectedElement(null);\n  }\n\n  // when view panned or zoomed by user\n  onViewZoom() {\n    d3.select('#graph_view').attr('transform', d3.event.transform);\n  }\n\n  // update simulation with new data (new nodes and/or edges)\n  updateSimulation() {\n    const data = this.state.data;\n    this.state.simulation.nodes(data.nodes);\n    this.state.simulation.force('link').links(data.edges);\n    this.state.simulation.alpha(1).restart();\n  }\n\n  // draw edge line highlight elements\n  updateEdgeLineHighlights() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_edge_line_highlight_layer');\n\n    const edgeLineHighlights = layer\n      .selectAll('.graph_edge_line_highlight')\n      .data(data.edges.filter((d) => d.highlighted === true));\n\n    edgeLineHighlights\n      .enter()\n      .append('path')\n      .merge(edgeLineHighlights)\n      .attr('class', 'graph_edge_line_highlight')\n      .attr('fill', 'none')\n      .attr('stroke', highlightColor)\n      .attr('stroke-width', edgeArrowSize)\n      .attr('stroke-linecap', 'square');\n\n    edgeLineHighlights.exit().remove();\n  }\n\n  // draw edge line elements\n  updateEdgeLines() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_edge_line_layer');\n\n    const edgeLines = layer.selectAll('.graph_edge_line').data(data.edges);\n\n    edgeLines\n      .enter()\n      .append('path')\n      .on('click', this.onNodeEdgeClick)\n      .merge(edgeLines)\n      .attr('class', 'graph_edge_line')\n      .attr('marker-end', (d) => {\n        if (d.directed)\n          return 'url(#graph_arrowhead)';\n        else\n          return '';\n      })\n      .attr('fill', 'none')\n      .attr('stroke', inkColor)\n      .attr('stroke-width', edgeThickness)\n      .style('stroke-dasharray', (d) => {\n        if (d.selected)\n          return edgeThickness * 2 + ' ' + edgeThickness;\n        else\n          return 'none';\n      })\n      .style('cursor', 'pointer');\n\n    edgeLines.exit().remove();\n  }\n\n  // draw edge label elements\n  updateEdgeLabels() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_edge_label_layer');\n\n    const edgeLabels = layer.selectAll('.graph_edge_label').data(data.edges);\n\n    edgeLabels\n      .enter()\n      .append('text')\n      .on('click', this.onNodeEdgeClick)\n      .merge(edgeLabels)\n      .attr('class', 'graph_edge_label')\n      .attr('font-size', edgeFontSize)\n      .attr('font-weight', 500)\n      .attr('text-anchor', 'middle')\n      .attr('user-select', 'none')\n      .attr('fill', inkColor)\n      .style('cursor', 'pointer')\n      .text((d) => d.kind);\n\n    edgeLabels.exit().remove();\n  }\n\n  // draw node circle highlight elements\n  updateNodeCircleHighlights() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_node_circle_highlight_layer');\n\n    const nodeCircleHighlights = layer\n      .selectAll('.graph_node_circle_highlight')\n      .data(data.nodes.filter((d) => d.highlighted === true));\n\n    nodeCircleHighlights\n      .enter()\n      .append('circle')\n      .merge(nodeCircleHighlights)\n      .attr('class', 'graph_node_circle_highlight')\n      .attr('r', nodeRadius)\n      .attr('fill', 'none')\n      .attr('stroke', highlightColor)\n      .attr('stroke-width', edgeArrowSize);\n\n    nodeCircleHighlights.exit().remove();\n  }\n\n  // draw node circle elements\n  updateNodeCircles() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_node_circle_layer');\n\n    const nodeCircles = layer.selectAll('.graph_node_circle').data(data.nodes);\n\n    nodeCircles\n      .enter()\n      .append('circle')\n      .call(this.state.nodeDragHandler)\n      .on('click', this.onNodeEdgeClick)\n      .merge(nodeCircles)\n      .attr('class', 'graph_node_circle')\n      .attr('r', nodeRadius)\n      .attr('fill', (d) => this.getNodeFillColor(d.metanode))\n      .attr('stroke', (d) => {\n        if (d.selected)\n          return inkColor;\n        else\n          return 'none';\n      })\n      .attr('stroke-width', edgeThickness)\n      .style('stroke-dasharray', edgeThickness * 2 + ' ' + edgeThickness)\n      .style('cursor', 'pointer');\n\n    nodeCircles.exit().remove();\n  }\n\n  // draw node label elements\n  updateNodeLabels() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_node_label_layer');\n\n    const nodeLabels = layer.selectAll('.graph_node_label').data(data.nodes);\n\n    nodeLabels\n      .enter()\n      .append('foreignObject')\n      .attr('class', 'graph_node_label')\n      .append('xhtml:div')\n      .append('xhtml:span');\n\n    layer\n      .selectAll('.graph_node_label')\n      .attr('x', -nodeRadius)\n      .attr('y', -nodeRadius)\n      .attr('width', nodeRadius * 2)\n      .attr('height', nodeRadius * 2)\n      .style('pointer-events', 'none')\n      .select('div')\n      .style('display', 'flex')\n      .style('justify-content', 'center')\n      .style('align-items', 'center')\n      .style('width', '100%')\n      .style('height', '100%')\n      .style('box-sizing', 'border-box')\n      .style('padding', nodeRadius * 0.25 + 'px')\n      .select('span')\n      .style('text-align', 'center')\n      .style('font-size', nodeFontSize + 'px')\n      .style('font-weight', 500)\n      .style('color', (d) => this.getNodeTextColor(d.metanode))\n      .style('word-break', 'break-word')\n      .html((d) => {\n        if (d.properties.name.length > nodeCharLimit)\n          return d.properties.name.substr(0, nodeCharLimit - 3) + '...';\n        else\n          return d.properties.name;\n      });\n\n    nodeLabels.exit().remove();\n  }\n\n  // update graph\n  updateGraph() {\n    this.updateEdgeLineHighlights();\n    this.updateEdgeLines();\n    this.updateEdgeLabels();\n    this.updateNodeCircleHighlights();\n    this.updateNodeCircles();\n    this.updateNodeLabels();\n    this.pinSourceAndTargetNodes();\n    this.updateSimulation();\n  }\n\n  // fix source and target nodes in nice starting positions\n  pinSourceAndTargetNodes() {\n    const data = this.state.data;\n\n    data.nodes.forEach((node) => {\n      if (node.neo4j_id === data.source_neo4j_id) {\n        if (!node.x && !node.fx)\n          node.fx = -nodeDistance * 2;\n        if (!node.y && !node.fy)\n          node.fy = 0;\n      }\n      if (node.neo4j_id === data.target_neo4j_id) {\n        if (!node.x && !node.fx)\n          node.fx = nodeDistance * 2;\n        if (!node.y && !node.fy)\n          node.fy = 0;\n      }\n    });\n  }\n\n  // get node fill color based on type (metanode)\n  getNodeFillColor(type) {\n    const style = this.props.hetioStyles[type];\n    if (style && style.fill_color)\n      return style.fill_color;\n    else\n      return inkColor;\n  }\n\n  // get node text color based on type (metanode)\n  getNodeTextColor(type) {\n    const style = this.props.hetioStyles[type];\n    if (style && style.text_color)\n      return style.text_color;\n    else\n      return backgroundColor;\n  }\n\n  // construct graph object with relevant properties for each node/edge\n  assembleGraph(pathQueries) {\n    // empty graph object\n    const graph = {\n      source_neo4j_id: null,\n      target_neo4j_id: null,\n      nodes: [],\n      edges: []\n    };\n\n    // if null explicitly provided as argument, return empty graph object\n    if (pathQueries === null)\n      return graph;\n\n    // if pathQueries not provided as argument, get from component props\n    if (!pathQueries)\n      pathQueries = this.props.pathQueries;\n\n    // if pathQueries not valid, exit\n    if (!pathQueries || pathQueries.length <= 0)\n      return graph;\n\n    // get source/target nodes from first path in pathQueries\n    const firstPath = pathQueries[0].paths[0];\n    graph.source_neo4j_id = firstPath.node_ids[0];\n    graph.target_neo4j_id = firstPath.node_ids[firstPath.node_ids.length - 1];\n\n    // loop through all paths in pathQueries\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        // if not checked, don't include in graph\n        if (!path.checked)\n          continue;\n\n        // loop through nodes in path\n        for (const nodeId of path.node_ids) {\n          const node = pathQuery.nodes[nodeId];\n          const existingNode = graph.nodes.find(\n            (existing) => existing.neo4j_id === node.neo4j_id\n          );\n          if (!existingNode) {\n            // if node hasn't been added to graph yet, add it\n            graph.nodes.push({\n              // copy all properties of node\n              ...node,\n              // add highlight property\n              highlighted: path.highlighted,\n              // mark as node\n              elementType: 'node'\n            });\n          } else if (path.highlighted)\n            // if node already in graph, still update highlight status\n            existingNode.highlighted = true;\n        }\n\n        // loop through edges in path\n        for (const relId of path.rel_ids) {\n          const edge = pathQuery.relationships[relId];\n          const existingEdge = graph.edges.find(\n            (existing) =>\n              existing.source_neo4j_id === edge.source_neo4j_id &&\n              existing.target_neo4j_id === edge.target_neo4j_id &&\n              existing.kind === edge.kind &&\n              existing.directed === edge.directed\n          );\n          if (!existingEdge) {\n            // if edge hasn't been added to graph yet, add it\n            graph.edges.push({\n              // copy all properties of edge\n              ...edge,\n              // set duplicate properties \"source\" and \"target\" because d3\n              // needs them (with those names) to create links between nodes\n              source: edge.source_neo4j_id,\n              target: edge.target_neo4j_id,\n              // add highlight property\n              highlighted: path.highlighted,\n              // mark as edge\n              elementType: 'edge'\n            });\n          } else if (path.highlighted)\n            // if edge already in graph, still update highlight status\n            existingEdge.highlighted = true;\n        }\n      }\n    }\n\n    // loop through all edges in graph to find coincident edges\n    // (multiple edges connecting the same two nodes)\n\n    // sort all edges in graph into bins of same source/target nodes\n    const edgeBins = [];\n    for (const edgeA of graph.edges) {\n      let matched = false;\n      // find bin with edges that have same source/target nodes\n      // (order-insensitve)\n      for (const edgeBin of edgeBins) {\n        const match = edgeBin.find(\n          (edgeB) =>\n            (edgeA.source_neo4j_id === edgeB.source_neo4j_id &&\n              edgeA.target_neo4j_id === edgeB.target_neo4j_id) ||\n            (edgeA.source_neo4j_id === edgeB.target_neo4j_id &&\n              edgeA.target_neo4j_id === edgeB.source_neo4j_id)\n        );\n        // if matching bin found, add edge to it\n        if (match) {\n          edgeBin.push(edgeA);\n          matched = true;\n          break;\n        }\n      }\n      // if didn't find matching bin, create new one and add edge to it\n      if (!matched)\n        edgeBins.push([edgeA]);\n    }\n\n    // loop through edge bins\n    for (const edgeBin of edgeBins) {\n      // for each edge in bin, assign coincident \"offset\", a value between\n      // -1 and 1 used for drawing, where 0 is straight line, negative is curve\n      // on one side, and positive is curve on other side\n      const firstSource = edgeBin[0].source_neo4j_id;\n      for (let index = 0; index < edgeBin.length; index++) {\n        // default offset to 0\n        let offset = 0;\n        if (edgeBin.length > 1)\n          offset = -0.5 + index / (edgeBin.length - 1);\n        // if edge source/target order in reverse order as rest of bin,\n        // invert offset\n        if (edgeBin[index].source_neo4j_id !== firstSource)\n          offset *= -1;\n        edgeBin[index].coincidentOffset = offset;\n      }\n    }\n\n    // put source and target node at end of list to ensure highest z-index\n    const sourceNodeIndex = graph.nodes.findIndex(\n      (node) => node.neo4j_id === graph.source_neo4j_id\n    );\n    if (sourceNodeIndex !== -1)\n      graph.nodes.push(graph.nodes.splice(sourceNodeIndex, 1)[0]);\n    const targetNodeIndex = graph.nodes.findIndex(\n      (node) => node.neo4j_id === graph.target_neo4j_id\n    );\n    if (targetNodeIndex !== -1)\n      graph.nodes.push(graph.nodes.splice(targetNodeIndex, 1)[0]);\n\n    return graph;\n  }\n\n  // display component\n  render() {\n    // calculate x position of graph container\n    let left = 0;\n    if (this.props.sectionWidth && this.props.width) {\n      left = this.props.sectionWidth / 2 - this.props.width / 2;\n      const minLeft =\n        this.props.sectionWidth / 2 - document.body.clientWidth / 2 + 20;\n      if (left < minLeft)\n        left = minLeft;\n    }\n\n    // title text\n    const title =\n      (this.props.sourceNode.name || '___') +\n      ' → ' +\n      (this.props.targetNode.name || '___');\n\n    // description text\n    const description = [\n      'Graph visualization of the connectivity between ',\n      this.props.sourceNode.name || '___',\n      ' (',\n      this.props.sourceNode.metanode || '___',\n      ') and ',\n      this.props.targetNode.name || '___',\n      ' (',\n      this.props.targetNode.metanode || '___',\n      '). ',\n      '\\n\\n',\n      'Created at ',\n      window.location.href,\n      '\\n\\n',\n      'This subgraph of Hetionet v1.0 was created from paths between the ',\n      'specified source/target nodes that occurred more than expected ',\n      'by chance. ',\n      'See https://het.io for more information. '\n    ].join('');\n\n    return (\n      <div id='graph_container' style={{ height: this.props.height }}>\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          id='graph'\n          width={this.props.width}\n          height={this.props.height}\n          style={{ left: left }}\n        >\n          <title>{title}</title>\n          <desc>{description}</desc>\n          <defs>\n            <style>\n              {`\n                @import url('https://fonts.googleapis.com/css?family=Raleway:400,500,700');\n                @import url('https://fonts.googleapis.com/css?family=Montserrat:400,500,700&text=0123456789');\n                * {\n                  font-family: 'Montserrat', 'Raleway', sans-serif;\n                }\n              `}\n            </style>\n            <marker\n              id='graph_arrowhead'\n              viewBox='0 0 100 100'\n              refX='80'\n              refY='50'\n              orient='auto'\n              markerUnits='userSpaceOnUse'\n              markerWidth={edgeArrowSize}\n              markerHeight={edgeArrowSize}\n            >\n              <path\n                d='\n                  M 0 0\n                  L 100 50\n                  L 0 100'\n                fill={inkColor}\n              />\n            </marker>\n          </defs>\n          <g id='graph_view'>\n            <g id='graph_edge_line_highlight_layer' />\n            <g id='graph_node_circle_highlight_layer' />\n            <g id='graph_edge_line_layer' />\n            <g id='graph_edge_label_layer' />\n            <g id='graph_node_circle_layer' />\n            <g id='graph_node_label_layer' />\n          </g>\n        </svg>\n      </div>\n    );\n  }\n}\n// connect component to global state\nGraph = connect(\n  (state) => ({\n    sourceNode: state.sourceNode,\n    targetNode: state.targetNode,\n    pathQueries: state.pathQueries,\n    hetioStyles: state.hetioStyles\n  }),\n  null,\n  null,\n  { forwardRef: true }\n)(Graph);\n\n// selected node/edge info component\nclass SelectedInfo extends Component {\n  // display row entries\n  rows() {\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.edges\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n    if (tooltipText['id'])\n      tooltipText['neo4j_id'] = tooltipText['id'];\n\n    const element = this.props.node || this.props.edge;\n\n    // get primary fields from top level of node/edge\n    let primaryFields = this.props.primaryFields;\n    // get first/second column text (key/value) for each field\n    primaryFields = primaryFields.map((field) => ({\n      firstCol: field,\n      secondCol: String(element[field]),\n      tooltipText: tooltipText[field]\n    }));\n\n    // get 'extra fields' from node/edge 'properties' field\n    let extraFields = Object.keys(element.properties);\n    // get first/second column text (key/value) for each field\n    extraFields = extraFields.map((field) => ({\n      firstCol: field,\n      secondCol: String(element.properties[field]),\n      tooltipText: tooltipText[field]\n    }));\n\n    // combine primary and extra fields\n    let fields = primaryFields.concat(extraFields);\n\n    // display fields in custom order\n    fields = sortCustom(fields, this.props.order, 'firstCol');\n\n    // make columns from fields\n    const cols = fields.map((field, index) => {\n      return (\n        <React.Fragment key={index}>\n          <td className='col_s small light'>\n            <Tooltip text={field.tooltipText}>{field.firstCol}</Tooltip>\n          </td>\n          <td className='small'>{field.secondCol}</td>\n        </React.Fragment>\n      );\n    });\n\n    // make rows in groups of two\n    const rows = new Array(Math.ceil(cols.length / 2))\n      .fill()\n      .map(() => cols.splice(0, 2))\n      .map((col, index) => <tr key={index}>{col}</tr>);\n\n    return rows;\n  }\n\n  // display component\n  render() {\n    return (\n      <table id='graph_info_table'>\n        <tbody>{this.rows()}</tbody>\n      </table>\n    );\n  }\n}\n// connect component to global state\nSelectedInfo = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(SelectedInfo);\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Header } from './header.js';\nimport { NodeSearch } from './node-search.js';\nimport { NodeResults } from './node-results.js';\nimport { MetapathResults } from './metapath-results.js';\nimport { PathResults } from './path-results.js';\nimport { PathGraph } from './path-graph.js';\nimport { getMetagraph } from './backend-query.js';\nimport { getHetioDefinitions } from './backend-query.js';\nimport { getHetioStyles } from './backend-query.js';\nimport { getHetmechDefinitions } from './backend-query.js';\nimport { lookupNodeById } from './backend-query.js';\nimport { searchMetapaths } from './backend-query.js';\nimport { searchPaths } from './backend-query.js';\nimport { setDefinitions } from './actions.js';\nimport { updateSourceTargetNodes } from './actions.js';\nimport { updateMetapaths } from './actions.js';\nimport { updatePathQueries } from './actions.js';\nimport './styles.css';\n\n// main app component\nclass App extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.fetchDefinitions = this.fetchDefinitions.bind(this);\n    this.updateNodesFromUrl = this.updateNodesFromUrl.bind(this);\n    this.updateMetapaths = this.updateMetapaths.bind(this);\n    this.updateHistory = this.updateHistory.bind(this);\n    this.updateTitle = this.updateTitle.bind(this);\n    this.updatePaths = this.updatePaths.bind(this);\n\n    // fetch definitions when page first loads\n    this.fetchDefinitions();\n    // get parameters from url when page first loads\n    this.updateNodesFromUrl();\n    // listen for back/forward navigation (history)\n    window.addEventListener('popstate', this.updateNodesFromUrl);\n  }\n\n  // when component changes\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.sourceNode !== this.props.sourceNode ||\n      prevProps.targetNode !== this.props.targetNode\n    )\n      this.onNodeChange();\n    if (prevProps.metapaths !== this.props.metapaths)\n      this.onMetapathChange();\n  }\n\n  // get metagraph, hetio definitions, and hetmech definitions\n  fetchDefinitions() {\n    this.props.dispatch((dispatch) => {\n      // wait until all fetches return to update state\n      const promises = [\n        getMetagraph(),\n        getHetioDefinitions(),\n        getHetioStyles(),\n        getHetmechDefinitions()\n      ];\n      Promise.all(promises).then((results) => {\n        dispatch(\n          setDefinitions({\n            metagraph: results[0],\n            hetioDefinitions: results[1],\n            hetioStyles: results[2],\n            hetmechDefinitions: results[3]\n          })\n        );\n      });\n    });\n  }\n\n  // update source/target nodes from url\n  updateNodesFromUrl() {\n    this.props.dispatch((dispatch) => {\n      const params = new URLSearchParams(window.location.search);\n      const sourceNodeId = params.get('source');\n      const targetNodeId = params.get('target');\n\n      // wait until both node searches return to update state\n      const promises = [\n        lookupNodeById(sourceNodeId),\n        lookupNodeById(targetNodeId)\n      ];\n      Promise.all(promises).then((results) => {\n        dispatch(\n          updateSourceTargetNodes({\n            sourceNode: results[0],\n            targetNode: results[1]\n          })\n        );\n      });\n    });\n  }\n\n  // when source/target node change\n  onNodeChange() {\n    // update history url before title to make sure title gets changed for\n    // correct page\n    this.updateMetapaths();\n    this.updateHistory();\n    this.updateTitle();\n  }\n\n  // update metapaths (node pair query results) when source/target node change\n  updateMetapaths() {\n    this.props.dispatch((dispatch) =>\n      searchMetapaths(this.props.sourceNode.id, this.props.targetNode.id).then(\n        (results) =>\n          dispatch(\n            updateMetapaths({\n              metapaths: results\n            })\n          )\n      )\n    );\n  }\n\n  // add history entry for source/target node without navigating page\n  updateHistory() {\n    const oldParams = new URLSearchParams(window.location.search);\n    const newParams = new URLSearchParams();\n\n    if (this.props.sourceNode.id !== undefined)\n      newParams.set('source', this.props.sourceNode.id);\n    if (this.props.targetNode.id !== undefined)\n      newParams.set('target', this.props.targetNode.id);\n\n    // if url already matches source/target nodes, don't update.\n    // will prevent extra history entry from getting source/target from url on\n    // page load\n    if (\n      (oldParams.get('source') === newParams.get('source')) &\n      (oldParams.get('target') === newParams.get('target'))\n    )\n      return;\n\n    let search = newParams.toString();\n    if (search.length > 0)\n      search = '?' + search;\n\n    const url = window.location.origin + window.location.pathname + search;\n    window.history.pushState({}, '', url);\n  }\n\n  // update page title based on source/target node\n  updateTitle() {\n    if (!this.props.sourceNode.id && !this.props.targetNode.id)\n      return;\n    const title =\n      (this.props.sourceNode.name || '___') +\n      ' → ' +\n      (this.props.targetNode.name || '___');\n    document.title = title;\n  }\n\n  // when checked metapaths change\n  onMetapathChange() {\n    this.updatePaths();\n  }\n\n  // update paths when checked metapaths change\n  updatePaths() {\n    this.props.dispatch((dispatch) => {\n      // fetch paths for all checked metapaths\n      const promises = [];\n      for (const metapath of this.props.metapaths) {\n        if (metapath.checked) {\n          promises.push(\n            searchPaths(\n              this.props.sourceNode.id,\n              this.props.targetNode.id,\n              metapath.metapath_abbreviation\n            )\n          );\n        }\n      }\n\n      // update path queries when all queries have returned\n      Promise.all(promises).then((results) => {\n        dispatch(\n          updatePathQueries({\n            pathQueries: results\n          })\n        );\n      });\n    });\n  }\n\n  // display component\n  render() {\n    return (\n      <>\n        <Header />\n        <NodeSearch />\n        <NodeResults />\n        <MetapathResults />\n        <PathResults />\n        <PathGraph />\n      </>\n    );\n  }\n}\n// connect component to global state\nApp = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metapaths: state.metapaths\n}))(App);\n\nexport { App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport { Reducer } from './reducers.js';\nimport { App } from './app.js';\n\n// create global state store\nconst store = createStore(Reducer, applyMiddleware(thunk));\n\n// render/run app\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { transferObjectProps } from './util';\nimport { transferQueryProps } from './util';\n\n// map previous global state to new global state based on action\nexport function Reducer(prevState = {}, action) {\n  // start with previous state\n  const newState = { ...prevState };\n\n  // detect action type and set new state accordingly\n  switch (action.type) {\n    // set definitions\n    case 'set_definitions':\n      if (action.payload.metagraph !== undefined)\n        newState.metagraph = action.payload.metagraph;\n      if (action.payload.hetioDefinitions !== undefined)\n        newState.hetioDefinitions = action.payload.hetioDefinitions;\n      if (action.payload.hetioStyles !== undefined)\n        newState.hetioStyles = action.payload.hetioStyles;\n      if (action.payload.hetmechDefinitions !== undefined)\n        newState.hetmechDefinitions = action.payload.hetmechDefinitions;\n      break;\n\n    // update source and/or target node\n    case 'update_source_target_nodes':\n      if (action.payload.sourceNode !== undefined)\n        newState.sourceNode = action.payload.sourceNode;\n      if (action.payload.targetNode !== undefined)\n        newState.targetNode = action.payload.targetNode;\n      break;\n\n    // swap source/target nodes\n    case 'swap_source_target_nodes':\n      if (prevState.sourceNode && prevState.targetNode) {\n        newState.sourceNode = prevState.targetNode;\n        newState.targetNode = prevState.sourceNode;\n      }\n      break;\n\n    // update metapaths\n    case 'update_metapaths':\n      if (action.payload.metapaths !== undefined) {\n        newState.metapaths = action.payload.metapaths;\n        transferObjectProps(\n          prevState.metapaths,\n          newState.metapaths,\n          ['id'],\n          ['checked', 'highlighted']\n        );\n      }\n      break;\n\n    // update path queries\n    case 'update_path_queries':\n      if (action.payload.pathQueries !== undefined) {\n        newState.pathQueries = action.payload.pathQueries;\n        // console.log(newState.pathQueries);\n        transferQueryProps(\n          prevState.pathQueries,\n          newState.pathQueries,\n          'paths',\n          ['node_ids', 'rel_ids'],\n          ['checked', 'highlighted']\n        );\n        // console.log(newState.pathQueries);\n      }\n      break;\n\n    default:\n      break;\n  }\n\n  // make sure critical variables defined\n  if (!newState.metagraph)\n    newState.metagraph = {};\n  if (!newState.hetioDefinitions)\n    newState.hetioDefinitions = {};\n  if (!newState.hetioStyles)\n    newState.hetioStyles = {};\n  if (!newState.hetmechDefinitions)\n    newState.hetmechDefinitions = {};\n  if (!newState.sourceNode)\n    newState.sourceNode = {};\n  if (!newState.targetNode)\n    newState.targetNode = {};\n  if (!newState.metapaths)\n    newState.metapaths = [];\n  if (!newState.pathQueries)\n    newState.pathQueries = [];\n\n  // set new state\n  return newState;\n}\n"],"sourceRoot":""}