{"version":3,"sources":["util.js","logo-animated.svg","header.js","arrow-icon-both.svg","arrow-icon-forward.svg","arrow-icon-backward.svg","chip-gene.svg","chip-compound.svg","chip-anatomy.svg","chip-disease.svg","chip-symptom.svg","chip-side-effect.svg","chip-biological-process.svg","chip-cellular-component.svg","chip-molecular-function.svg","chip-pathway.svg","chip-pharmacologic-class.svg","chips.js","tooltip.js","buttons.js","backend-query.js","actions.js","path.svg","node-search.js","dynamic-field.js","collapsible-section.js","node-results.js","metapath-results.js","path-results.js","number-box.js","path-graph.js","app.js","index.js","reducers.js"],"names":["toExponential","number","parseFloat","mantissa","split","toFixed","exponent","parseInt","react_default","a","createElement","toGradient","gradient","map","color","join","r","g","b","percent","Math","log10","min","max","gradientIndex","length","lowerColor","floor","higherColor","ceil","percentBetween","downloadCsv","data","filename","fileContent","cell","blob","Blob","type","url","window","URL","createObjectURL","link","document","body","appendChild","href","download","click","revokeObjectURL","remove","makeFilenameFriendly","string","trim","replace","substring","sortCustom","array","order","key","sort","indexOf","transferObjectProps","oldArray","newArray","compareKeys","transferKeys","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","newElement","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","oldElement","matches","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","compareKey","err","return","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","transferKey","compareArrays","array1","array2","checkReverse","every","element","index","slice","reverse","cutString","n","copyObject","object","JSON","parse","stringify","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","logo_animated_ref2","logo_animated_ref3","id","stroke","strokeWidth","fill","d","_ref4","_ref5","transform","cx","cy","_ref6","_ref7","_ref8","logo_animated_SvgLogoAnimated","_ref","svgRef","props","viewBox","ref","ForwardRef","forwardRef","Header","__webpack_require__","p","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","showLogo","setTimeout","setState","inherits","createClass","logo","className","Component","arrow_icon_both_extends","arrow_icon_both_objectWithoutProperties","arrow_icon_both_objectWithoutPropertiesLoose","arrow_icon_both_ref2","arrow_icon_both_SvgArrowIconBoth","arrow_icon_both_ForwardRef","arrow_icon_forward_extends","arrow_icon_forward_objectWithoutProperties","arrow_icon_forward_objectWithoutPropertiesLoose","arrow_icon_forward_ref2","arrow_icon_forward_SvgArrowIconForward","arrow_icon_forward_ForwardRef","arrow_icon_backward_extends","arrow_icon_backward_objectWithoutProperties","arrow_icon_backward_objectWithoutPropertiesLoose","arrow_icon_backward_ref2","arrow_icon_backward_SvgArrowIconBackward","arrow_icon_backward_ForwardRef","chip_gene_extends","chip_gene_objectWithoutProperties","chip_gene_objectWithoutPropertiesLoose","chip_gene_ref2","chip_gene_SvgChipGene","chip_gene_ForwardRef","chip_compound_extends","chip_compound_objectWithoutProperties","chip_compound_objectWithoutPropertiesLoose","chip_compound_ref2","chip_compound_SvgChipCompound","chip_compound_ForwardRef","chip_anatomy_extends","chip_anatomy_objectWithoutProperties","chip_anatomy_objectWithoutPropertiesLoose","chip_anatomy_ref2","x","y","width","height","chip_anatomy_ref3","strokeLinecap","clipPath","chip_anatomy_SvgChipAnatomy","chip_anatomy_ForwardRef","chip_disease_extends","chip_disease_objectWithoutProperties","chip_disease_objectWithoutPropertiesLoose","chip_disease_ref2","chip_disease_SvgChipDisease","chip_disease_ForwardRef","chip_symptom_extends","chip_symptom_objectWithoutProperties","chip_symptom_objectWithoutPropertiesLoose","chip_symptom_ref2","chip_symptom_ref3","chip_symptom_SvgChipSymptom","chip_symptom_ForwardRef","chip_side_effect_extends","chip_side_effect_objectWithoutProperties","chip_side_effect_objectWithoutPropertiesLoose","chip_side_effect_ref2","chip_side_effect_ref3","chip_side_effect_SvgChipSideEffect","chip_side_effect_ForwardRef","chip_biological_process_extends","chip_biological_process_objectWithoutProperties","chip_biological_process_objectWithoutPropertiesLoose","chip_biological_process_ref2","chip_biological_process_ref3","chip_biological_process_SvgChipBiologicalProcess","chip_biological_process_ForwardRef","chip_cellular_component_extends","chip_cellular_component_objectWithoutProperties","chip_cellular_component_objectWithoutPropertiesLoose","chip_cellular_component_ref2","chip_cellular_component_ref3","chip_cellular_component_SvgChipCellularComponent","chip_cellular_component_ForwardRef","chip_molecular_function_extends","chip_molecular_function_objectWithoutProperties","chip_molecular_function_objectWithoutPropertiesLoose","chip_molecular_function_ref2","chip_molecular_function_ref3","strokeLinejoin","chip_molecular_function_ref4","chip_molecular_function_SvgChipMolecularFunction","chip_molecular_function_ForwardRef","chip_pathway_extends","chip_pathway_objectWithoutProperties","chip_pathway_objectWithoutPropertiesLoose","chip_pathway_ref2","chip_pathway_ref3","chip_pathway_ref4","chip_pathway_SvgChipPathway","chip_pathway_ForwardRef","chip_pharmacologic_class_extends","chip_pharmacologic_class_objectWithoutProperties","chip_pharmacologic_class_objectWithoutPropertiesLoose","chip_pharmacologic_class_ref2","chip_pharmacologic_class_ref3","chip_pharmacologic_class_SvgChipPharmacologicClass","chip_pharmacologic_class_ForwardRef","MetanodeChip","icon","fillColor","textColor","style","hetioStyles","fill_color","text_color","connect","MetaedgeChip","_Component2","direction","abbreviation","metagraph","kind_to_abbrev","data-name","data-abbreviation","pathChips","path","expanded","entry","chips_NodeChip","name","chips_MetaedgeChip","NodeChip","_Component3","background","data-expanded","Tooltip","open","opacity","onMouseEnter","bind","assertThisInitialized","openTooltip","onMouseLeave","event","_this2","hover","left","getBoundingClientRect","documentElement","scrollLeft","top","scrollTop","clientWidth","text","Fragment","children","React","Children","isValidElement","cloneElement","tooltip_Popup","Popup","ReactDOM","createPortal","Fade_default","in","Button","tooltip_Tooltip","tooltipText","onClick","ctrlKey","onCtrlClick","shiftKey","onShiftClick","TextButton","buttons_Button","index_es","Checkbox","checked","faCheck","EyeCheckbox","_Component4","faEye","HighlighterCheckbox","_Component5","faHighlighter","metagraphUrl","hetioDefinitions","nodeSearchServer","nodeSearchMetapathsServer","randomNodeServer","metapathSearchServer","pathSearchServer","fetchJson","fetch","then","response","json","results","catch","error","console","log","lookupNodeById","searchMetapaths","sourceId","targetId","params","URLSearchParams","set","toString","path_counts","searchPaths","metapath","updateSourceTargetNodes","_ref2","payload","sourceNode","targetNode","updateUrl","dontUpdateUrl","updateMetapaths","_ref3","metapaths","preserveChecks","updatePathQueries","pathQueries","path_extends","path_objectWithoutProperties","path_objectWithoutPropertiesLoose","path_ref2","path_ref3","path_ref4","path_ref5","path_SvgPath","path_ForwardRef","NodeSearch","filters","filterString","updateFilters","NodeSearchContext","Provider","node_search_Filters","node_search_SourceNodeSearch","node_search_SwapButton","node_search_RandomButton","node_search_TargetNodeSearch","createContext","Filters","toggle","solo","prevProps","metanode_kinds","filter","push","active","newFilters","allOthersOff","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","allOn","list","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_this3","buttons","node_search_FilterButton","metanodes","FilterButton","_this4","chips_MetanodeChip","SourceNodeSearch","_this5","onChange","dispatch","activeElement","blur","node_search_SearchBox","label","node","otherNode","TargetNodeSearch","_this6","SearchBox","_this7","searchResults","inputRef","createRef","formRef","onInput","searchString","_this8","otherNodeId","metatypes","searchNodes","context","item","_this9","downshift_esm","onBlur","onInputValueChange","itemToString","selectedItem","getInputProps","getItemProps","getMenuProps","isOpen","highlightedIndex","clearSelection","openMenu","node_search_TextBox","onFocus","node_search_Dropdown","showMetapathCount","contextType","TextBox","_this10","focused","overlay","showOverlay","metanode","TextField_default","placeholder","classes","root","InputProps","input","faSearch","Dropdown","_this11","Popper_default","anchorEl","current","placement","container","disablePortal","Paper_default","result","MenuItem_default","metapath_count","SwapButton","_this12","faExchangeAlt","RandomButton","_this13","_this14","Promise","all","source_id","target_id","slicedToArray","newSourceNode","newTargetNode","faDice","DynamicField","field","tagName","toLowerCase","focus","deselectAll","selectAll","getSelection","empty","selectAllChildren","displayValue","fullValue","tabIndex","CollapsibleSection","collapsed","loadState","saveState","localStorage","getItem","setItem","String","data-collapsed","faAngleUp","faAngleDown","NodeResults","node_results_NodeCard","NodeCard","collapsible_section_CollapsibleSection","node_results_TableFull","node_results_TableEmpty","TableFull","showMore","toggleShowMore","properties","objectSpread","common","nodes","hetmechDefinitions","primaryFields","specialSecondCol","linkUrl","linkText","_i","_regexes","regex","RegExp","shortenUrl","firstCol","secondCol","splice","findIndex","extraFields","fields","concat","dynamic_field_DynamicField","rows","colSpan","buttons_TextButton","TableEmpty","MetapathResults","metapath_results_TableFull","metapath_results_TableEmpty","allChecked","sortColumn","sortUp","toggleAllChecked","checkAll","uncheckAll","allOthersUnchecked","toggleChecked","soloChecked","changeSort","updateAllChecked","preventDefault","newMetapaths","newState","comparison","Number","isNaN","headers","_Object$keys","table","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","row","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","header","makeMetapathsTable","sortedMetapaths","compareMetapaths","compareNumbers","metapathCount","metapathSelectedCount","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","TableContext","faDownload","faAngleLeft","faAngleRight","metapath_results_TableHead","metapath_results_TableBody","TableHead","extraRow","cols","buttons_Checkbox","metapath_results_TableHeadCell","buttonClass","fieldName","extraCols","rel","TableHeadCell","metapath_results_SortButton","SortButton","faSortUp","faSortDown","faSort","TableBody","metapath_results_TableBodyRow","TableBodyRow","edges","path_count","metapath_results_TableBodyCell","fieldClass","metapath_metaedges","metapath_name","backgroundColor","adjusted_p_value","p_value","dwpc","dgp_source_degree","dgp_target_degree","dgp_n_dwpcs","dgp_n_nonzero_dwpcs","dgp_nonzero_mean","dgp_nonzero_sd","cypher_query","TableBodyCell","PathResults","path_results_TableFull","path_results_TableEmpty","allHighlighted","toggleAllHighlighted","highlightAll","unhighlightAll","allOthersUnhighlighted","toggleHighlighted","soloHighlighted","updateAllHighlighted","pathQuery","paths","newPathQueries","thePath","comparePaths","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","highlighted","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_iterator24","path1","path2","node_ids","rel_ids","_iteratorNormalCompletion31","_didIteratorError31","_iteratorError31","_step31","_iterator31","_iteratorNormalCompletion32","_didIteratorError32","_iteratorError32","_step32","_iterator32","relationships","_iteratorNormalCompletion33","_didIteratorError33","_iteratorError33","_step33","_iterator33","toConsumableArray","_i2","_paths","description","textDescription","assemblePath","_i3","_i4","_paths2","_iteratorNormalCompletion34","_didIteratorError34","_iteratorError34","_step34","_iterator34","makePathsTable","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","_iteratorNormalCompletion26","_didIteratorError26","_iteratorError26","_step26","_iterator26","sortedPaths","_iteratorNormalCompletion27","_didIteratorError27","_iteratorError27","_step27","_iterator27","chipDescription","pathCount","pathSelectedCount","_iteratorNormalCompletion28","_didIteratorError28","_iteratorError28","_step28","_iterator28","pathHighlightedCount","_iteratorNormalCompletion29","_didIteratorError29","_iteratorError29","_step29","_iterator29","path_results_TableContext","path_results_TableHead","path_results_TableBody","buttons_EyeCheckbox","buttons_HighlighterCheckbox","path_results_TableHeadCell","path_results_SortButton","path_results_TableBodyRow","path_results_TableBodyCell","score","percent_of_DWPC","pathNodes","_iteratorNormalCompletion30","_didIteratorError30","_iteratorError30","_step30","_iterator30","pathEdges","edge","prevNode","directed","source_neo4j_id","neo4j_id","kind","assembledPath","_pathNodes","shift","arrow","NumberBox","onKeyPress","nativeEvent","onArrows","onType","onSubmit","step","maxWidth","maxHeight","edgeSpreadAngle","PI","PathGraph","nodeCount","edgeCount","selectedElement","hoveredElement","graph","expandContainer","collapseContainer","updateSectionWidth","setWidth","setHeight","fitView","setGraphCounts","setSelectedElement","setHoveredElement","addEventListener","prevState","round","sectionWidth","findDOMNode","proportionalHeight","XMLSerializer","serializeToString","downloadSvg","getElementById","info","elementType","path_graph_SelectedInfo","faPowerOff","restartGraph","faMapMarkerAlt","unpinAll","faMapMarker","pinAll","faExpand","number_box_NumberBox","faExpandArrowsAlt","faCompressArrowsAlt","path_graph_Graph","Graph","assembleGraph","resetView","onSimulationTick","onNodeEdgeClick","onNodeEdgeHover","onNodeEdgeUnhover","onNodeDragStart","onNodeDragEnd","onViewClick","createGraph","updateGraph","simulation","alpha","restart","svg","d3","force","distance","radius","strength","on","viewZoomHandler","scaleExtent","onViewZoom","nodeDragHandler","onNodeDrag","each","positionEdge","positionEdgeLabel","positionNode","s","attr","x1","y1","x2","y2","angle","atan2","targetRadius","nodeRadius","edgeArrowSize","coincidentOffset","cos","sin","angleOffset","sqrt","pow","sag","textX","textY","dy","edgeLabel","contents","getBBox","midX","midY","scale","translateX","translateY","translate","forEach","fx","fy","stopPropagation","selected","updateNodeCircles","updateEdgeLines","hovered","alphaTarget","links","edgeLineHighlights","enter","append","merge","exit","edgeLines","edgeThickness","edgeLabels","nodeCircleHighlights","nodeCircles","getNodeFillColor","layer","nodeLabels","select","nodeFontSize","getNodeTextColor","html","updateEdgeLineHighlights","updateEdgeLabels","updateNodeCircleHighlights","updateNodeLabels","pinSourceAndTargetNodes","updateSimulation","target_neo4j_id","nodeDistance","firstPath","_loop","nodeId","existingNode","find","existing","_loop2","relId","existingEdge","edgeBins","_loop3","edgeA","matched","_edgeBins2","edgeBin","edgeB","_edgeBins","firstSource","offset","sourceNodeIndex","targetNodeIndex","minLeft","title","location","xmlns","refX","refY","orient","markerUnits","markerWidth","markerHeight","SelectedInfo","Array","col","App","fetchDefinitions","updateStateFromUrl","updatePaths","updateTitle","promises","checkedMetapaths","search","get","newMetapath","includes","metapath_abbreviation","header_Header","node_search_NodeSearch","node_results_NodeResults","metapath_results_MetapathResults","path_results_PathResults","path_graph_PathGraph","store","createStore","action","oldQueries","newQueries","subKey","element1","element2","newQuery","oldQuery","isArray","transferQueryProps","newParams","origin","pathname","history","pushState","applyMiddleware","thunk","render","react_redux_es","app_App"],"mappings":"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","file":"static/js/main.37aae461.chunk.js","sourcesContent":["import React from 'react';\n\n// get html of number in exponential form\nexport function toExponential(number) {\n  number = parseFloat(number).toExponential(1);\n  const mantissa = parseFloat(number.split('e')[0]).toFixed(1);\n  const exponent = parseInt(number.split('e')[1]);\n  return (\n    <span>\n      {mantissa} &times; 10<sup>{exponent}</sup>\n    </span>\n  );\n}\n\n// get html of number in regular form, rounded to 1 decimal digit\nexport function toFixed(number) {\n  return <span>{parseFloat(number).toFixed(1)}</span>;\n}\n\n// map number to css color (rgba or hex) based on specified gradient\nexport function toGradient(number) {\n  // pretty gradient\n  let gradient = [\n    'rgba(255, 255, 255, 0)',\n    'rgba(255, 249, 196, 1)',\n    'rgba(255, 236, 179, 1)',\n    'rgba(255, 224, 178, 1)',\n    'rgba(255, 204, 188, 1)',\n    'rgba(248, 187, 208, 1)'\n  ];\n\n  // split each gradient color into component rgba values\n  gradient = gradient.map((color) => {\n    color = color.split(/[^0-9,]/).join('');\n    color = {\n      r: parseInt(color.split(',')[0]),\n      g: parseInt(color.split(',')[1]),\n      b: parseInt(color.split(',')[2]),\n      a: parseFloat(color.split(',')[3])\n    };\n    return color;\n  });\n\n  // take log of number\n  // (equivalent of getting exponent of number in exponential notation)\n  number = Math.log10(number);\n\n  // start/end cutoffs for exponent\n  const rangeStart = 0;\n  const rangeEnd = -8;\n\n  // get percent that number is through range\n  let percent = (number - rangeStart) / (rangeEnd - rangeStart);\n  percent = Math.min(Math.max(0, percent), 1);\n\n  // map percent to float gradient index\n  const gradientIndex = (gradient.length - 1) * percent;\n  // get integer indices below/above float index\n  const lowerColor = gradient[Math.floor(gradientIndex)];\n  const higherColor = gradient[Math.ceil(gradientIndex)];\n  // get percent that float index is between nearest integer indices\n  const percentBetween = gradientIndex % 1;\n\n  // interpolate color between gradient colors below/above float index\n  let color = {\n    r: lowerColor.r + (higherColor.r - lowerColor.r) * percentBetween,\n    g: lowerColor.g + (higherColor.g - lowerColor.g) * percentBetween,\n    b: lowerColor.b + (higherColor.b - lowerColor.b) * percentBetween,\n    a: lowerColor.a + (higherColor.a - lowerColor.a) * percentBetween\n  };\n\n  // clean rgba values\n  color.r = Math.floor(color.r);\n  color.g = Math.floor(color.g);\n  color.b = Math.floor(color.b);\n  color.a = color.a.toFixed(3);\n\n  // convert color in rgba format to css color string\n  color =\n    'rgba(' + color.r + ', ' + color.g + ', ' + color.b + ', ' + color.a + ')';\n\n  // return color\n  return color || '#ffffff';\n}\n\n// downloads provided data as csv file\n// data in format [ [A1, B1] , [A2, B2] ]\nexport function downloadCsv(data, filename) {\n  const fileContent = data.map((cell) => cell.join(',')).join('\\n');\n  const blob = new Blob([fileContent], { type: 'text/csv' });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  document.body.appendChild(link);\n  link.href = url;\n  link.download = (filename || 'data') + '.csv';\n  link.click();\n  window.URL.revokeObjectURL(url);\n  link.remove();\n}\n\n// make OS-friendly filename\nexport function makeFilenameFriendly(string) {\n  // remove leading and trailing whitespace\n  string = string.trim();\n  // replace special characters with dashes\n  string = string.replace(/[^0-9A-Za-z]/gi, '-');\n  // shorten if too long\n  string = string.substring(0, 15);\n  return string;\n}\n\n// downloads provided data as svg file\nexport function downloadSvg(data, filename) {\n  const fileContent = new XMLSerializer().serializeToString(data);\n  const blob = new Blob([fileContent], { type: 'image/svg+xml' });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  document.body.appendChild(link);\n  link.href = url;\n  link.download = (filename || 'data') + '.svg';\n  link.click();\n  window.URL.revokeObjectURL(url);\n  link.remove();\n}\n\n// show debug message on screen\n// useful for mobile debugging where no dev console available\nexport function debug(...args) {\n  let div = document.getElementById('_debug');\n  if (!div) {\n    div = document.createElement('div');\n    div.id = '_debug';\n    div.style.position = 'fixed';\n    div.style.left = 0;\n    div.style.top = 0;\n    div.style.background = 'rgba(255, 255, 255, 0.75)';\n    div.style.fontFamily = 'monospace';\n    div.style.fontSize = '10px';\n    div.style.color = '#ff00ff';\n    div.style.zIndex = 99999;\n    document.body.appendChild(div);\n  }\n  div.innerHTML += args.join(' | ');\n  div.innerHTML += '<br>';\n}\n\n// sort array in custom order\nexport function sortCustom(array, order, key) {\n  return array.sort((a, b) => {\n    if (key) {\n      a = a[key];\n      b = b[key];\n    }\n\n    a = order.indexOf(a);\n    b = order.indexOf(b);\n\n    if (a !== -1 && b !== -1)\n      return a - b;\n    else if (a !== -1)\n      return -1;\n    else if (b !== -1)\n      return 1;\n    else\n      return b - a;\n  });\n}\n\n// remove unnecessary preceding 'www.' and etc from url\nexport function shortenUrl(url) {\n  const regexes = ['^http://', '^https://', '^www.'];\n  for (const regex of regexes)\n    url = url.replace(new RegExp(regex), '');\n\n  return url;\n}\n\n// loop through new array of objects. for each object, find object in old\n// array that matches all compare keys, and transfer specified keys from\n// old object to new\nexport function transferObjectProps(\n  oldArray,\n  newArray,\n  compareKeys,\n  transferKeys\n) {\n  for (const newElement of newArray) {\n    for (const oldElement of oldArray) {\n      let matches = true;\n      for (const compareKey of compareKeys) {\n        if (oldElement[compareKey] !== newElement[compareKey]) {\n          matches = false;\n          break;\n        }\n      }\n      if (matches) {\n        for (const transferKey of transferKeys)\n          newElement[transferKey] = oldElement[transferKey];\n      }\n    }\n  }\n\n  return newArray;\n}\n\n// same as transferObjectProps, except arrays are now assumed to contain\n// objects with subKey that contains another array that contains the objects\n// to be transferred\nexport function transferQueryProps(\n  oldQueries,\n  newQueries,\n  subKey,\n  compareKeys,\n  transferKeys\n) {\n  for (const newQuery of newQueries) {\n    for (const newElement of newQuery[subKey]) {\n      for (const oldQuery of oldQueries) {\n        for (const oldElement of oldQuery[subKey]) {\n          let matches = true;\n          for (const compareKey of compareKeys) {\n            if (\n              !compareElements(oldElement[compareKey], newElement[compareKey])\n            ) {\n              matches = false;\n              break;\n            }\n          }\n          if (matches) {\n            for (const transferKey of transferKeys)\n              newElement[transferKey] = oldElement[transferKey];\n          }\n        }\n      }\n    }\n  }\n\n  return newQueries;\n}\n\n// compare two elements as primitives (eg number === number or string ===\n// string) or as arrays if both are arrays\nexport function compareElements(element1, element2) {\n  if (Array.isArray(element1) && Array.isArray(element2))\n    return compareArrays(element1, element2, true);\n  else\n    return element1 === element2;\n}\n\n// checks if arrays of primitives (strings, numbers, etc) are equal.\n// if specified, also check if arrays are equal in reverse\nexport function compareArrays(array1, array2, checkReverse) {\n  if (array1.length !== array2.length)\n    return false;\n\n  if (!checkReverse) {\n    // check forwards\n    return array1.every((element, index) => element === array2[index]);\n  } else {\n    // check forwards and backwards\n    return (\n      array1.every((element, index) => element === array2[index]) ||\n      array1\n        .slice()\n        .reverse()\n        .every((element, index) => element === array2[index])\n    );\n  }\n}\n\n// truncate string to character limit, insert ellipsis  if necessary\nexport function cutString(string, n) {\n  if (string.length <= n)\n    return string;\n  else\n    return string.substring(0, n - 3) + '...';\n}\n\n// make deep copy of object. ensures everything is clone/copy, not reference.\n// works for everything except circular refs, functions, and js Dates\nexport function copyObject(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"style\", null, \"\\n    #back_line,\\n    #front_line,\\n    #circle_1,\\n    #circle_2,\\n    #circle_3,\\n    #circle_4 {\\n      animation-duration: 1.5s;\\n      animation-timing-function: ease;\\n      animation-fill-mode: forwards;\\n    }\\n    #back_line {\\n      animation-name: draw_back_line;\\n    }\\n    @keyframes draw_back_line {\\n      0% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 60;\\n      }\\n      60% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 60;\\n      }\\n      100% {\\n        stroke-dasharray: 60;\\n        stroke-dashoffset: 0;\\n      }\\n    }\\n    #front_line {\\n      animation-name: draw_front_line;\\n    }\\n    @keyframes draw_front_line {\\n      0% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 158;\\n      }\\n      60% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 0;\\n      }\\n      100% {\\n        stroke-dasharray: 158;\\n        stroke-dashoffset: 0;\\n      }\\n    }\\n    #circle_1 {\\n      animation-name: draw_circle_1;\\n    }\\n    #circle_2 {\\n      animation-name: draw_circle_2;\\n    }\\n    #circle_3 {\\n      animation-name: draw_circle_3;\\n    }\\n    #circle_4 {\\n      animation-name: draw_circle_4;\\n    }\\n    @keyframes draw_circle_1 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      20% {\\n        transform: scale(0);\\n      }\\n      40% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_2 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      30% {\\n        transform: scale(0);\\n      }\\n      50% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_3 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      40% {\\n        transform: scale(0);\\n      }\\n      60% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n    @keyframes draw_circle_4 {\\n      0% {\\n        transform: scale(0);\\n      }\\n      50% {\\n        transform: scale(0);\\n      }\\n      70% {\\n        transform: scale(1);\\n      }\\n      100% {\\n        transform: scale(1);\\n      }\\n    }\\n  \");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"back_line\",\n  stroke: \"#bdbdbd\",\n  strokeWidth: 5,\n  fill: \"none\",\n  d: \"       M 20 50       L 80 50     \"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"front_line\",\n  stroke: \"#424242\",\n  strokeWidth: 7.5,\n  fill: \"none\",\n  d: \"       M 0 50       L 20 50       L 40 75       L 60 25       L 80 50       L 100 50     \"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(20,50)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_1\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#02b3e4\"\n}));\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(40,75)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_2\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#c341d8\"\n}));\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(60,25)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_3\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#fa750f\"\n}));\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(80,50)\"\n}, React.createElement(\"circle\", {\n  id: \"circle_4\",\n  cx: 0,\n  cy: 0,\n  r: 10,\n  fill: \"#e91e63\"\n}));\n\nvar SvgLogoAnimated = function SvgLogoAnimated(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogoAnimated, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo-animated.94624129.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Component } from 'react';\n\nimport { ReactComponent as Logo } from './logo-animated.svg';\n\n// page header display component\nexport class Header extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.showLogo = false;\n\n    // wait a bit for page to load before starting logo animation\n    window.setTimeout(() => this.setState({ showLogo: true }), 1000);\n  }\n\n  // display component\n  render() {\n    let logo;\n\n    if (this.state.showLogo)\n      logo = <Logo className='logo' />;\n    else\n      logo = <svg className='logo' />;\n    return (\n      <header>\n        {logo}\n        <h1>HETMECH</h1>\n        <h2>\n          A project of the{' '}\n          <a href='http://www.greenelab.com/'>Greene Laboratory</a>\n        </h2>\n      </header>\n    );\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50     \"\n});\n\nvar SvgArrowIconBoth = function SvgArrowIconBoth(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconBoth, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-both.5f01d574.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50       M 70 35       L 90 50       L 70 65     \"\n});\n\nvar SvgArrowIconForward = function SvgArrowIconForward(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconForward, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-forward.43aa27a1.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 10,\n  d: \"       M 90 50       L 10 50       M 30 35       L 10 50       L 30 65     \"\n});\n\nvar SvgArrowIconBackward = function SvgArrowIconBackward(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowIconBackward, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-icon-backward.c6a85500.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746       L 78.2842755245486 50       L 50 50     \"\n});\n\nvar SvgChipGene = function SvgChipGene(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipGene, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-gene.6afa0a5b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipCompound = function SvgChipCompound(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipCompound, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-compound.90909a37.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  clipPath: \"url(#clip)\",\n  d: \"         M 10 110         L 50 0         L 90 110         M 30 70         L 70 70       \"\n}));\n\nvar SvgChipAnatomy = function SvgChipAnatomy(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipAnatomy, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-anatomy.b055d214.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  d: \"       M 25 10       L 50 10       A 40 40 0 0 1 50 90       L 25 90       Z     \"\n});\n\nvar SvgChipDisease = function SvgChipDisease(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipDisease, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-disease.1a26261b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.5) translate(-50,-50)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 80 18       C 70 14 62 10 50 10       C 42 10 22 14 22 30       C 22 46 38 48.4 50 50       C 62 51.6 78 54 78 70       C 78 86 59 90 50 90       C 38 90 30 86 20 82     \"\n});\n\nvar SvgChipSymptom = function SvgChipSymptom(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipSymptom, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-symptom.2689ac77.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-42,0)\",\n  d: \"       M 80 18       C 70 14 62 10 50 10       C 42 10 22 14 22 30       C 22 46 38 48.4 50 50       C 62 51.6 78 54 78 70       C 78 86 59 90 50 90       C 38 90 30 86 20 82     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(42,0)\",\n  d: \"       M 75 10       L 25 10       L 25 90       L 75 90       M 30 50       L 65 50     \"\n});\n\nvar SvgChipSideEffect = function SvgChipSideEffect(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipSideEffect, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-side-effect.dbe94434.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-44,0)\",\n  d: \"       M 25 10       L 60 10       A 20 20 0 0 1 60 50       A 20 20 0 0 1 60 90       L 25 90       Z       M 30 50       L 60 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(44,0)\",\n  d: \"       M 25 90       L 25 10       L 60 10       A 20 20 0 0 1 60 50       L 30 50     \"\n});\n\nvar SvgChipBiologicalProcess = function SvgChipBiologicalProcess(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipBiologicalProcess, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-biological-process.979f4ab8.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-43,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(48,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipCellularComponent = function SvgChipCellularComponent(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipCellularComponent, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-cellular-component.b874e365.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  strokeLinejoin: \"bevel\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-40,0)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 10 90       L 10 -10       L 50 65       L 90 -10       L 90 90     \"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(60,0)\",\n  d: \"       M 75 10       L 25 10       L 25 90       M 30 50       L 65 50     \"\n});\n\nvar SvgChipMolecularFunction = function SvgChipMolecularFunction(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipMolecularFunction, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-molecular-function.787806a8.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-52,0)\",\n  d: \"     M 25 90     L 25 10     L 60 10     A 20 20 0 0 1 60 50     L 30 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"clipPath\", {\n  id: \"clip\"\n}, React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100\n}));\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  strokeLinejoin: \"bevel\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(45,0)\",\n  clipPath: \"url(#clip)\",\n  d: \"       M 10 -10       L 25 100       L 50 35       L 75 100       L 90 -10     \"\n});\n\nvar SvgChipPathway = function SvgChipPathway(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipPathway, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-pathway.543f179a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  strokeLinecap: \"square\",\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(-50,0)\",\n  d: \"       M 25 90       L 25 10       L 60 10       A 20 20 0 0 1 60 50       L 30 50     \"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 20,\n  transform: \"translate(50,50) scale(0.4) translate(-50,-50) translate(48,0)\",\n  d: \"       M 78.2842706364495 21.7157281415257       A 40 40 0 1 0 78.2842755245486 78.2842669703746     \"\n});\n\nvar SvgChipPharmacologicClass = function SvgChipPharmacologicClass(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChipPharmacologicClass, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chip-pharmacologic-class.b1fbdc49.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './chips.css';\n\nimport { ReactComponent as ArrowBoth } from './arrow-icon-both.svg';\nimport { ReactComponent as ArrowForward } from './arrow-icon-forward.svg';\nimport { ReactComponent as ArrowBackward } from './arrow-icon-backward.svg';\n\nimport { ReactComponent as Gene } from './chip-gene.svg';\nimport { ReactComponent as Compound } from './chip-compound.svg';\nimport { ReactComponent as Anatomy } from './chip-anatomy.svg';\nimport { ReactComponent as Disease } from './chip-disease.svg';\nimport { ReactComponent as Symptom } from './chip-symptom.svg';\nimport { ReactComponent as SideEffect } from './chip-side-effect.svg';\nimport { ReactComponent as BiologicalProcess } from './chip-biological-process.svg';\nimport { ReactComponent as CellularComponent } from './chip-cellular-component.svg';\nimport { ReactComponent as MolecularFunction } from './chip-molecular-function.svg';\nimport { ReactComponent as Pathway } from './chip-pathway.svg';\nimport { ReactComponent as PharmacologicClass } from './chip-pharmacologic-class.svg';\n\n// metanode 'chip' component\n// colored circle with abbreviation text in middle\n// eg (G) for 'gene'\nexport class MetanodeChip extends Component {\n  // display component\n  render() {\n    // get icon\n    let icon;\n    switch (this.props.type) {\n      case 'Gene':\n        icon = <Gene />;\n        break;\n      case 'Compound':\n        icon = <Compound />;\n        break;\n      case 'Anatomy':\n        icon = <Anatomy />;\n        break;\n      case 'Disease':\n        icon = <Disease />;\n        break;\n      case 'Symptom':\n        icon = <Symptom />;\n        break;\n      case 'Side Effect':\n        icon = <SideEffect />;\n        break;\n      case 'Biological Process':\n        icon = <BiologicalProcess />;\n        break;\n      case 'Cellular Component':\n        icon = <CellularComponent />;\n        break;\n      case 'Molecular Function':\n        icon = <MolecularFunction />;\n        break;\n      case 'Pathway':\n        icon = <Pathway />;\n        break;\n      case 'Pharmacologic Class':\n        icon = <PharmacologicClass />;\n        break;\n      default:\n        break;\n    }\n\n    let fillColor = '#424242';\n    let textColor = '#fafafa';\n    const style = this.props.hetioStyles[this.props.type];\n    if (style && style.fill_color)\n      fillColor = style.fill_color;\n    if (style && style.text_color)\n      textColor = style.text_color;\n\n    return (\n      <div className='metanode_chip' style={{ color: textColor }}>\n        <svg viewBox='0 0 100 100'>\n          <circle cx='50' cy='50' r='49' fill={fillColor} />\n        </svg>\n        {icon}\n      </div>\n    );\n  }\n}\n// connect component to global state\nMetanodeChip = connect((state) => ({\n  hetioStyles: state.hetioStyles\n}))(MetanodeChip);\n\n// metaedge 'chip' component\n// svg arrow with abbreviation text above\nexport class MetaedgeChip extends Component {\n  // display component\n  render() {\n    // get edge direction icon\n    let icon;\n    switch (this.props.direction) {\n      case 'backward':\n        icon = <ArrowBackward />;\n        break;\n      case 'forward':\n        icon = <ArrowForward />;\n        break;\n      default:\n        icon = <ArrowBoth />;\n        break;\n    }\n\n    let abbreviation = '';\n    if (this.props.metagraph.kind_to_abbrev)\n      abbreviation = this.props.metagraph.kind_to_abbrev[this.props.type];\n\n    return (\n      <div\n        className='metaedge_chip'\n        data-name={this.props.type}\n        data-abbreviation={abbreviation}\n      >\n        {icon}\n      </div>\n    );\n  }\n}\n// connect component to global state\nMetaedgeChip = connect((state) => ({\n  metagraph: state.metagraph\n}))(MetaedgeChip);\n\n// get html of metapath in form of visualization chips\nexport function metapathChips(edges) {\n  const path = edges.map((entry, index) => {\n    return (\n      <React.Fragment key={index}>\n        <MetanodeChip type={entry[0]} />\n        <MetaedgeChip type={entry[2]} direction={entry[3]} />\n        {index === edges.length - 1 && <MetanodeChip type={entry[1]} />}\n      </React.Fragment>\n    );\n  });\n\n  return path;\n}\n\n// get html of path in form of visualization chips\nexport function pathChips(path, expanded) {\n  return path.map((entry, index) => {\n    if (entry.element === 'node') {\n      return (\n        <NodeChip\n          key={index}\n          type={entry.type}\n          name={entry.name}\n          expanded={expanded}\n        />\n      );\n    }\n    if (entry.element === 'edge') {\n      return (\n        <MetaedgeChip\n          key={index}\n          type={entry.type}\n          direction={entry.direction}\n        />\n      );\n    }\n    return '';\n  });\n}\n\n// node 'chip' component\nexport class NodeChip extends Component {\n  // display component\n  render() {\n    let fillColor = '#424242';\n    let textColor = '#fafafa';\n    const style = this.props.hetioStyles[this.props.type];\n    if (style && style.fill_color)\n      fillColor = style.fill_color;\n    if (style && style.text_color)\n      textColor = style.text_color;\n\n    return (\n      <span\n        className='node_chip'\n        style={{ background: fillColor, color: textColor }}\n        data-expanded={this.props.expanded}\n      >\n        {this.props.name}\n      </span>\n    );\n  }\n}\n// connect component to global state\nNodeChip = connect((state) => ({\n  hetioStyles: state.hetioStyles\n}))(NodeChip);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Component } from 'react';\nimport Fade from '@material-ui/core/Fade';\n\nimport './tooltip.css';\n\n// open delay in ms\nconst delay = 1000;\n\n// tooltip (helper text) popup component\nexport class Tooltip extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.open = false;\n    this.state.x = 0;\n    this.state.y = 0;\n    this.state.opacity = 0;\n\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.openTooltip = this.openTooltip.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n  }\n\n  // when mouse enters target\n  onMouseEnter(event) {\n    const target = event.target;\n    // delay opening tooltip\n    window.setTimeout(() => this.openTooltip(target), delay);\n    // track hover state\n    this.setState({ hover: true });\n  }\n\n  // open tooltip\n  openTooltip(target) {\n    // if target not being hovered anymore, cancel open\n    // if target not specified, exit\n    if (!this.state.hover || !target) {\n      this.setState({ open: false });\n      return;\n    }\n\n    // get x/y position of target to pass to tooltip popup\n    const left =\n      target.getBoundingClientRect().left + document.documentElement.scrollLeft;\n    const top =\n      target.getBoundingClientRect().top + document.documentElement.scrollTop;\n\n    // avoid scrunching tooltip too skinny when close to right side of view\n    const x = Math.min(left, document.body.clientWidth - 200);\n    const y = top;\n\n    // open tooltip and update x/y position\n    this.setState({ open: true, x: x, y: y });\n  }\n\n  // when mouse leaves target\n  onMouseLeave() {\n    this.setState({ hover: false, open: false });\n  }\n\n  // display component\n  render() {\n    // if no specified text, skip attaching events and render\n    if (!this.props.text)\n      return <>{this.props.children}</>;\n\n    // mouse handler props to attach to children\n    const props = {\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave\n    };\n\n    // attach handler props to children\n    const children = React.Children.map(this.props.children, (element) => {\n      // if element is react element, create clone with attached props\n      if (React.isValidElement(element))\n        return React.cloneElement(element, props);\n      // if element is text node, wrap in span and attach props\n      else if (typeof element === 'string')\n        return <span {...props}>{element}</span>;\n      // otherwise, pass element through untouched\n      else\n        return element;\n    });\n\n    return (\n      <>\n        {children}\n        {this.state.open && (\n          <Popup\n            text={this.props.text}\n            open={this.state.open}\n            x={this.state.x}\n            y={this.state.y}\n          />\n        )}\n      </>\n    );\n  }\n}\n\n// popup component to display tooltip and text\n// make React 'portal' to append tooltip to body instead of parent\n// (allows tooltip to pop out of containing elements like tables)\nclass Popup extends Component {\n  render() {\n    return ReactDOM.createPortal(\n      <Fade in={this.props.open}>\n        <div\n          className='tooltip'\n          style={{\n            left: this.props.x + 'px',\n            top: this.props.y + 'px'\n          }}\n        >\n          {this.props.text}\n        </div>\n      </Fade>,\n      document.body\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faHighlighter } from '@fortawesome/free-solid-svg-icons';\n\nimport { Tooltip } from './tooltip.js';\nimport './buttons.css';\n\n// button component\nexport class Button extends Component {\n  // display component\n  render() {\n    return (\n      <Tooltip text={this.props.tooltipText}>\n        <button\n          className={this.props.className}\n          onClick={(event) => {\n            if (event.ctrlKey) {\n              if (this.props.onCtrlClick)\n                this.props.onCtrlClick();\n            } else if (event.shiftKey) {\n              if (this.props.onShiftClick)\n                this.props.onShiftClick();\n            } else if (this.props.onClick)\n              this.props.onClick();\n          }}\n        >\n          {this.props.children}\n        </button>\n      </Tooltip>\n    );\n  }\n}\n\n// text button component\n// link colored button with text and icon to right\nexport class TextButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className={this.props.className + ' text_button small'}\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.text && <span>{this.props.text}</span>}\n        <FontAwesomeIcon icon={this.props.icon} className='text_button_icon' />\n      </Button>\n    );\n  }\n}\n\n// checkbox button component\nexport class Checkbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faCheck} />\n        )}\n      </Button>\n    );\n  }\n}\n\n// eye checkbox button component\nexport class EyeCheckbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faEye} />\n        )}\n      </Button>\n    );\n  }\n}\n\n// highlighter checkbox button component\nexport class HighlighterCheckbox extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className='checkbox_button'\n        tooltipText={this.props.tooltipText}\n        onClick={this.props.onClick}\n        onCtrlClick={this.props.onCtrlClick}\n      >\n        {this.props.checked && (\n          <FontAwesomeIcon className='fa-xs' icon={faHighlighter} />\n        )}\n      </Button>\n    );\n  }\n}\n","// url for hetmech specific definitions (path count, p value, dwpc, etc)\nimport hetmechDefinitions from './definitions.json';\n// url for metagraph (node and edge metatypes and abbreviations)\nconst metagraphUrl =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/hetnet/json/hetionet-v1.0-metagraph.json';\n// url for hetio definitions (metanodes, properties, etc)\nconst hetioDefinitions =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/describe/definitions.json';\n// url for hetio styles (metanode fill/text color, etc)\nconst hetioStyles =\n  'https://raw.githubusercontent.com/hetio/hetionet/6e08d3039abaad8f6dafe26fe3b143773b0d7e51/describe/styles.json';\n// url for node search\nconst nodeSearchServer = 'https://search-api.het.io/v1/nodes/';\n// url for node search with results sorted by metapath count\nconst nodeSearchMetapathsServer =\n  'https://search-api.het.io/v1/count-metapaths-to/';\n// url for random node pair\nconst randomNodeServer = 'https://search-api.het.io/v1/random-node-pair/';\n// url for metapaths search\nconst metapathSearchServer = 'https://search-api.het.io/v1/query-metapaths/';\n// url for paths search\nconst pathSearchServer = 'https://search-api.het.io/v1/query-paths/';\n\n// get resource at url and parse as json\nexport function fetchJson(url) {\n  return fetch(url)\n    .then((response) => response.json())\n    .then((results) => {\n      return results || {};\n    })\n    .catch((error) => {\n      console.log(error, url);\n      return {};\n    });\n}\n\n// get metagraph\nexport function getMetagraph() {\n  return fetchJson(metagraphUrl);\n}\n\n// get hetio definitions\nexport function getHetioDefinitions() {\n  return fetchJson(hetioDefinitions);\n}\n\n// get hetio styles\nexport function getHetioStyles() {\n  return fetchJson(hetioStyles);\n}\n\n// get hetmech definitions\nexport function getHetmechDefinitions() {\n  return hetmechDefinitions;\n}\n\n// lookup node by id\nexport function lookupNodeById(id) {\n  if (!id)\n    return null;\n  const query = nodeSearchServer + id;\n  return fetchJson(query);\n}\n\n// search for nodes by string, and with metatype filter list\n// accepts comma-separated list of abbreviations of metatypes to include\nexport function searchNodes(searchString, metatypes, otherNode) {\n  const params = new URLSearchParams();\n  params.set('search', searchString);\n  params.set('limit', '100');\n  if (metatypes)\n    params.set('metanodes', metatypes);\n  if (otherNode)\n    params.set('count-metapaths-to', otherNode);\n  const query = nodeSearchServer + '?' + params.toString();\n  return fetchJson(query).then((response) => {\n    return response.results;\n  });\n}\n\n// search for nodes sorted by metapath count\nexport function searchNodesMetapaths(otherNode) {\n  const query = nodeSearchMetapathsServer + otherNode;\n  return fetchJson(query).then((response) => {\n    return response.results;\n  });\n}\n\n// get random source/target node pair that has metapath(s)\nexport function getRandomNodePair() {\n  const query = randomNodeServer;\n  return fetchJson(query).then((response) => {\n    return response;\n  });\n}\n\n// search for metapaths by source/target id\nexport function searchMetapaths(sourceId, targetId) {\n  const params = new URLSearchParams();\n  params.set('source', sourceId);\n  params.set('target', targetId);\n  const query = metapathSearchServer + '?' + params.toString();\n  return fetchJson(query).then((response) => {\n    return response.path_counts;\n  });\n}\n\n// search for paths by metapaths\nexport function searchPaths(sourceId, targetId, metapath) {\n  const params = new URLSearchParams();\n  params.set('source', sourceId);\n  params.set('target', targetId);\n  params.set('metapath', metapath);\n  const query = pathSearchServer + '?' + params.toString();\n  return fetchJson(query).then((response) => {\n    return response;\n  });\n}\n","// actions to update global state variables\n\n// set definitions\nexport function setDefinitions({\n  metagraph,\n  hetioDefinitions,\n  hetioStyles,\n  hetmechDefinitions\n}) {\n  return {\n    type: 'set_definitions',\n    payload: {\n      metagraph: metagraph,\n      hetioDefinitions: hetioDefinitions,\n      hetioStyles: hetioStyles,\n      hetmechDefinitions: hetmechDefinitions\n    }\n  };\n}\n\n// update source and/or target node\nexport function updateSourceTargetNodes({\n  sourceNode,\n  targetNode,\n  dontUpdateUrl\n}) {\n  return {\n    type: 'update_source_target_nodes',\n    payload: { sourceNode: sourceNode, targetNode: targetNode },\n    updateUrl: !dontUpdateUrl\n  };\n}\n\n// swap source/target node\nexport function swapSourceTargetNodes() {\n  return {\n    type: 'swap_source_target_nodes',\n    updateUrl: false\n  };\n}\n\n// update metapaths\nexport function updateMetapaths({\n  metapaths,\n  dontUpdateUrl,\n  preserveChecks\n}) {\n  return {\n    type: 'update_metapaths',\n    payload: { metapaths: metapaths },\n    updateUrl: !dontUpdateUrl,\n    preserveChecks: preserveChecks\n  };\n}\n\n// update path queries\nexport function updatePathQueries({ pathQueries, preserveChecks }) {\n  return {\n    type: 'update_path_queries',\n    payload: { pathQueries: pathQueries },\n    preserveChecks: preserveChecks\n  };\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"circle\", {\n  cx: 25,\n  cy: 65,\n  r: 10,\n  fill: \"currentColor\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"circle\", {\n  cx: 40,\n  cy: 35,\n  r: 10,\n  fill: \"currentColor\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"circle\", {\n  cx: 70,\n  cy: 50,\n  r: 10,\n  fill: \"currentColor\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 5,\n  d: \"       M 25 65       L 40 35       L 70 50     \"\n});\n\nvar SvgPath = function SvgPath(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgPath, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/path.1b180159.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Downshift from 'downshift';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faDice } from '@fortawesome/free-solid-svg-icons';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport { MetanodeChip } from './chips.js';\nimport { Tooltip } from './tooltip.js';\nimport { Button } from './buttons.js';\nimport { searchNodes } from './backend-query.js';\nimport { searchNodesMetapaths } from './backend-query.js';\nimport { lookupNodeById } from './backend-query.js';\nimport { getRandomNodePair } from './backend-query.js';\nimport { updateSourceTargetNodes } from './actions.js';\nimport { swapSourceTargetNodes } from './actions.js';\nimport { sortCustom } from './util.js';\nimport { copyObject } from './util.js';\nimport { ReactComponent as PathIcon } from './path.svg';\nimport './node-search.css';\n\n// node search section component\n// target and source node search boxes and swap button\nexport class NodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.filters = [];\n    this.state.filterString = '';\n\n    this.updateFilters = this.updateFilters.bind(this);\n  }\n\n  // get filter state from filter child component\n  updateFilters(filters, filterString) {\n    this.setState({ filters: filters, filterString: filterString });\n  }\n\n  // display component\n  render() {\n    return (\n      <section className='center'>\n        <NodeSearchContext.Provider\n          value={{\n            filterString: this.state.filterString\n          }}\n        >\n          <Filters\n            filters={this.state.filters}\n            filterString={this.state.filterString}\n            updateFilters={this.updateFilters}\n          />\n          <SourceNodeSearch />\n          <SwapButton />\n          <RandomButton />\n          <TargetNodeSearch />\n        </NodeSearchContext.Provider>\n      </section>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst NodeSearchContext = React.createContext({});\n\n// filter filter component\n// toggle buttons to specify which types of nodes to limit search to\nclass Filters extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.solo = this.solo.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.metagraph.metanode_kinds === this.props.metagraph.metanode_kinds\n    )\n      return;\n\n    // initialize filters\n    let filters = [];\n    const filterString = '';\n\n    for (const filter of this.props.metagraph.metanode_kinds)\n      filters.push({ name: filter, active: true });\n\n    // display filters in custom order\n    const order = [\n      'Gene',\n      'Compound',\n      'Anatomy',\n      'Disease',\n      'Symptom',\n      'Side Effect',\n      'Biological Process',\n      'Cellular Component',\n      'Molecular Function',\n      'Pathway',\n      'Pharmacolocic Class'\n    ];\n    filters = sortCustom(filters, order, 'name');\n\n    this.props.updateFilters(filters, filterString);\n  }\n\n  // checks whether all filters are active\n  allOn(filters) {\n    for (const filter of filters) {\n      if (!filter.active)\n        return false;\n    }\n\n    return true;\n  }\n\n  // checks whether all filters besides the specified filter are off\n  allOthersOff(filters, type) {\n    for (const filter of filters) {\n      if (type !== filter.name && filter.active)\n        return false;\n    }\n\n    return true;\n  }\n\n  // toggles the specified filters on/off\n  toggle(type) {\n    const newFilters = copyObject(this.props.filters);\n\n    for (const filter of newFilters) {\n      if (filter.name === type)\n        filter.active = !filter.active;\n    }\n\n    this.props.updateFilters(newFilters, this.toString(newFilters));\n  }\n\n  // solo filter (turn all others off)\n  solo(type) {\n    const newFilters = copyObject(this.props.filters);\n    const allOthersOff = this.allOthersOff(newFilters, type);\n\n    for (const filter of newFilters) {\n      if (allOthersOff)\n        filter.active = true;\n      else {\n        if (type === filter.name)\n          filter.active = true;\n        else\n          filter.active = false;\n      }\n    }\n\n    this.props.updateFilters(newFilters, this.toString(newFilters));\n  }\n\n  // turn state of filters into string query list of metanode metagraph\n  toString(filters) {\n    if (this.allOn(filters))\n      return '';\n\n    const list = [];\n    for (const filter of filters) {\n      if (filter.active)\n        list.push(this.props.metagraph.kind_to_abbrev[filter.name]);\n    }\n\n    return list.join(',');\n  }\n\n  // display component\n  render() {\n    // make list of filter buttons\n    const buttons = this.props.filters.map((filter, index) => (\n      <FilterButton\n        key={index}\n        name={filter.name}\n        tooltipText={this.props.hetioDefinitions.metanodes[filter.name]}\n        active={filter.active}\n        toggle={this.toggle}\n        solo={this.solo}\n      />\n    ));\n\n    return <>{buttons}</>;\n  }\n}\n// connect component to global state\nFilters = connect((state) => ({\n  metagraph: state.metagraph,\n  hetioDefinitions: state.hetioDefinitions\n}))(Filters);\n\n// filter button component\nclass FilterButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        className={\n          'node_search_filter_button' +\n          (this.props.active ? '' : ' node_search_filter_button_off')\n        }\n        tooltipText={this.props.tooltipText}\n        onClick={() => this.props.toggle(this.props.name)}\n        onCtrlClick={() => this.props.solo(this.props.name)}\n      >\n        <MetanodeChip type={this.props.name} />\n        {this.props.name}\n      </Button>\n    );\n  }\n}\n\n// source node search box component\nclass SourceNodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  // when user makes a new node selection\n  onChange(value) {\n    this.props.dispatch(updateSourceTargetNodes({ sourceNode: value }));\n    // unfocus search box on selection\n    if (value)\n      document.activeElement.blur();\n  }\n\n  // display component\n  render() {\n    return (\n      <SearchBox\n        label='Source Node'\n        tooltipText='The starting node of the paths'\n        node={this.props.node}\n        otherNode={this.props.otherNode}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n// connect component to global state\nSourceNodeSearch = connect((state) => ({\n  node: state.sourceNode,\n  otherNode: state.targetNode\n}))(SourceNodeSearch);\n\n// source node search box component\nclass TargetNodeSearch extends Component {\n  // initialize component\n  constructor() {\n    super();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  // when user makes a new node selection\n  onChange(value) {\n    this.props.dispatch(updateSourceTargetNodes({ targetNode: value }));\n    // unfocus search box on selection\n    if (value)\n      document.activeElement.blur();\n  }\n\n  // display component\n  render() {\n    return (\n      <SearchBox\n        label='Target Node'\n        tooltipText='The ending node of the paths'\n        node={this.props.node}\n        otherNode={this.props.otherNode}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n// connect component to global state\nTargetNodeSearch = connect((state) => ({\n  node: state.targetNode,\n  otherNode: state.sourceNode\n}))(TargetNodeSearch);\n\n// search box component with dropdown autocomplete/autosuggest\nclass SearchBox extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.searchResults = [];\n\n    this.inputRef = React.createRef();\n    this.formRef = React.createRef();\n\n    this.onInput = this.onInput.bind(this);\n  }\n\n  // when user types into or modifies text in text box\n  onInput(searchString) {\n    let otherNodeId = '';\n    if (this.props.otherNode && this.props.otherNode.id !== undefined)\n      otherNodeId = this.props.otherNode.id;\n\n    // if one node selected and other node search box focused but empty,\n    // show list of nodes in order of metapath count\n    if (searchString === '' && otherNodeId !== '') {\n      searchNodesMetapaths(otherNodeId).then((results) =>\n        this.setState({ searchResults: results || [] })\n      );\n    } \n    // otherwise, show normal search results based on search string\n    else {\n      searchNodes(searchString, this.context.filterString, otherNodeId).then(\n        (results) =>\n          this.setState({ searchResults: results || [] })\n      );\n    }\n  }\n\n  // convert result/selection item to string to display in text box\n  itemToString(item) {\n    if (item && item.name)\n      return item.name;\n    else\n      return '';\n  }\n\n  // display component\n  render() {\n    return (\n      <Downshift\n        onChange={this.props.onChange}\n        onBlur={this.onBlur}\n        onInputValueChange={this.onInput}\n        itemToString={this.itemToString}\n        selectedItem={this.props.node}\n      >\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          isOpen,\n          selectedItem,\n          highlightedIndex,\n          clearSelection,\n          openMenu\n        }) => (\n          <div className='node_search_form' ref={this.formRef}>\n            <span className='small light node_search_form_label'>\n              <Tooltip text={this.props.tooltipText}>\n                {this.props.label}\n              </Tooltip>\n            </span>\n            <TextBox\n              inputRef={this.inputRef}\n              getInputProps={getInputProps}\n              clearSelection={clearSelection}\n              selectedItem={selectedItem}\n              onFocus={this.onInput}\n              openMenu={openMenu}\n            />\n            <Dropdown\n              isOpen={isOpen}\n              inputRef={this.inputRef}\n              formRef={this.formRef}\n              getMenuProps={getMenuProps}\n              searchResults={this.state.searchResults}\n              showMetapathCount={this.props.otherNode.id !== undefined}\n              selectedItem={selectedItem}\n              highlightedIndex={highlightedIndex}\n              getItemProps={getItemProps}\n            />\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n// connect component to context component\nSearchBox.contextType = NodeSearchContext;\n\n// text box sub-component of search box component\nclass TextBox extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.focused = false;\n\n    this.onInput = this.onInput.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  // when user types into text box\n  onInput(event) {\n    if (event.target.value === '')\n      this.props.clearSelection();\n  }\n\n  // when user focuses text box\n  onFocus(event) {\n    this.props.onFocus(event.target.value);\n    this.props.openMenu();\n    this.setState({ focused: true });\n  }\n\n  // when user unfocuses text box\n  onBlur() {\n    this.setState({ focused: false });\n  }\n\n  // display component\n  render() {\n    let overlay = <></>;\n\n    const showOverlay =\n      !this.state.focused &&\n      this.props.selectedItem.metanode &&\n      this.props.selectedItem.name;\n\n    if (showOverlay) {\n      overlay = (\n        <div className='node_search_field_overlay'>\n          <MetanodeChip type={this.props.selectedItem.metanode} />\n          <span className='node_search_results_item_name nowrap'>\n            {this.props.selectedItem.name}\n          </span>\n        </div>\n      );\n    }\n    return (\n      <>\n        <TextField\n          {...this.props.getInputProps({\n            onChange: this.onInput\n          })}\n          inputRef={this.props.inputRef}\n          placeholder='id, name, or metanode'\n          classes={{ root: 'node_search_field_container' }}\n          InputProps={{\n            classes: {\n              root: 'node_search_field',\n              focused: 'node_search_field_focused',\n              input: showOverlay\n                ? 'node_search_input_blank'\n                : 'node_search_input'\n            }\n          }}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n        />\n        {overlay}\n        <div className='node_search_icon'>\n          <FontAwesomeIcon icon={faSearch} />\n        </div>\n      </>\n    );\n  }\n}\n\n// dropdown sub-component of search box component\nclass Dropdown extends Component {\n  // display component\n  render() {\n    return (\n      <Popper\n        open={this.props.isOpen}\n        anchorEl={this.props.inputRef.current}\n        placement='bottom-start'\n        className='node_search_results_popper'\n        container={this.props.formRef.current}\n        disablePortal={true}\n        {...this.props.getMenuProps()}\n      >\n        <Paper className='node_search_results_paper'>\n          {this.props.searchResults.map((result, index) => (\n            <MenuItem\n              className={\n                'node_search_results_item' +\n                (this.props.selectedItem.id === result.id\n                  ? ' node_search_results_item_selected'\n                  : '') +\n                (this.props.highlightedIndex === index\n                  ? ' node_search_results_item_selected'\n                  : '')\n              }\n              {...this.props.getItemProps({\n                item: result,\n                key: index\n              })}\n            >\n              <MetanodeChip type={result.metanode} />\n              <span className='node_search_results_item_name'>\n                {result.name}\n              </span>\n              {this.props.showMetapathCount && (\n                <span className='node_search_results_item_count'>\n                  <PathIcon />\n                  <span>\n                    {result.metapath_count || 0}\n                  </span>\n                </span>\n              )}\n            </MenuItem>\n          ))}\n        </Paper>\n      </Popper>\n    );\n  }\n}\n\n// swap button component\n// switches source/target node\nclass SwapButton extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  // when user clicks button\n  onClick() {\n    this.props.dispatch(swapSourceTargetNodes());\n  }\n\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText='Swap source and target node'\n        className='node_search_swap_button'\n        onClick={this.onClick}\n      >\n        <FontAwesomeIcon icon={faExchangeAlt} />\n      </Button>\n    );\n  }\n}\n// connect component to global state\nSwapButton = connect()(SwapButton);\n\n// random button component\n// picks random source/target node with metapaths\nclass RandomButton extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  // when user clicks button\n  onClick() {\n    getRandomNodePair()\n      .then((results) => {\n        return Promise.all([\n          lookupNodeById(results.source_id),\n          lookupNodeById(results.target_id)\n        ]);\n      })\n      .then(([newSourceNode, newTargetNode]) =>\n        this.props.dispatch(\n          updateSourceTargetNodes({\n            sourceNode: newSourceNode,\n            targetNode: newTargetNode\n          })\n        )\n      );\n  }\n\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText='Get random source/target node pair that has at least one metapath result'\n        className='node_search_swap_button'\n        onClick={this.onClick}\n      >\n        <FontAwesomeIcon icon={faDice} />\n      </Button>\n    );\n  }\n}\n// connect component to global state\nRandomButton = connect()(RandomButton);\n","import React from 'react';\nimport { Component } from 'react';\n\nimport './dynamic-field.css';\n\n// expandable textbox-like component, similar to excel spreadsheet cell\n// when focused, field expands and prop 'fullValue' displayed,\n// otherwise, prop 'value' displayed (often 'fullValue' rounded off)\nexport class DynamicField extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.focused = false;\n    this.field = React.createRef();\n\n    this.onClick = this.onClick.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n  }\n\n  // when field is clicked or touched\n  onClick(event) {\n    // force click on link in field if link was target of click\n    if (event && event.target && event.target.tagName.toLowerCase() === 'a')\n      event.target.click();\n    // force focus on field\n    this.field.current.focus();\n  }\n\n  // when field loses focus\n  onBlur() {\n    this.setState({ focused: false }, this.deselectAll);\n  }\n\n  // when field is focused (tabbed to, clicked, etc)\n  onFocus() {\n    this.setState({ focused: true }, this.selectAll);\n  }\n\n  // deselect any selected text in window\n  deselectAll() {\n    window.getSelection().empty();\n  }\n\n  // select contents of field\n  selectAll() {\n    // set delay for select to make sure component has rendered\n    window.setTimeout(function() {\n      window.getSelection().empty();\n      window.getSelection().selectAllChildren(document.activeElement);\n    }, 10);\n  }\n\n  // display component\n  render() {\n    let displayValue;\n\n    // show full value if focused, or short value if not\n    if (this.state.focused)\n      displayValue = this.props.fullValue || this.props.value;\n    else\n      displayValue = this.props.value;\n\n    // if value just text, set 'nowrap' to truncate with ellipsis\n    if (typeof displayValue === 'string')\n      displayValue = <span className='nowrap'>{displayValue}</span>;\n\n    return (\n      <div\n        ref={this.field}\n        tabIndex='0'\n        onClick={this.onClick}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        className={'dynamic_field ' + (this.props.className || '')}\n        data-expanded={this.state.focused}\n      >\n        {displayValue}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { Button } from './buttons.js';\nimport './collapsible-section.css';\n\n// accordion (collapse/expand) section component\nexport class CollapsibleSection extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.collapsed = false;\n\n    this.loadState = this.loadState.bind(this);\n    this.saveState = this.saveState.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  // when component mounts\n  componentDidMount() {\n    if (this.loadState())\n      this.setState({ collapsed: true });\n  }\n\n  // load collapsed state from local storage if exists\n  loadState() {\n    const key = this.props.label;\n    return key && window.localStorage.getItem(key) === 'true';\n  }\n\n  // save collapse state to local storage\n  saveState(collapsed) {\n    const key = this.props.label;\n    if (key)\n      window.localStorage.setItem(key, String(String(collapsed) === 'true'));\n  }\n\n  // toggle collapse/expand\n  toggle() {\n    this.setState({ collapsed: !this.state.collapsed });\n    this.saveState(!this.state.collapsed);\n  }\n\n  // display component\n  render() {\n    return (\n      <div\n        className='collapsible_section'\n        data-collapsed={this.state.collapsed}\n      >\n        <Button\n          tooltipText={this.props.tooltipText}\n          className='collapsible_section_header'\n          onClick={this.toggle}\n        >\n          <div>{this.props.label}</div>\n          <FontAwesomeIcon\n            icon={this.state.collapsed ? faAngleUp : faAngleDown}\n          />\n        </Button>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { MetanodeChip } from './chips.js';\nimport { Tooltip } from './tooltip.js';\nimport { TextButton } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { shortenUrl } from './util.js';\nimport { sortCustom } from './util.js';\n\n// node results section component\n// details about source/target nodes\nexport class NodeResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <NodeCard label='Source Node' node={this.props.sourceNode} />\n        <NodeCard label='Target Node' node={this.props.targetNode} />\n      </section>\n    );\n  }\n}\n// connect component to global state\nNodeResults = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode\n}))(NodeResults);\n\n// node 'card' component\n// displays details about source/target node\nclass NodeCard extends Component {\n  // display component\n  render() {\n    return (\n      <CollapsibleSection\n        label={this.props.label}\n        tooltipText={'Details about the ' + this.props.label.toLowerCase()}\n      >\n        {this.props.node.name ? (\n          <TableFull node={this.props.node} />\n        ) : (\n          <TableEmpty label={this.props.label} />\n        )}\n      </CollapsibleSection>\n    );\n  }\n}\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.showMore = false;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n  }\n\n  // toggle show/hide extra fields\n  toggleShowMore() {\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // display row entries\n  rows() {\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.nodes\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n    // get primary fields from top level of node\n    let primaryFields = ['name', 'metanode', 'source', 'identifier', 'id'];\n    // get first/second column text (key/value) for each field\n    primaryFields = primaryFields.map((field) => {\n      // handle special field cases\n      let specialSecondCol;\n      if (field === 'metanode') {\n        // make text with metanode chip\n        specialSecondCol = (\n          <>\n            <MetanodeChip type={this.props.node[field]} />\n            <span className='nowrap'>{this.props.node[field]}</span>\n          </>\n        );\n      } else if (field === 'source') {\n        // make link\n        const linkUrl = this.props.node.url || this.props.node.properties.url || '';\n        let linkText = this.props.node.properties.source || linkUrl;\n        linkText = shortenUrl(linkText);\n        specialSecondCol = (\n          <a className='nowrap' href={linkUrl}>\n            {linkText}\n          </a>\n        );\n      }\n      // get first/second column text (key/value) for each field\n      return {\n        firstCol: field,\n        secondCol: specialSecondCol || String(this.props.node[field]),\n        tooltipText: tooltipText[field]\n      };\n    });\n    // remove id and identifier if table not expanded\n    if (!this.state.showMore) {\n      primaryFields.splice(\n        primaryFields.findIndex((field) => field.firstCol === 'id'),\n        1\n      );\n      primaryFields.splice(\n        primaryFields.findIndex((field) => field.firstCol === 'identifier'),\n        1\n      );\n    }\n\n    // get 'extra fields' from node 'properties' field\n    let extraFields = [];\n    if (this.state.showMore) {\n      extraFields = Object.keys(this.props.node.properties);\n      // remove source and url, since they are combined and added to\n      // primary fields above\n      extraFields.splice(extraFields.indexOf('source'), 1);\n      extraFields.splice(extraFields.indexOf('url'), 1);\n      // get first/second column text (key/value) for each field\n      extraFields = extraFields.map((field) => ({\n        firstCol: field,\n        secondCol: String(this.props.node.properties[field]),\n        tooltipText: tooltipText[field]\n      }));\n    }\n\n    // combine primary and extra fields\n    let fields = primaryFields.concat(extraFields);\n\n    // display fields in custom order\n    const order = [\n      'name',\n      'metanode',\n      'source',\n      'description',\n      'identifier',\n      'id'\n    ];\n    fields = sortCustom(fields, order, 'firstCol');\n\n    // make rows from fields\n    return fields.map((field, index) => {\n      return (\n        <tr key={index}>\n          <td className='col_s small light'>\n            <Tooltip text={field.tooltipText}>{field.firstCol}</Tooltip>\n          </td>\n          <td>\n            <DynamicField value={field.secondCol} className='left' />\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  // display component\n  render() {\n    return (\n      <table className='node_results_table'>\n        <tbody>\n          {this.rows()}\n          <tr>\n            <td className='center' colSpan='2'>\n              <TextButton\n                text={this.state.showMore ? 'show less ' : 'show more '}\n                icon={this.state.showMore ? faAngleUp : faAngleDown}\n                className='link_button small'\n                onClick={this.toggleShowMore}\n                tooltipText='Show more information about the node'\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n// connect component to global state\nTableFull = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableFull);\n\n// table with no results component\nclass TableEmpty extends Component {\n  render() {\n    return (\n      <table className='node_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>\n              select a {this.props.label.toLowerCase()}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { metapathChips } from './chips.js';\nimport { Button } from './buttons.js';\nimport { TextButton } from './buttons.js';\nimport { Checkbox } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { makeFilenameFriendly } from './util.js';\nimport { downloadCsv } from './util.js';\nimport { toFixed } from './util.js';\nimport { toExponential } from './util.js';\nimport { toGradient } from './util.js';\nimport { sortCustom } from './util.js';\nimport { copyObject } from './util.js';\nimport { updateMetapaths } from './actions.js';\nimport './metapath-results.css';\n\n// path results section component\nexport class MetapathResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <CollapsibleSection\n          label='Metapaths'\n          tooltipText=\n            'Metapaths of length <= 3 between the source and target node'\n        >\n          {this.props.metapaths.length > 0 ? <TableFull /> : <TableEmpty />}\n        </CollapsibleSection>\n      </section>\n    );\n  }\n}\n// connect component to global state\nMetapathResults = connect((state) => ({\n  metapaths: state.metapaths\n}))(MetapathResults);\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.showMore = false;\n    this.state.allChecked = false;\n    this.state.sortColumn = 'adjusted_p_value';\n    this.state.sortUp = false;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n    this.toggleAllChecked = this.toggleAllChecked.bind(this);\n    this.allChecked = this.allChecked.bind(this);\n    this.checkAll = this.checkAll.bind(this);\n    this.uncheckAll = this.uncheckAll.bind(this);\n    this.allOthersUnchecked = this.allOthersUnchecked.bind(this);\n    this.toggleChecked = this.toggleChecked.bind(this);\n    this.soloChecked = this.soloChecked.bind(this);\n    this.changeSort = this.changeSort.bind(this);\n    this.downloadCsv = this.downloadCsv.bind(this);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (this.props.metapaths !== prevProps.metapaths)\n      this.updateAllChecked();\n  }\n\n  // checks if all rows checked and updates state\n  updateAllChecked() {\n    if (this.allChecked())\n      this.setState({ allChecked: true });\n    else\n      this.setState({ allChecked: false });\n  }\n\n  // toggle show more/less\n  toggleShowMore(event) {\n    if (event)\n      event.preventDefault();\n\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // toggle check/uncheck all\n  toggleAllChecked() {\n    if (this.allChecked())\n      this.uncheckAll();\n    else\n      this.checkAll();\n  }\n\n  // checks whether all metapaths are checked\n  allChecked() {\n    for (const metapath of this.props.metapaths) {\n      if (!metapath.checked)\n        return false;\n    }\n\n    return true;\n  }\n\n  // makes all metapaths checked\n  checkAll() {\n    const newMetapaths = copyObject(this.props.metapaths);\n\n    for (const metapath of newMetapaths)\n      metapath.checked = true;\n\n    this.props.dispatch(updateMetapaths({ metapaths: newMetapaths }));\n  }\n\n  // makes all metapaths unchecked\n  uncheckAll() {\n    const newMetapaths = copyObject(this.props.metapaths);\n\n    for (const metapath of newMetapaths)\n      metapath.checked = false;\n\n    this.props.dispatch(updateMetapaths({ metapaths: newMetapaths }));\n  }\n\n  // checks whether all metapaths besides the specified are unchecked\n  allOthersUnchecked(id) {\n    for (const metapath of this.props.metapaths) {\n      if (id !== metapath.id && metapath.checked)\n        return false;\n    }\n\n    return true;\n  }\n\n  // toggles the specified metapaths on/off\n  toggleChecked(id) {\n    const newMetapaths = copyObject(this.props.metapaths);\n\n    for (const metapath of newMetapaths) {\n      if (metapath.id === id)\n        metapath.checked = !metapath.checked;\n    }\n\n    this.props.dispatch(updateMetapaths({ metapaths: newMetapaths }));\n  }\n\n  // solo metapath (turn all others off)\n  soloChecked(id) {\n    const newMetapaths = copyObject(this.props.metapaths);\n    const allOthersUnchecked = this.allOthersUnchecked(id);\n\n    for (const metapath of newMetapaths) {\n      if (allOthersUnchecked || id === metapath.id)\n        metapath.checked = true;\n      else\n        metapath.checked = false;\n    }\n\n    this.props.dispatch(updateMetapaths({ metapaths: newMetapaths }));\n  }\n\n  // change which column table is sorted by\n  changeSort(sortColumn) {\n    const newState = {};\n    newState.sortColumn = sortColumn;\n\n    if (sortColumn === this.state.sortColumn)\n      newState.sortUp = !this.state.sortUp;\n    else\n      newState.sortUp = true;\n\n    this.setState(newState);\n  }\n\n  // compare numbers (for sorting)\n  compareNumbers(a, b, key) {\n    // parse as numbers\n    const comparison = Number(a[key]) - Number(b[key]);\n    if (!Number.isNaN(comparison))\n      return comparison;\n\n    // otherwise parse as strings and compare alphabetically\n    if (a[key] < b[key])\n      return -1;\n    else if (a[key] > b[key])\n      return 1;\n    else\n      return 0;\n  }\n\n  // compare metapaths (for sorting)\n  compareMetapaths(a, b, key) {\n    a = a[key];\n    b = b[key];\n    // first by length\n    if (a.length < b.length)\n      return -1;\n    else if (a.length > b.length)\n      return 1;\n    else {\n      // then alphabetically\n      if (a < b)\n        return -1;\n      else if (a > b)\n        return 1;\n      else\n        return 0;\n    }\n  }\n\n  // download table data as .csv file\n  downloadCsv() {\n    if (\n      !this.props.metapaths.length ||\n      !this.props.sourceNode.name ||\n      !this.props.targetNode.name\n    )\n      return;\n\n    const tableData = makeMetapathsTable(this.props.metapaths);\n    const filename = [\n      'metapaths',\n      makeFilenameFriendly(this.props.sourceNode.name),\n      makeFilenameFriendly(this.props.targetNode.name)\n    ].join('_');\n    downloadCsv(tableData, filename);\n  }\n\n  // display component\n  render() {\n    // sort metapaths by specified column\n    const sortedMetapaths = this.props.metapaths;\n    const sortColumn = this.state.sortColumn;\n\n    // sort by appropriate field\n    if (sortColumn === 'metapath_metaedges')\n      sortedMetapaths.sort((a, b) => this.compareMetapaths(a, b, sortColumn));\n    else\n      sortedMetapaths.sort((a, b) => this.compareNumbers(a, b, sortColumn));\n\n    // reverse sort direction\n    if (this.state.sortUp)\n      sortedMetapaths.reverse();\n\n    // count metapaths\n    const metapathCount = sortedMetapaths.length;\n    let metapathSelectedCount = 0;\n    for (const metapath of sortedMetapaths) {\n      if (metapath.checked)\n        metapathSelectedCount++;\n    }\n\n    return (\n      <TableContext.Provider\n        value={{\n          sortedMetapaths: sortedMetapaths,\n          showMore: this.state.showMore,\n          allChecked: this.state.allChecked,\n          toggleAllChecked: this.toggleAllChecked,\n          toggleChecked: this.toggleChecked,\n          soloChecked: this.soloChecked,\n          sortColumn: this.state.sortColumn,\n          sortUp: this.state.sortUp,\n          changeSort: this.changeSort\n        }}\n      >\n        <div className='table_attic'>\n          <TextButton\n            text='.csv'\n            icon={faDownload}\n            className='link_button small'\n            onClick={this.downloadCsv}\n            tooltipText='Download table as .csv file'\n          />\n          <TextButton\n            text={this.state.showMore ? 'show less ' : 'show more '}\n            icon={this.state.showMore ? faAngleLeft : faAngleRight}\n            className='link_button small'\n            onClick={this.toggleShowMore}\n            tooltipText='Expand table and show more columns'\n          />\n          <div className='small light right'>\n            {metapathCount} results, {metapathSelectedCount} selected\n          </div>\n        </div>\n        <div className='table_container' data-expanded={this.state.showMore}>\n          <table className='metapath_results_table'>\n            <TableHead />\n            <TableBody />\n          </table>\n        </div>\n      </TableContext.Provider>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst TableContext = React.createContext({});\n// connect component to global state\nTableFull = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metapaths: state.metapaths\n}))(TableFull);\n\n// table header component\n// contains column labels and sort buttons\nclass TableHead extends Component {\n  // display component\n  render() {\n    // extra 'super-grouping' row at top of table\n    const extraRow = (\n      <tr>\n        <td className='col_xs' />\n        <td className='col_l' />\n        <td className='col_s' />\n        <td className='col_m' />\n        <td className='col_m' />\n        <td className='col_s' />\n        <td className='col_xxl center' colSpan='6'>\n          <div className='divider'>Null DWPC distribution information</div>\n        </td>\n        <td className='col_l' />\n      </tr>\n    );\n\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.nodes\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n    // primary columns\n    const cols = (\n      <>\n        <td className='col_xs'>\n          <Checkbox\n            checked={this.context.allChecked}\n            onClick={() => this.context.toggleAllChecked()}\n            onCtrlClick={() => this.context.toggleAllChecked()}\n            tooltipText='Show all paths'\n          />\n        </td>\n        <TableHeadCell\n          className='col_l'\n          buttonClass='left'\n          fieldName='metapath_metaedges'\n          tooltipText={tooltipText['metapath']}\n          text='metapath'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='path_count'\n          tooltipText={tooltipText['path_count']}\n          text='path count'\n        />\n        <TableHeadCell\n          className='col_m'\n          fieldName='adjusted_p_value'\n          tooltipText={tooltipText['adjusted_p_value']}\n          text={\n            <span>\n              adjusted\n              <br />\n              <i>p</i>-value\n            </span>\n          }\n        />\n      </>\n    );\n\n    // extra columns\n    const extraCols = (\n      <>\n        <TableHeadCell\n          className='col_m'\n          fieldName='p_value'\n          tooltipText={tooltipText['p_value']}\n          text={\n            <>\n              <i>p</i>-value\n            </>\n          }\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='dwpc'\n          tooltipText={tooltipText['dwpc']}\n          text='DWPC'\n        />\n        <TableHeadCell\n          fieldName='dgp_source_degree'\n          tooltipText={tooltipText['dgp_source_degree']}\n          text='source degree'\n        />\n        <TableHeadCell\n          fieldName='dgp_target_degree'\n          tooltipText={tooltipText['dgp_target_degree']}\n          text='target degree'\n        />\n        <TableHeadCell\n          fieldName='dgp_n_dwpcs'\n          tooltipText={tooltipText['dgp_n_dwpcs']}\n          text=\"# DWPC's\"\n        />\n        <TableHeadCell\n          fieldName='dgp_n_nonzero_dwpcs'\n          tooltipText={tooltipText['dgp_n_nonzero_dwpcs']}\n          text=\"# non-0 DWPC's\"\n        />\n        <TableHeadCell\n          fieldName='dgp_nonzero_mean'\n          tooltipText={tooltipText['dgp_nonzero_mean']}\n          text='non-0 mean'\n        />\n        <TableHeadCell\n          fieldName='dgp_nonzero_sd'\n          tooltipText={tooltipText['dgp_nonzero_sd']}\n          text={<>non-0 &sigma;</>}\n        />\n        <TableHeadCell\n          fieldName='cypher_query'\n          tooltipText={tooltipText['cypher_query']}\n          text={\n            <a\n              href='https://neo4j.het.io/browser/'\n              target='_blank'\n              rel='noopener noreferrer'>\n              neo4j query\n            </a>\n          }\n        />\n      </>\n    );\n\n    return (\n      <thead className='small light'>\n        {this.context.showMore && extraRow}\n        <tr>\n          {cols}\n          {this.context.showMore && extraCols}\n        </tr>\n      </thead>\n    );\n  }\n}\n// connect component to context component\nTableHead.contextType = TableContext;\n// connect component to global state\nTableHead = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableHead);\n\n// table header cell component\nclass TableHeadCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className}>\n        <SortButton\n          text={this.props.text}\n          tooltipText={this.props.tooltipText}\n          fieldName={this.props.fieldName}\n          className={this.props.buttonClass}\n        />\n      </td>\n    );\n  }\n}\n\n// column sort button component\nclass SortButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText={this.props.tooltipText}\n        className={'sort_button ' + (this.props.className || '')}\n        onClick={() => this.context.changeSort(this.props.fieldName)}\n      >\n        {this.props.text}\n        <FontAwesomeIcon\n          icon={\n            this.props.fieldName === this.context.sortColumn\n              ? this.context.sortUp\n                ? faSortUp\n                : faSortDown\n              : faSort\n          }\n        />\n      </Button>\n    );\n  }\n}\n// connect component to context component\nSortButton.contextType = TableContext;\n\n// table body component\n// contains actual data\nclass TableBody extends Component {\n  // display component\n  render() {\n    return (\n      <tbody>\n        {this.context.sortedMetapaths.map((metapath, index) => (\n          <TableBodyRow\n            key={index}\n            metapath={metapath}\n            checked={metapath.checked}\n            showMore={this.props.showMore}\n          />\n        ))}\n      </tbody>\n    );\n  }\n}\n// connect component to context component\nTableBody.contextType = TableContext;\n\n// table body row component\n// contains column data for one metapath\nclass TableBodyRow extends Component {\n  // display component\n  render() {\n    const metapath = this.props.metapath;\n\n    // primary columns\n    const cols = (\n      <>\n        <td>\n          <Checkbox\n            checked={this.props.checked}\n            onClick={() => this.context.toggleChecked(this.props.metapath.id)}\n            onCtrlClick={() => this.context.soloChecked(this.props.metapath.id)}\n            tooltipText={\n              'Show these ' +\n              (this.props.metapath.path_count || '') +\n              ' paths in the paths table'\n            }\n          />\n        </td>\n        <TableBodyCell\n          fieldClass='left'\n          value={metapathChips(metapath.metapath_metaedges)}\n          fullValue={metapath.metapath_name}\n        />\n        <TableBodyCell value={metapath.path_count} />\n        <TableBodyCell\n          style={{ backgroundColor: toGradient(metapath.adjusted_p_value) }}\n          value={toExponential(metapath.adjusted_p_value)}\n          fullValue={metapath.adjusted_p_value}\n        />\n      </>\n    );\n\n    // extra columns\n    const extraCols = (\n      <>\n        <TableBodyCell\n          style={{ backgroundColor: toGradient(metapath.p_value) }}\n          value={toExponential(metapath.p_value)}\n          fullValue={metapath.p_value}\n        />\n        <TableBodyCell\n          value={toFixed(metapath.dwpc)}\n          fullValue={metapath.dwpc}\n        />\n        <TableBodyCell value={metapath.dgp_source_degree} />\n        <TableBodyCell value={metapath.dgp_target_degree} />\n        <TableBodyCell value={metapath.dgp_n_dwpcs} />\n        <TableBodyCell value={metapath.dgp_n_nonzero_dwpcs} />\n        <TableBodyCell\n          value={toFixed(metapath.dgp_nonzero_mean)}\n          fullValue={metapath.dgp_nonzero_mean}\n        />\n        <TableBodyCell\n          value={toFixed(metapath.dgp_nonzero_sd)}\n          fullValue={metapath.dgp_nonzero_sd}\n        />\n        <TableBodyCell\n          value='...'\n          fullValue={\n            <textarea rows='4' cols='50'>\n              {metapath.cypher_query}\n            </textarea>\n          }\n        />\n      </>\n    );\n\n    return (\n      <tr>\n        {cols}\n        {this.context.showMore && extraCols}\n      </tr>\n    );\n  }\n}\n// connect component to context component\nTableBodyRow.contextType = TableContext;\n\n// table body cell component\nclass TableBodyCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className} style={this.props.style}>\n        <DynamicField\n          value={this.props.value}\n          fullValue={this.props.fullValue}\n          className={this.props.fieldClass}\n        />\n      </td>\n    );\n  }\n}\n\n// table with no results component\nclass TableEmpty extends Component {\n  // display component\n  render() {\n    return (\n      <table className='metapath_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>no results to show</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// make table array out of metapaths results object\nfunction makeMetapathsTable(metapaths) {\n  let headers = [];\n  for (const field of Object.keys(metapaths[0])) {\n    if (\n      typeof metapaths[0][field] === 'number' ||\n      typeof metapaths[0][field] === 'string'\n    )\n      headers.push(field);\n  }\n\n  // sort headers in custom order\n  const order = [\n    'id',\n    'metapath_name',\n    'metapath_abbreviation',\n    'path_count',\n    'adjusted_p_value',\n    'p_value',\n    'dwpc',\n    'dgp_source_degree',\n    'dgp_target_degree',\n    'dgp_n_dwpcs',\n    'dgp_n_nonzero_dwpcs',\n    'dgp_nonzero_mean',\n    'dgp_nonzero_sd'\n  ];\n  headers = sortCustom(headers, order);\n\n  const table = [];\n  table.push(headers);\n  for (const result of metapaths) {\n    const row = [];\n    for (const header of headers)\n      row.push(result[header]);\n    table.push(row);\n  }\n\n  return table;\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { Button } from './buttons.js';\nimport { DynamicField } from './dynamic-field.js';\nimport { TextButton } from './buttons.js';\nimport { EyeCheckbox } from './buttons.js';\nimport { HighlighterCheckbox } from './buttons.js';\nimport { downloadCsv } from './util.js';\nimport { makeFilenameFriendly } from './util.js';\nimport { pathChips } from './chips.js';\nimport { updatePathQueries } from './actions.js';\nimport { toFixed } from './util.js';\nimport { sortCustom } from './util.js';\nimport { compareArrays } from './util.js';\nimport { copyObject } from './util.js';\nimport './path-results.css';\n\n// path results section component\nexport class PathResults extends Component {\n  // display component\n  render() {\n    return (\n      <section>\n        <CollapsibleSection\n          label='Paths'\n          tooltipText='Paths of the selected metapaths'\n        >\n          {this.props.pathQueries.length > 0 ? <TableFull /> : <TableEmpty />}\n        </CollapsibleSection>\n      </section>\n    );\n  }\n}\n// connect component to global state\nPathResults = connect((state) => ({\n  pathQueries: state.pathQueries\n}))(PathResults);\n\n// table with results component\nclass TableFull extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.showMore = false;\n    this.state.allChecked = false;\n    this.state.allHighlighted = false;\n    this.state.sortColumn = 'score';\n    this.state.sortUp = true;\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n    this.toggleAllChecked = this.toggleAllChecked.bind(this);\n    this.allChecked = this.allChecked.bind(this);\n    this.checkAll = this.checkAll.bind(this);\n    this.uncheckAll = this.uncheckAll.bind(this);\n    this.allOthersUnchecked = this.allOthersUnchecked.bind(this);\n    this.toggleChecked = this.toggleChecked.bind(this);\n    this.soloChecked = this.soloChecked.bind(this);\n    this.toggleAllHighlighted = this.toggleAllHighlighted.bind(this);\n    this.allHighlighted = this.allHighlighted.bind(this);\n    this.highlightAll = this.highlightAll.bind(this);\n    this.unhighlightAll = this.unhighlightAll.bind(this);\n    this.allOthersUnhighlighted = this.allOthersUnhighlighted.bind(this);\n    this.toggleHighlighted = this.toggleHighlighted.bind(this);\n    this.soloHighlighted = this.soloHighlighted.bind(this);\n    this.changeSort = this.changeSort.bind(this);\n    this.downloadCsv = this.downloadCsv.bind(this);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (this.props.pathQueries !== prevProps.pathQueries) {\n      this.updateAllChecked();\n      this.updateAllHighlighted();\n    }\n  }\n\n  // toggle show more/less\n  toggleShowMore(event) {\n    if (event)\n      event.preventDefault();\n\n    this.setState({ showMore: !this.state.showMore });\n  }\n\n  // checks if all rows checked and updates state\n  updateAllChecked() {\n    if (this.allChecked())\n      this.setState({ allChecked: true });\n    else\n      this.setState({ allChecked: false });\n  }\n\n  // toggle check/uncheck all\n  toggleAllChecked() {\n    if (this.allChecked())\n      this.uncheckAll();\n    else\n      this.checkAll();\n  }\n\n  // checks whether all paths are checked\n  allChecked() {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!path.checked)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // makes all paths checked\n  checkAll() {\n    const newPathQueries = copyObject(this.props.pathQueries);\n\n    for (const pathQuery of newPathQueries) {\n      for (const path of pathQuery.paths)\n        path.checked = true;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: newPathQueries }));\n  }\n\n  // makes all paths unchecked\n  uncheckAll() {\n    const newPathQueries = copyObject(this.props.pathQueries);\n\n    for (const pathQuery of newPathQueries) {\n      for (const path of pathQuery.paths)\n        path.checked = false;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: newPathQueries }));\n  }\n\n  // checks whether all paths besides the specified are unchecked\n  allOthersUnchecked(thePath) {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!this.comparePaths(path, thePath) && path.checked)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // toggles the specified paths on/off\n  toggleChecked(thePath) {\n    const newPathQueries = copyObject(this.props.pathQueries);\n\n    for (const pathQuery of newPathQueries) {\n      for (const path of pathQuery.paths) {\n        if (this.comparePaths(path, thePath))\n          path.checked = !path.checked;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: newPathQueries }));\n  }\n\n  // solo path (turn all others off)\n  soloChecked(thePath) {\n    const newPathQueries = copyObject(this.props.pathQueries);\n    const allOthersUnchecked = this.allOthersUnchecked(thePath);\n\n    for (const pathQuery of newPathQueries) {\n      for (const path of pathQuery.paths) {\n        if (allOthersUnchecked || this.comparePaths(path, thePath))\n          path.checked = true;\n        else\n          path.checked = false;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: newPathQueries }));\n  }\n\n  // checks if all rows highlighted and updates state\n  updateAllHighlighted() {\n    if (this.allHighlighted())\n      this.setState({ allHighlighted: true });\n    else\n      this.setState({ allHighlighted: false });\n  }\n\n  // toggle highlight/unhighlight all\n  toggleAllHighlighted() {\n    if (this.allHighlighted())\n      this.unhighlightAll();\n    else\n      this.highlightAll();\n  }\n\n  // checks whether all paths are highlighted\n  allHighlighted() {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!path.highlighted)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // makes all paths highlighted\n  highlightAll() {\n    const newPathQueries = copyObject(this.props.pathQueries);\n\n    for (const pathQuery of newPathQueries) {\n      for (const path of pathQuery.paths)\n        path.highlighted = true;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: newPathQueries }));\n  }\n\n  // makes all paths unhighlighted\n  unhighlightAll() {\n    const newPathQueries = copyObject(this.props.pathQueries);\n\n    for (const pathQuery of newPathQueries) {\n      for (const path of pathQuery.paths)\n        path.highlighted = false;\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: newPathQueries }));\n  }\n\n  // checks whether all paths besides the specified are unhighlighted\n  allOthersUnhighlighted(thePath) {\n    for (const pathQuery of this.props.pathQueries) {\n      for (const path of pathQuery.paths) {\n        if (!this.comparePaths(path, thePath) && path.highlighted)\n          return false;\n      }\n    }\n\n    return true;\n  }\n\n  // toggles the specified paths on/off\n  toggleHighlighted(thePath) {\n    const newPathQueries = copyObject(this.props.pathQueries);\n\n    for (const pathQuery of newPathQueries) {\n      for (const path of pathQuery.paths) {\n        if (this.comparePaths(path, thePath))\n          path.highlighted = !path.highlighted;\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: newPathQueries }));\n  }\n\n  // solo path (turn all others off)\n  soloHighlighted(thePath) {\n    const newPathQueries = copyObject(this.props.pathQueries);\n    const allOthersUnhighlighted = this.allOthersUnhighlighted(thePath);\n\n    for (const pathQuery of newPathQueries) {\n      for (const path of pathQuery.paths) {\n        if (allOthersUnhighlighted)\n          path.highlighted = true;\n        else {\n          if (this.comparePaths(path, thePath))\n            path.highlighted = true;\n          else\n            path.highlighted = false;\n        }\n      }\n    }\n\n    this.props.dispatch(updatePathQueries({ pathQueries: newPathQueries }));\n  }\n\n  // checks if paths are equal\n  comparePaths(path1, path2) {\n    return (\n      compareArrays(path1.node_ids, path2.node_ids) &&\n      compareArrays(path1.rel_ids, path2.rel_ids)\n    );\n  }\n\n  // change which column table is sorted by\n  changeSort(sortColumn) {\n    const newState = {};\n    newState.sortColumn = sortColumn;\n\n    if (sortColumn === this.state.sortColumn)\n      newState.sortUp = !this.state.sortUp;\n    else\n      newState.sortUp = true;\n\n    this.setState(newState);\n  }\n\n  // compare numbers (for sorting)\n  compareNumbers(a, b, key) {\n    // parse as numbers\n    const comparison = Number(a[key]) - Number(b[key]);\n    if (!Number.isNaN(comparison))\n      return comparison;\n\n    // otherwise parse as strings and compare alphabetically\n    if (a[key] < b[key])\n      return -1;\n    else if (a[key] > b[key])\n      return 1;\n    else\n      return 0;\n  }\n\n  // download table data as .csv file\n  downloadCsv() {\n    if (\n      !this.props.pathQueries.length ||\n      !this.props.sourceNode.name ||\n      !this.props.targetNode.name\n    )\n      return;\n\n    const tableData = makePathsTable(this.props.pathQueries);\n    const filename = [\n      'paths',\n      makeFilenameFriendly(this.props.sourceNode.name),\n      makeFilenameFriendly(this.props.targetNode.name)\n    ].join('_');\n    downloadCsv(tableData, filename);\n  }\n\n  // display component\n  render() {\n    let nodes = {};\n    for (const pathQuery of this.props.pathQueries)\n      nodes = { ...nodes, ...pathQuery.nodes };\n\n    let edges = {};\n    for (const pathQuery of this.props.pathQueries)\n      edges = { ...edges, ...pathQuery.relationships };\n\n    let sortedPaths = [];\n    for (const pathQuery of this.props.pathQueries)\n      sortedPaths = [...sortedPaths, ...pathQuery.paths];\n\n    // construct full path description/name\n    sortedPaths = sortedPaths.map((path) => ({\n      ...path,\n      chipDescription: pathChips(\n        assemblePath(path, nodes, edges),\n        this.state.showMore\n      ),\n      textDescription: textDescription(assemblePath(path, nodes, edges))\n    }));\n\n    // sort paths by specified column\n    const sortColumn = this.state.sortColumn;\n\n    // sort by appropriate field\n    sortedPaths.sort((a, b) => this.compareNumbers(a, b, sortColumn));\n\n    // reverse sort direction\n    if (this.state.sortUp)\n      sortedPaths.reverse();\n\n    // count paths\n    const pathCount = sortedPaths.length;\n    let pathSelectedCount = 0;\n    for (const path of sortedPaths) {\n      if (path.checked)\n        pathSelectedCount++;\n    }\n\n    let pathHighlightedCount = 0;\n    for (const path of sortedPaths) {\n      if (path.highlighted)\n        pathHighlightedCount++;\n    }\n\n    return (\n      <TableContext.Provider\n        value={{\n          sortedPaths: sortedPaths,\n          showMore: this.state.showMore,\n          allChecked: this.state.allChecked,\n          toggleAllChecked: this.toggleAllChecked,\n          toggleChecked: this.toggleChecked,\n          soloChecked: this.soloChecked,\n          allHighlighted: this.state.allHighlighted,\n          toggleAllHighlighted: this.toggleAllHighlighted,\n          toggleHighlighted: this.toggleHighlighted,\n          soloHighlighted: this.soloHighlighted,\n          sortColumn: this.state.sortColumn,\n          sortUp: this.state.sortUp,\n          changeSort: this.changeSort\n        }}\n      >\n        <div className='table_attic'>\n          <TextButton\n            text='.csv'\n            icon={faDownload}\n            className='link_button small'\n            onClick={this.downloadCsv}\n            tooltipText='Download table as .csv file'\n          />\n          <TextButton\n            text={this.state.showMore ? 'show less ' : 'show more '}\n            icon={this.state.showMore ? faAngleLeft : faAngleRight}\n            className='link_button small'\n            onClick={this.toggleShowMore}\n            tooltipText='Expand table'\n          />\n          <div className='small light right'>\n            {pathCount} results, {pathSelectedCount} selected,{' '}\n            {pathHighlightedCount} highlighted\n          </div>\n        </div>\n        <div className='table_container' data-expanded={this.state.showMore}>\n          <table\n            className='path_results_table'\n            data-expanded={this.state.showMore}\n          >\n            <TableHead />\n            <TableBody />\n          </table>\n        </div>\n      </TableContext.Provider>\n    );\n  }\n}\n// allow other components to access component's variables and methods\nconst TableContext = React.createContext({});\n// connect component to global state\nTableFull = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metagraph: state.metagraph,\n  pathQueries: state.pathQueries\n}))(TableFull);\n\n// table header component\n// contains column labels and sort buttons\nclass TableHead extends Component {\n  // display component\n  render() {\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.nodes\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n\n    // primary columns\n    const cols = (\n      <>\n        <td className='col_xs'>\n          <EyeCheckbox\n            checked={this.context.allChecked}\n            onClick={() => this.context.toggleAllChecked()}\n            onCtrlClick={() => this.context.toggleAllChecked()}\n            tooltipText='Show all paths'\n          />\n        </td>\n        <td className='col_xs'>\n          <HighlighterCheckbox\n            checked={this.context.allHighlighted}\n            onClick={() => this.context.toggleAllHighlighted()}\n            onCtrlClick={() => this.context.toggleAllHighlighted()}\n            tooltipText='Highlight all paths'\n          />\n        </td>\n        <TableHeadCell\n          className='col_s left'\n          buttonClass='left'\n          fieldName='metapath'\n          tooltipText={tooltipText['metapath']}\n          text='metapath'\n        />\n        <TableHeadCell\n          className='col_xl left'\n          buttonClass='left'\n          fieldName='textDescription'\n          tooltipText={tooltipText['path']}\n          text='path'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='score'\n          tooltipText={tooltipText['score']}\n          text='path score'\n        />\n        <TableHeadCell\n          className='col_s'\n          fieldName='percent_of_DWPC'\n          tooltipText={tooltipText['percent_of_DWPC']}\n          text='% of DWPC'\n        />\n      </>\n    );\n\n    return (\n      <thead className='small light'>\n        <tr>{cols}</tr>\n      </thead>\n    );\n  }\n}\n// connect component to context component\nTableHead.contextType = TableContext;\n// connect component to global state\nTableHead = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(TableHead);\n\n// table header cell component\nclass TableHeadCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className}>\n        <SortButton\n          text={this.props.text}\n          tooltipText={this.props.tooltipText}\n          fieldName={this.props.fieldName}\n          className={this.props.buttonClass}\n        />\n      </td>\n    );\n  }\n}\n\n// column sort button component\nclass SortButton extends Component {\n  // display component\n  render() {\n    return (\n      <Button\n        tooltipText={this.props.tooltipText}\n        className={'sort_button ' + (this.props.className || '')}\n        onClick={() => this.context.changeSort(this.props.fieldName)}\n      >\n        {this.props.text}\n        <FontAwesomeIcon\n          icon={\n            this.props.fieldName === this.context.sortColumn\n              ? this.context.sortUp\n                ? faSortUp\n                : faSortDown\n              : faSort\n          }\n        />\n      </Button>\n    );\n  }\n}\n// connect component to context component\nSortButton.contextType = TableContext;\n\n// table body component\n// contains actual data\nclass TableBody extends Component {\n  // display component\n  render() {\n    return (\n      <tbody>\n        {this.context.sortedPaths.map((path, index) => (\n          <TableBodyRow\n            key={index}\n            path={path}\n            checked={path.checked}\n            highlighted={path.highlighted}\n          />\n        ))}\n      </tbody>\n    );\n  }\n}\n// connect component to context component\nTableBody.contextType = TableContext;\n// connect component to global state\nTableBody = connect((state) => ({\n  pathQueries: state.pathQueries\n}))(TableBody);\n\n// table body row component\n// contains column data for one path\nclass TableBodyRow extends Component {\n  // display component\n  render() {\n    const path = this.props.path;\n\n    // primary columns\n    const cols = (\n      <>\n        <td>\n          <EyeCheckbox\n            checked={this.props.checked}\n            onClick={() => this.context.toggleChecked(this.props.path)}\n            onCtrlClick={() => this.context.soloChecked(this.props.path)}\n            tooltipText='Show this path in the graph display'\n          />\n        </td>\n        <td>\n          <HighlighterCheckbox\n            checked={this.props.highlighted}\n            onClick={() => this.context.toggleHighlighted(this.props.path)}\n            onCtrlClick={() => this.context.soloHighlighted(this.props.path)}\n            tooltipText='Highlight this path in the graph display'\n          />\n        </td>\n        <TableBodyCell\n          className='left small'\n          fieldClass='left'\n          value={path.metapath}\n          fullValue={path.metapath}\n        />\n        <TableBodyCell\n          className='left small'\n          fieldClass='left'\n          value={path.chipDescription}\n          fullValue={path.textDescription}\n        />\n        <TableBodyCell\n          value={path.score ? toFixed(path.score) : '-'}\n          fullValue={path.score || '-'}\n        />\n        <TableBodyCell\n          value={toFixed(path.percent_of_DWPC)}\n          fullValue={path.percent_of_DWPC}\n        />\n      </>\n    );\n\n    return <tr>{cols}</tr>;\n  }\n}\n// connect component to context component\nTableBodyRow.contextType = TableContext;\n\n// table body cell component\nclass TableBodyCell extends Component {\n  // display component\n  render() {\n    return (\n      <td className={this.props.className} style={this.props.style}>\n        <DynamicField\n          value={this.props.value}\n          fullValue={this.props.fullValue}\n          className={this.props.fieldClass}\n        />\n      </td>\n    );\n  }\n}\n\n// table with no results component\nclass TableEmpty extends Component {\n  // display component\n  render() {\n    return (\n      <table className='metapath_results_table'>\n        <tbody>\n          <tr>\n            <td className='center light'>no results to show</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// construct path object with relevant properties for each node/edge entry\nfunction assemblePath(path, nodes, edges) {\n  const pathNodes = [];\n  for (const nodeId of path.node_ids) {\n    const node = nodes[nodeId];\n    if (!node)\n      continue;\n\n    pathNodes.push({\n      element: 'node',\n      type: node.metanode,\n      name: node.properties.name\n    });\n  }\n\n  const pathEdges = [];\n  for (let index = 0; index < path.rel_ids.length; index++) {\n    const edge = edges[path.rel_ids[index]];\n    const prevNode = nodes[path.node_ids[index]];\n    if (!edge || !prevNode)\n      continue;\n\n    let direction = '';\n    if (edge.directed) {\n      if (edge.source_neo4j_id === prevNode.neo4j_id)\n        direction = 'forward';\n      else\n        direction = 'backward';\n    }\n\n    pathEdges.push({\n      element: 'edge',\n      type: edge.kind,\n      direction: direction\n    });\n  }\n\n  const assembledPath = [];\n  for (const node of pathNodes) {\n    assembledPath.push(node);\n    if (pathEdges.length > 0)\n      assembledPath.push(pathEdges.shift());\n  }\n\n  return assembledPath;\n}\n\n// produce text path description from assembled path\nfunction textDescription(path) {\n  return path.map((entry) => {\n    if (entry.element === 'node')\n      return entry.name;\n    if (entry.element === 'edge') {\n      let arrow = '–';\n      if (entry.direction === 'forward')\n        arrow = '→';\n      else if (entry.direction === 'backward')\n        arrow = '←';\n      return ['', arrow, entry.type, arrow, ''].join(' ');\n    }\n    return '';\n  });\n}\n\n// make table array out of path queries results object\nfunction makePathsTable(pathQueries) {\n  let nodes = {};\n  for (const pathQuery of pathQueries)\n    nodes = { ...nodes, ...pathQuery.nodes };\n\n  let edges = {};\n  for (const pathQuery of pathQueries)\n    edges = { ...edges, ...pathQuery.relationships };\n\n  let paths = [];\n  for (const pathQuery of pathQueries)\n    paths = [...paths, ...pathQuery.paths];\n\n  for (const path of paths) {\n    path.description = textDescription(assemblePath(path, nodes, edges)).join(\n      ''\n    );\n  }\n\n  let headers = [];\n  for (const field of Object.keys(paths[0])) {\n    if (\n      typeof paths[0][field] === 'number' ||\n      typeof paths[0][field] === 'string'\n    )\n      headers.push(field);\n  }\n\n  // sort headers in custom order\n  const order = [\n    'description',\n    'metapath',\n    'score',\n    'percent_of_DWPC'\n  ];\n  headers = sortCustom(headers, order);\n\n  const table = [];\n  table.push(headers);\n  for (const result of paths) {\n    const row = [];\n    for (const header of headers)\n      row.push(result[header]);\n    table.push(row);\n  }\n\n  return table;\n}\n","import React from 'react';\nimport { Component } from 'react';\n\nimport { Tooltip } from './tooltip.js';\nimport './number-box.css';\n\n// number input box component\nexport class NumberBox extends Component {\n  // intialize component\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.value = this.props.value;\n\n    this.onChange = this.onChange.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== prevProps.value)\n      this.setState({ value: this.props.value });\n  }\n\n  // when user changes field\n  onChange(event) {\n    this.setState({ value: event.target.value });\n    if (event.nativeEvent.data === undefined)\n      this.onArrows(event.target.value);\n    else\n      this.onType(event.target.value);\n  }\n\n  // when user presses key in box\n  onKeyPress(event) {\n    if (event.key.toLowerCase() === 'enter')\n      event.target.blur();\n  }\n\n  // when user un-focuses field\n  onBlur(event) {\n    this.onSubmit(event.target.value);\n  }\n\n  // when box changed via arrow buttons or arrow keys\n  onArrows(value) {\n    if (this.props.onArrows)\n      this.props.onArrows(value);\n  }\n\n  // when box changed via typing or copy/paste\n  onType(value) {\n    if (this.props.onType)\n      this.props.onType(value);\n  }\n\n  // when box change submitted\n  onSubmit(value) {\n    if (this.props.onSubmit)\n      this.props.onSubmit(value);\n  }\n\n  // display component\n  render() {\n    return (\n      <Tooltip text={this.props.tooltipText}>\n        <input\n          type='number'\n          className='number_box'\n          onChange={this.onChange}\n          onKeyPress={this.onKeyPress}\n          onBlur={this.onBlur}\n          min={this.props.min}\n          step={this.props.step}\n          max={this.props.max}\n          value={this.state.value}\n        />\n      </Tooltip>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport { faPowerOff } from '@fortawesome/free-solid-svg-icons';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faMapMarker } from '@fortawesome/free-solid-svg-icons';\nimport { faExpand } from '@fortawesome/free-solid-svg-icons';\nimport { faExpandArrowsAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faCompressArrowsAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\n\nimport { CollapsibleSection } from './collapsible-section.js';\nimport { NumberBox } from './number-box.js';\nimport { TextButton } from './buttons.js';\nimport { downloadSvg } from './util.js';\nimport { transferObjectProps } from './util.js';\nimport { Tooltip } from './tooltip.js';\nimport { sortCustom } from './util.js';\nimport { cutString } from './util.js';\nimport './path-graph.css';\n\n// graph settings\nconst minWidth = 240;\nconst minHeight = 240;\nconst maxWidth = 3840;\nconst maxHeight = 2160;\nconst minZoom = 0.25;\nconst maxZoom = 4;\nconst nodeRadius = 25;\nconst nodeDistance = 100;\nconst nodeCharLimit = 25;\nconst nodeFontSize = 8;\nconst nodeRepulsion = 200;\nconst edgeFontSize = 8;\nconst edgeThickness = 2;\nconst edgeArrowSize = 10;\nconst edgeSpreadDistance = 20;\nconst edgeSpreadAngle = (45 / 360) * 2 * Math.PI;\nconst inkColor = '#424242';\nconst backgroundColor = '#fafafa';\nconst highlightColor = '#ffcc00';\n\n// path graph section component\nexport class PathGraph extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.width = maxWidth;\n    this.state.height = maxHeight;\n    this.state.nodeCount = 0;\n    this.state.edgeCount = 0;\n    this.state.selectedElement = null;\n    this.state.hoveredElement = null;\n\n    this.graph = React.createRef();\n\n    this.expandContainer = this.expandContainer.bind(this);\n    this.collapseContainer = this.collapseContainer.bind(this);\n    this.updateSectionWidth = this.updateSectionWidth.bind(this);\n    this.setWidth = this.setWidth.bind(this);\n    this.setHeight = this.setHeight.bind(this);\n    this.fitView = this.fitView.bind(this);\n    this.setGraphCounts = this.setGraphCounts.bind(this);\n    this.setSelectedElement = this.setSelectedElement.bind(this);\n    this.setHoveredElement = this.setHoveredElement.bind(this);\n  }\n\n  // when component mounts\n  componentDidMount() {\n    this.updateSectionWidth();\n    this.collapseContainer(true);\n    window.addEventListener('resize', this.updateSectionWidth);\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.width !== prevState.width) {\n      let width = this.state.width;\n      if (Math.round(width) !== width)\n        width = Math.round(width);\n      if (width > maxWidth)\n        width = maxWidth;\n      if (width < minWidth)\n        width = minWidth;\n      this.setState({ width: width });\n    }\n    if (this.state.height !== prevState.height) {\n      let height = this.state.height;\n      if (Math.round(height) !== height)\n        height = Math.round(height);\n      if (height > maxHeight)\n        height = maxHeight;\n      if (height < minHeight)\n        height = minHeight;\n      this.setState({ height: height });\n    }\n  }\n\n  // get current width of <section> element\n  updateSectionWidth() {\n    this.setState({ sectionWidth: ReactDOM.findDOMNode(this).clientWidth });\n  }\n\n  // expand graph container to width of window\n  expandContainer(proportionalHeight) {\n    const newState = {};\n    newState.width = document.body.clientWidth - 20 - 20;\n    if (proportionalHeight)\n      newState.height = (newState.width * 3) / 4;\n    this.setState(newState, this.fitView);\n  }\n\n  // collapse graph container to width of <section> element\n  collapseContainer(proportionalHeight) {\n    const newState = {};\n    newState.width = ReactDOM.findDOMNode(this).clientWidth;\n    if (proportionalHeight)\n      newState.height = (newState.width * 3) / 4;\n    this.setState(newState, this.fitView);\n  }\n\n  // set width of graph container\n  setWidth(value) {\n    this.setState({ width: value });\n  }\n\n  // set height of graph container\n  setHeight(value) {\n    this.setState({ height: value });\n  }\n\n  // fit view to contents of graph\n  fitView() {\n    if (this.graph.current)\n      this.graph.current.fitView();\n  }\n\n  // download graph as svg\n  downloadSvg() {\n    const svg = document.getElementById('graph');\n    downloadSvg(svg);\n  }\n\n  // set counts of nodes, edges, etc\n  setGraphCounts(nodeCount, edgeCount) {\n    this.setState({\n      nodeCount: nodeCount,\n      edgeCount: edgeCount\n    });\n  }\n\n  // sets the selected node/edge\n  setSelectedElement(element) {\n    this.setState({ selectedElement: element });\n  }\n\n  // sets the hovered node/edge\n  setHoveredElement(element) {\n    this.setState({ hoveredElement: element });\n  }\n\n  // display component\n  render() {\n    const element = this.state.hoveredElement || this.state.selectedElement;\n    let info = '';\n    if (element) {\n      if (element.elementType === 'node') {\n        info = (\n          <SelectedInfo\n            node={element}\n            primaryFields={['metanode', 'neo4j_id']}\n            order={[\n              'name',\n              'metanode',\n              'source',\n              'url',\n              'description',\n              'identifier',\n              'neo4j_id'\n            ]}\n          />\n        );\n      }\n      if (element.elementType === 'edge') {\n        info = (\n          <SelectedInfo\n            edge={element}\n            primaryFields={['kind', 'directed', 'neo4j_id']}\n            order={['kind', 'neo4j_id', 'source']}\n          />\n        );\n      }\n    }\n    return (\n      <section>\n        <CollapsibleSection\n          label='Path Graph'\n          tooltipText='Graph of path results'\n        >\n          <div className='table_attic'>\n            <TextButton\n              text='reset'\n              icon={faPowerOff}\n              onClick={() => {\n                if (this.graph.current)\n                  this.graph.current.restartGraph();\n              }}\n              tooltipText='Completely restart graph'\n            />\n            <TextButton\n              text='unpin all'\n              icon={faMapMarkerAlt}\n              onClick={() => {\n                if (this.graph.current)\n                  this.graph.current.unpinAll();\n              }}\n              tooltipText='Unpin all nodes'\n            />\n            <TextButton\n              text='pin all'\n              icon={faMapMarker}\n              onClick={() => {\n                if (this.graph.current)\n                  this.graph.current.pinAll();\n              }}\n              tooltipText='Pin all nodes in their current position'\n            />\n            <TextButton\n              text='fit'\n              icon={faExpand}\n              onClick={this.fitView}\n              tooltipText='Fit the view to the contents of the graph'\n            />\n            <TextButton\n              text='.svg'\n              icon={faDownload}\n              onClick={this.downloadSvg}\n              tooltipText='Download the graph as an .svg file'\n            />\n            <NumberBox\n              tooltipText='Width of the container'\n              min={minWidth}\n              step='5'\n              max={maxWidth}\n              value={this.state.width}\n              onArrows={this.setWidth}\n              onSubmit={this.setWidth}\n            />\n            &times;\n            <NumberBox\n              tooltipText='Height of the container'\n              min={minHeight}\n              step='5'\n              max={maxHeight}\n              value={this.state.height}\n              onArrows={this.setHeight}\n              onSubmit={this.setHeight}\n            />\n            <TextButton\n              className='graph_expand_collapse_button'\n              text=''\n              icon={faExpandArrowsAlt}\n              onClick={this.expandContainer}\n              tooltipText='Fit the graph to the window'\n            />\n            <TextButton\n              className='graph_expand_collapse_button'\n              text=''\n              icon={faCompressArrowsAlt}\n              onClick={this.collapseContainer}\n              tooltipText='Fit the graph to the \"Path Graph\" section'\n            />\n            <span className='small light right'>\n              {this.state.nodeCount} nodes, {this.state.edgeCount} edges\n            </span>\n          </div>\n          <Graph\n            ref={this.graph}\n            width={this.state.width}\n            height={this.state.height}\n            sectionWidth={this.state.sectionWidth}\n            setGraphCounts={this.setGraphCounts}\n            setSelectedElement={this.setSelectedElement}\n            setHoveredElement={this.setHoveredElement}\n          />\n          <div id='graph_info_container'>{info}</div>\n        </CollapsibleSection>\n      </section>\n    );\n  }\n}\n\n// path graph component\nexport class Graph extends Component {\n  // initialize component\n  constructor() {\n    super();\n\n    this.state = {};\n    this.state.data = this.assembleGraph(null);\n\n    this.fitView = this.fitView.bind(this);\n    this.resetView = this.resetView.bind(this);\n    this.onSimulationTick = this.onSimulationTick.bind(this);\n    this.onNodeEdgeClick = this.onNodeEdgeClick.bind(this);\n    this.onNodeEdgeHover = this.onNodeEdgeHover.bind(this);\n    this.onNodeEdgeUnhover = this.onNodeEdgeUnhover.bind(this);\n    this.onNodeDragStart = this.onNodeDragStart.bind(this);\n    this.onNodeDragEnd = this.onNodeDragEnd.bind(this);\n    this.onViewClick = this.onViewClick.bind(this);\n  }\n\n  // when component mounts\n  componentDidMount() {\n    this.createGraph();\n    this.setState({ data: this.assembleGraph() });\n  }\n\n  // when component updates\n  componentDidUpdate(prevProps, prevState) {\n    // if path queries have changed\n    if (this.props.pathQueries !== prevProps.pathQueries)\n      // update graph data\n      this.setState({ data: this.assembleGraph() });\n    // if graph data has changed\n    else if (this.state.data !== prevState.data) {\n      // copy simulation vars from old data to new data to persist node\n      // positions/velocities/etc\n      transferObjectProps(\n        prevState.data.nodes,\n        this.state.data.nodes,\n        ['neo4j_id'],\n        ['x', 'y', 'fx', 'fy', 'vx', 'vy']\n      );\n\n      // update graph\n      this.updateGraph();\n\n      // update graph info (node count, edge count, etc)\n      this.props.setGraphCounts(\n        this.state.data.nodes.length,\n        this.state.data.edges.length\n      );\n    }\n  }\n\n  // completely restart graph\n  restartGraph() {\n    this.resetView();\n    this.state.simulation.alpha(1).restart();\n    // set graph data to null then back to data again\n    this.setState({ data: this.assembleGraph(null) }, () =>\n      this.setState({ data: this.assembleGraph() })\n    );\n  }\n\n  // create graph when page first loads\n  createGraph() {\n    const svg = d3.select('#graph');\n\n    // create physics simulation for nodes to detangle and prettify layout\n    const simulation = d3\n      .forceSimulation()\n      .force(\n        'link',\n        d3\n          .forceLink()\n          .distance(nodeDistance)\n          .id((d) => d.neo4j_id)\n      )\n      .force(\n        'collide',\n        d3\n          .forceCollide()\n          .radius(nodeRadius)\n          .strength(1)\n      )\n      .force('charge', d3.forceManyBody().strength(-nodeRepulsion))\n      .force('center', d3.forceCenter(0, 0));\n    simulation.on('tick', this.onSimulationTick);\n\n    // create handler for panning and zooming view\n    const viewZoomHandler = d3\n      .zoom()\n      .scaleExtent([minZoom, maxZoom])\n      .on('zoom', this.onViewZoom);\n    svg.call(viewZoomHandler);\n\n    // handle clicks on background\n    svg.on('click', this.onViewClick);\n\n    // create handler for dragging nodes\n    const nodeDragHandler = d3\n      .drag()\n      .on('drag', this.onNodeDrag)\n      .on('start', this.onNodeDragStart)\n      .on('end', this.onNodeDragEnd);\n\n    // store the above objects to be referenced on graph updates\n    this.setState(\n      {\n        simulation: simulation,\n        viewZoomHandler: viewZoomHandler,\n        nodeDragHandler: nodeDragHandler\n      },\n      this.resetView\n    );\n  }\n\n  // when simulation ticks forward\n  onSimulationTick() {\n    // position all elements in graph\n    d3.selectAll('.graph_edge_line_highlight').each(this.positionEdge);\n    d3.selectAll('.graph_edge_line').each(this.positionEdge);\n    d3.selectAll('.graph_edge_label').each(this.positionEdgeLabel);\n    d3.selectAll('.graph_node_circle_highlight').each(this.positionNode);\n    d3.selectAll('.graph_node_circle').each(this.positionNode);\n    d3.selectAll('.graph_node_label').each(this.positionNode);\n  }\n\n  // position node based on results of simulation\n  // d3 simulation stores positions/velocities/etc directly in data object\n  positionNode(d, i, s) {\n    const node = s[i];\n    d3.select(node).attr('transform', 'translate(' + d.x + ',' + d.y + ')');\n  }\n\n  // position edge line between source/target node\n  positionEdge(d, i, s) {\n    let x1 = d.source.x;\n    let y1 = d.source.y;\n    let x2 = d.target.x;\n    let y2 = d.target.y;\n    let path = '';\n\n    // get angle between source/target in radians\n    const angle = Math.atan2(y2 - y1, x2 - x1);\n\n    // get radius of source/target nodes\n    const sourceRadius = nodeRadius - 0.25;\n    let targetRadius = nodeRadius - 0.25;\n    // increase target node radius to bring tip of arrowhead out of circle\n    if (d.directed)\n      targetRadius += edgeArrowSize / 4;\n\n    if (d.coincidentOffset === 0) {\n      // if no coincident edges, or middle of odd number of coincident edges,\n      // just draw straight line\n\n      // bring start/end of line to edge of circles\n      x1 += Math.cos(angle) * sourceRadius;\n      y1 += Math.sin(angle) * sourceRadius;\n      x2 -= Math.cos(angle) * targetRadius;\n      y2 -= Math.sin(angle) * targetRadius;\n\n      // straight line path\n      path = ['M', x1, y1, 'L', x2, y2].join(' ');\n    } else {\n      // otherwise, if coincident edge, draw a curve\n\n      // spread out contact points with circle over spread angle\n      const angleOffset = edgeSpreadAngle * d.coincidentOffset;\n\n      // bring start/end of curve to edge of circle\n      x1 += Math.cos(angle + angleOffset) * sourceRadius;\n      y1 += Math.sin(angle + angleOffset) * sourceRadius;\n      x2 -= Math.cos(angle - angleOffset) * targetRadius;\n      y2 -= Math.sin(angle - angleOffset) * targetRadius;\n\n      // get straight line distance between start/end of curve\n      const distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n      // get \"sagitta\" distance\n      const sag = Math.min(edgeSpreadDistance, distance) * d.coincidentOffset;\n\n      // get point distance \"sag\" away from midpoint of line\n      const qX = (x2 + x1) / 2 - (2 * sag * (y2 - y1)) / distance;\n      const qY = (y2 + y1) / 2 + (2 * sag * (x2 - x1)) / distance;\n\n      // draw curve with handle point Q\n      path = ['M', x1, y1, 'Q', qX, qY, x2, y2].join(' ');\n    }\n\n    // set edge path\n    const edge = s[i];\n    d3.select(edge).attr('d', path);\n  }\n\n  // position edge label in center of edge line and rotate\n  positionEdgeLabel(d, i, s) {\n    let x1 = d.source.x;\n    let y1 = d.source.y;\n    let x2 = d.target.x;\n    let y2 = d.target.y;\n\n    // get angle between source/target in radians\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n\n    // get radius of source/target nodes\n    const sourceRadius = nodeRadius - 0.25;\n    let targetRadius = nodeRadius - 0.25;\n    // increase target node radius to bring tip of arrowhead out of circle\n    if (d.directed)\n      targetRadius += edgeArrowSize / 4;\n\n    // spread out contact points with circle over spread angle\n    const angleOffset = edgeSpreadAngle * d.coincidentOffset;\n\n    // bring start/end of curve to edge of circle\n    x1 += Math.cos(angle + angleOffset) * sourceRadius;\n    y1 += Math.sin(angle + angleOffset) * sourceRadius;\n    x2 -= Math.cos(angle - angleOffset) * targetRadius;\n    y2 -= Math.sin(angle - angleOffset) * targetRadius;\n\n    // get straight line distance between start/end of curve\n    const distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n    // get \"sagitta\" distance\n    const sag = Math.min(edgeSpreadDistance, distance) * d.coincidentOffset;\n\n    // get anchor point of text, point distance \"sag\" away from midpoint of line\n    const textX = (x2 + x1) / 2 - (sag * (y2 - y1)) / distance;\n    const textY = (y2 + y1) / 2 + (sag * (x2 - x1)) / distance;\n\n    // get angle of text in degrees\n    angle = (angle / (2 * Math.PI)) * 360;\n    // rotate text to always show upright\n    if (angle > 90)\n      angle -= 180;\n    if (angle <= -90)\n      angle += 180;\n\n    // set vertical alignment of text relative to anchor point\n    let dy = -0.35 * edgeFontSize;\n    // always place text on \"outside\" side of curve\n    if (sag < 0 && d.source.x > d.target.x)\n      dy = 1.1 * edgeFontSize;\n\n    // set edge text transform\n    const edgeLabel = s[i];\n    d3.select(edgeLabel)\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('dy', dy)\n      .attr(\n        'transform',\n        'translate(' + textX + ',' + textY + ') rotate(' + angle + ') '\n      );\n  }\n\n  // fit view to contents of graph\n  fitView() {\n    const contents = d3\n      .select('#graph_view')\n      .node()\n      .getBBox();\n    const container = d3\n      .select('#graph')\n      .node()\n      .getBoundingClientRect();\n    const padding = nodeRadius;\n\n    // if no contents, exit\n    if (contents.width === 0 || contents.height === 0)\n      return;\n\n    // dimensions minus borders\n    container.width -= 2;\n    container.height -= 2;\n\n    // calculate center of contents\n    contents.midX = contents.x + contents.width / 2;\n    contents.midY = contents.y + contents.height / 2;\n\n    // determine scale and translate to fit view\n    const scale =\n      1 /\n      Math.max(\n        contents.width / (container.width - padding),\n        contents.height / (container.height - padding)\n      );\n    const translateX = container.width / 2 - scale * contents.midX;\n    const translateY = container.height / 2 - scale * contents.midY;\n\n    // perform view transform\n    d3.select('#graph').call(\n      this.state.viewZoomHandler.transform,\n      d3.zoomIdentity.translate(translateX, translateY).scale(scale)\n    );\n  }\n\n  // center view and reset to 100% zoom\n  resetView() {\n    const container = d3\n      .select('#graph')\n      .node()\n      .getBoundingClientRect();\n\n    // dimensions minus borders\n    container.width -= 2;\n    container.height -= 2;\n\n    // determine scale and translate to fit view\n    const scale = 1;\n    const translateX = container.width / 2;\n    const translateY = container.height / 2;\n\n    // perform view transform\n    d3.select('#graph').call(\n      this.state.viewZoomHandler.transform,\n      d3.zoomIdentity.translate(translateX, translateY).scale(scale)\n    );\n  }\n\n  // unpin all nodes\n  unpinAll() {\n    const data = this.state.data;\n\n    data.nodes.forEach((node) => {\n      node.fx = null;\n      node.fy = null;\n    });\n\n    this.state.simulation.alpha(1).restart();\n  }\n\n  // pin all nodes\n  pinAll() {\n    const data = this.state.data;\n\n    data.nodes.forEach((node) => {\n      node.fx = node.x;\n      node.fy = node.y;\n    });\n  }\n\n  // when node or edge clicked by user\n  onNodeEdgeClick(d) {\n    d3.event.stopPropagation();\n\n    if (!d.selected) {\n      this.deselectAll();\n      d.selected = true;\n    } else\n      this.deselectAll();\n\n    this.updateNodeCircles();\n    this.updateEdgeLines();\n\n    this.props.setSelectedElement(d);\n  }\n\n  // when node or edge hovered by user\n  onNodeEdgeHover(d) {\n    d3.event.stopPropagation();\n\n    d.hovered = true;\n\n    this.updateNodeCircles();\n    this.updateEdgeLines();\n\n    this.props.setHoveredElement(d);\n  }\n\n  // when node or edge unhovered by user\n  onNodeEdgeUnhover(d) {\n    d3.event.stopPropagation();\n\n    d.hovered = false;\n\n    this.updateNodeCircles();\n    this.updateEdgeLines();\n\n    this.props.setHoveredElement(null);\n  }\n\n  // deselect all elements\n  deselectAll() {\n    for (const node of this.state.data.nodes)\n      node.selected = undefined;\n    for (const edge of this.state.data.edges)\n      edge.selected = undefined;\n  }\n\n  // when node dragged by user\n  onNodeDragStart() {\n    this.state.simulation.alphaTarget(1).restart();\n  }\n\n  // when node dragged by user\n  onNodeDrag(d) {\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n  }\n\n  // when node dragged by user\n  onNodeDragEnd() {\n    this.state.simulation.alphaTarget(0).restart();\n  }\n\n  // when view/background is clicked by user\n  onViewClick() {\n    this.deselectAll();\n    this.updateNodeCircles();\n    this.updateEdgeLines();\n    this.props.setSelectedElement(null);\n  }\n\n  // when view panned or zoomed by user\n  onViewZoom() {\n    d3.select('#graph_view').attr('transform', d3.event.transform);\n  }\n\n  // update simulation with new data (new nodes and/or edges)\n  updateSimulation() {\n    const data = this.state.data;\n    this.state.simulation.nodes(data.nodes);\n    this.state.simulation.force('link').links(data.edges);\n    this.state.simulation.alpha(1).restart();\n  }\n\n  // draw edge line highlight elements\n  updateEdgeLineHighlights() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_edge_line_highlight_layer');\n\n    const edgeLineHighlights = layer\n      .selectAll('.graph_edge_line_highlight')\n      .data(data.edges.filter((d) => d.highlighted === true));\n\n    edgeLineHighlights\n      .enter()\n      .append('path')\n      .merge(edgeLineHighlights)\n      .attr('class', 'graph_edge_line_highlight')\n      .attr('fill', 'none')\n      .attr('stroke', highlightColor)\n      .attr('stroke-width', edgeArrowSize)\n      .attr('stroke-linecap', 'square');\n\n    edgeLineHighlights.exit().remove();\n  }\n\n  // draw edge line elements\n  updateEdgeLines() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_edge_line_layer');\n\n    const edgeLines = layer.selectAll('.graph_edge_line').data(data.edges);\n\n    edgeLines\n      .enter()\n      .append('path')\n      .merge(edgeLines)\n      .attr('class', 'graph_edge_line')\n      .attr('marker-end', (d) => (d.directed ? 'url(#graph_arrowhead)' : ''))\n      .attr('fill', 'none')\n      .attr('stroke', inkColor)\n      .attr('stroke-width', edgeThickness)\n      .style('stroke-dasharray', (d) =>\n        d.selected || d.hovered\n          ? edgeThickness * 2 + ' ' + edgeThickness\n          : 'none'\n      );\n\n    edgeLines.exit().remove();\n  }\n\n  // draw edge label elements\n  updateEdgeLabels() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_edge_label_layer');\n\n    const edgeLabels = layer.selectAll('.graph_edge_label').data(data.edges);\n\n    edgeLabels\n      .enter()\n      .append('text')\n      .on('click', this.onNodeEdgeClick)\n      .on('mouseenter', this.onNodeEdgeHover)\n      .on('mouseleave', this.onNodeEdgeUnhover)\n      .merge(edgeLabels)\n      .attr('class', 'graph_edge_label')\n      .attr('font-size', edgeFontSize)\n      .attr('font-weight', 500)\n      .attr('text-anchor', 'middle')\n      .attr('user-select', 'none')\n      .attr('fill', inkColor)\n      .style('cursor', 'pointer')\n      .text((d) => d.kind);\n\n    edgeLabels.exit().remove();\n  }\n\n  // draw node circle highlight elements\n  updateNodeCircleHighlights() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_node_circle_highlight_layer');\n\n    const nodeCircleHighlights = layer\n      .selectAll('.graph_node_circle_highlight')\n      .data(data.nodes.filter((d) => d.highlighted === true));\n\n    nodeCircleHighlights\n      .enter()\n      .append('circle')\n      .merge(nodeCircleHighlights)\n      .attr('class', 'graph_node_circle_highlight')\n      .attr('r', nodeRadius)\n      .attr('fill', 'none')\n      .attr('stroke', highlightColor)\n      .attr('stroke-width', edgeArrowSize);\n\n    nodeCircleHighlights.exit().remove();\n  }\n\n  // draw node circle elements\n  updateNodeCircles() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_node_circle_layer');\n\n    const nodeCircles = layer.selectAll('.graph_node_circle').data(data.nodes);\n\n    nodeCircles\n      .enter()\n      .append('circle')\n      .call(this.state.nodeDragHandler)\n      .on('click', this.onNodeEdgeClick)\n      .on('mouseenter', this.onNodeEdgeHover)\n      .on('mouseleave', this.onNodeEdgeUnhover)\n      .merge(nodeCircles)\n      .attr('class', 'graph_node_circle')\n      .attr('r', nodeRadius)\n      .attr('fill', (d) => this.getNodeFillColor(d.metanode))\n      .attr('stroke', (d) => (d.selected || d.hovered ? inkColor : 'none'))\n      .attr('stroke-width', edgeThickness)\n      .style('stroke-dasharray', edgeThickness * 2 + ' ' + edgeThickness)\n      .style('cursor', 'pointer');\n\n    nodeCircles.exit().remove();\n  }\n\n  // draw node label elements\n  updateNodeLabels() {\n    const data = this.state.data;\n    const layer = d3.select('#graph_node_label_layer');\n\n    const nodeLabels = layer.selectAll('.graph_node_label').data(data.nodes);\n\n    nodeLabels\n      .enter()\n      .append('foreignObject')\n      .attr('class', 'graph_node_label')\n      .append('xhtml:div')\n      .append('xhtml:span');\n\n    layer\n      .selectAll('.graph_node_label')\n      .attr('x', -nodeRadius)\n      .attr('y', -nodeRadius)\n      .attr('width', nodeRadius * 2)\n      .attr('height', nodeRadius * 2)\n      .style('pointer-events', 'none')\n      .select('div')\n      .style('display', 'flex')\n      .style('justify-content', 'center')\n      .style('align-items', 'center')\n      .style('width', '100%')\n      .style('height', '100%')\n      .style('box-sizing', 'border-box')\n      .style('padding', nodeRadius * 0.25 + 'px')\n      .select('span')\n      .style('text-align', 'center')\n      .style('font-size', nodeFontSize + 'px')\n      .style('font-weight', 500)\n      .style('color', (d) => this.getNodeTextColor(d.metanode))\n      .style('word-break', 'break-word')\n      .html((d) => cutString(d.properties.name, nodeCharLimit));\n\n    nodeLabels.exit().remove();\n  }\n\n  // update graph\n  updateGraph() {\n    this.updateEdgeLineHighlights();\n    this.updateEdgeLines();\n    this.updateEdgeLabels();\n    this.updateNodeCircleHighlights();\n    this.updateNodeCircles();\n    this.updateNodeLabels();\n    this.pinSourceAndTargetNodes();\n    this.updateSimulation();\n  }\n\n  // fix source and target nodes in nice starting positions\n  pinSourceAndTargetNodes() {\n    const data = this.state.data;\n\n    data.nodes.forEach((node) => {\n      if (node.neo4j_id === data.source_neo4j_id) {\n        if (!node.x && !node.fx)\n          node.fx = -nodeDistance * 2;\n        if (!node.y && !node.fy)\n          node.fy = 0;\n      }\n      if (node.neo4j_id === data.target_neo4j_id) {\n        if (!node.x && !node.fx)\n          node.fx = nodeDistance * 2;\n        if (!node.y && !node.fy)\n          node.fy = 0;\n      }\n    });\n  }\n\n  // get node fill color based on type (metanode)\n  getNodeFillColor(type) {\n    const style = this.props.hetioStyles[type];\n    if (style && style.fill_color)\n      return style.fill_color;\n    else\n      return inkColor;\n  }\n\n  // get node text color based on type (metanode)\n  getNodeTextColor(type) {\n    const style = this.props.hetioStyles[type];\n    if (style && style.text_color)\n      return style.text_color;\n    else\n      return backgroundColor;\n  }\n\n  // construct graph object with relevant properties for each node/edge\n  assembleGraph(pathQueries) {\n    // empty graph object\n    const graph = {\n      source_neo4j_id: null,\n      target_neo4j_id: null,\n      nodes: [],\n      edges: []\n    };\n\n    // if null explicitly provided as argument, return empty graph object\n    if (pathQueries === null)\n      return graph;\n\n    // if pathQueries not provided as argument, get from component props\n    if (!pathQueries)\n      pathQueries = this.props.pathQueries;\n\n    // if pathQueries not valid, exit\n    if (!pathQueries || pathQueries.length <= 0)\n      return graph;\n\n    // get source/target nodes from first path in pathQueries\n    const firstPath = pathQueries[0].paths[0];\n    graph.source_neo4j_id = firstPath.node_ids[0];\n    graph.target_neo4j_id = firstPath.node_ids[firstPath.node_ids.length - 1];\n\n    // loop through all paths in pathQueries\n    for (const pathQuery of pathQueries) {\n      for (const path of pathQuery.paths) {\n        // if not checked, don't include in graph\n        if (!path.checked)\n          continue;\n\n        // loop through nodes in path\n        for (const nodeId of path.node_ids) {\n          const node = pathQuery.nodes[nodeId];\n          const existingNode = graph.nodes.find(\n            (existing) => existing.neo4j_id === node.neo4j_id\n          );\n          if (!existingNode) {\n            // if node hasn't been added to graph yet, add it\n            graph.nodes.push({\n              // copy all properties of node\n              ...node,\n              // add highlight property\n              highlighted: path.highlighted,\n              // mark as node\n              elementType: 'node'\n            });\n          } else if (path.highlighted)\n            // if node already in graph, still update highlight status\n            existingNode.highlighted = true;\n        }\n\n        // loop through edges in path\n        for (const relId of path.rel_ids) {\n          const edge = pathQuery.relationships[relId];\n          const existingEdge = graph.edges.find(\n            (existing) =>\n              existing.source_neo4j_id === edge.source_neo4j_id &&\n              existing.target_neo4j_id === edge.target_neo4j_id &&\n              existing.kind === edge.kind &&\n              existing.directed === edge.directed\n          );\n          if (!existingEdge) {\n            // if edge hasn't been added to graph yet, add it\n            graph.edges.push({\n              // copy all properties of edge\n              ...edge,\n              // set duplicate properties \"source\" and \"target\" because d3\n              // needs them (with those names) to create links between nodes\n              source: edge.source_neo4j_id,\n              target: edge.target_neo4j_id,\n              // add highlight property\n              highlighted: path.highlighted,\n              // mark as edge\n              elementType: 'edge'\n            });\n          } else if (path.highlighted)\n            // if edge already in graph, still update highlight status\n            existingEdge.highlighted = true;\n        }\n      }\n    }\n\n    // loop through all edges in graph to find coincident edges\n    // (multiple edges connecting the same two nodes)\n\n    // sort all edges in graph into bins of same source/target nodes\n    const edgeBins = [];\n    for (const edgeA of graph.edges) {\n      let matched = false;\n      // find bin with edges that have same source/target nodes\n      // (order-insensitve)\n      for (const edgeBin of edgeBins) {\n        const match = edgeBin.find(\n          (edgeB) =>\n            (edgeA.source_neo4j_id === edgeB.source_neo4j_id &&\n              edgeA.target_neo4j_id === edgeB.target_neo4j_id) ||\n            (edgeA.source_neo4j_id === edgeB.target_neo4j_id &&\n              edgeA.target_neo4j_id === edgeB.source_neo4j_id)\n        );\n        // if matching bin found, add edge to it\n        if (match) {\n          edgeBin.push(edgeA);\n          matched = true;\n          break;\n        }\n      }\n      // if didn't find matching bin, create new one and add edge to it\n      if (!matched)\n        edgeBins.push([edgeA]);\n    }\n\n    // loop through edge bins\n    for (const edgeBin of edgeBins) {\n      // for each edge in bin, assign coincident \"offset\", a value between\n      // -1 and 1 used for drawing, where 0 is straight line, negative is curve\n      // on one side, and positive is curve on other side\n      const firstSource = edgeBin[0].source_neo4j_id;\n      for (let index = 0; index < edgeBin.length; index++) {\n        // default offset to 0\n        let offset = 0;\n        if (edgeBin.length > 1)\n          offset = -0.5 + index / (edgeBin.length - 1);\n        // if edge source/target order in reverse order as rest of bin,\n        // invert offset\n        if (edgeBin[index].source_neo4j_id !== firstSource)\n          offset *= -1;\n        edgeBin[index].coincidentOffset = offset;\n      }\n    }\n\n    // put source and target node at end of list to ensure highest z-index\n    const sourceNodeIndex = graph.nodes.findIndex(\n      (node) => node.neo4j_id === graph.source_neo4j_id\n    );\n    if (sourceNodeIndex !== -1)\n      graph.nodes.push(graph.nodes.splice(sourceNodeIndex, 1)[0]);\n    const targetNodeIndex = graph.nodes.findIndex(\n      (node) => node.neo4j_id === graph.target_neo4j_id\n    );\n    if (targetNodeIndex !== -1)\n      graph.nodes.push(graph.nodes.splice(targetNodeIndex, 1)[0]);\n\n    return graph;\n  }\n\n  // display component\n  render() {\n    // calculate x position of graph container\n    let left = 0;\n    if (this.props.sectionWidth && this.props.width) {\n      left = this.props.sectionWidth / 2 - this.props.width / 2;\n      const minLeft =\n        this.props.sectionWidth / 2 - document.body.clientWidth / 2 + 20;\n      if (left < minLeft)\n        left = minLeft;\n    }\n\n    // title text\n    const title =\n      (this.props.sourceNode.name || '___') +\n      ' → ' +\n      (this.props.targetNode.name || '___');\n\n    // description text\n    const description = [\n      'Graph visualization of the connectivity between ',\n      this.props.sourceNode.name || '___',\n      ' (',\n      this.props.sourceNode.metanode || '___',\n      ') and ',\n      this.props.targetNode.name || '___',\n      ' (',\n      this.props.targetNode.metanode || '___',\n      '). ',\n      '\\n\\n',\n      'Created at ',\n      window.location.href,\n      '\\n\\n',\n      'This subgraph of Hetionet v1.0 was created from paths between the ',\n      'specified source/target nodes that occurred more than expected ',\n      'by chance. ',\n      'See https://het.io for more information. '\n    ].join('');\n\n    return (\n      <div id='graph_container' style={{ height: this.props.height }}>\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          id='graph'\n          width={this.props.width}\n          height={this.props.height}\n          style={{ left: left }}\n        >\n          <title>{title}</title>\n          <desc>{description}</desc>\n          <defs>\n            <style>\n              {`\n                @import url('https://fonts.googleapis.com/css?family=Raleway:400,500,700');\n                @import url('https://fonts.googleapis.com/css?family=Montserrat:400,500,700&text=0123456789');\n                * {\n                  font-family: 'Montserrat', 'Raleway', sans-serif;\n                }\n              `}\n            </style>\n            <marker\n              id='graph_arrowhead'\n              viewBox='0 0 100 100'\n              refX='80'\n              refY='50'\n              orient='auto'\n              markerUnits='userSpaceOnUse'\n              markerWidth={edgeArrowSize}\n              markerHeight={edgeArrowSize}\n            >\n              <path\n                d='\n                  M 0 0\n                  L 100 50\n                  L 0 100'\n                fill={inkColor}\n              />\n            </marker>\n          </defs>\n          <g id='graph_view'>\n            <g id='graph_edge_line_highlight_layer' />\n            <g id='graph_node_circle_highlight_layer' />\n            <g id='graph_edge_line_layer' />\n            <g id='graph_edge_label_layer' />\n            <g id='graph_node_circle_layer' />\n            <g id='graph_node_label_layer' />\n          </g>\n        </svg>\n      </div>\n    );\n  }\n}\n// connect component to global state\nGraph = connect(\n  (state) => ({\n    sourceNode: state.sourceNode,\n    targetNode: state.targetNode,\n    pathQueries: state.pathQueries,\n    hetioStyles: state.hetioStyles\n  }),\n  null,\n  null,\n  { forwardRef: true }\n)(Graph);\n\n// selected node/edge info component\nclass SelectedInfo extends Component {\n  // display row entries\n  rows() {\n    // helper text when user hovers over given field\n    let tooltipText = {};\n    if (this.props.hetioDefinitions.properties) {\n      tooltipText = {\n        ...tooltipText,\n        ...this.props.hetioDefinitions.properties.common,\n        ...this.props.hetioDefinitions.properties.edges\n      };\n    }\n    tooltipText = { ...tooltipText, ...this.props.hetmechDefinitions };\n    if (tooltipText['id'])\n      tooltipText['neo4j_id'] = tooltipText['id'];\n\n    const element = this.props.node || this.props.edge;\n\n    // get primary fields from top level of node/edge\n    let primaryFields = this.props.primaryFields;\n    // get first/second column text (key/value) for each field\n    primaryFields = primaryFields.map((field) => ({\n      firstCol: field,\n      secondCol: String(element[field]),\n      tooltipText: tooltipText[field]\n    }));\n\n    // get 'extra fields' from node/edge 'properties' field\n    let extraFields = Object.keys(element.properties);\n    // get first/second column text (key/value) for each field\n    extraFields = extraFields.map((field) => ({\n      firstCol: field,\n      secondCol: String(element.properties[field]),\n      tooltipText: tooltipText[field]\n    }));\n\n    // combine primary and extra fields\n    let fields = primaryFields.concat(extraFields);\n\n    // display fields in custom order\n    fields = sortCustom(fields, this.props.order, 'firstCol');\n\n    // make columns from fields\n    const cols = fields.map((field, index) => {\n      return (\n        <React.Fragment key={index}>\n          <td className='col_s small light'>\n            <Tooltip text={field.tooltipText}>{field.firstCol}</Tooltip>\n          </td>\n          <td className='small'>{field.secondCol}</td>\n        </React.Fragment>\n      );\n    });\n\n    // make rows in groups of two\n    const rows = new Array(Math.ceil(cols.length / 2))\n      .fill()\n      .map(() => cols.splice(0, 2))\n      .map((col, index) => <tr key={index}>{col}</tr>);\n\n    return rows;\n  }\n\n  // display component\n  render() {\n    return (\n      <table id='graph_info_table'>\n        <tbody>{this.rows()}</tbody>\n      </table>\n    );\n  }\n}\n// connect component to global state\nSelectedInfo = connect((state) => ({\n  hetioDefinitions: state.hetioDefinitions,\n  hetmechDefinitions: state.hetmechDefinitions\n}))(SelectedInfo);\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Header } from './header.js';\nimport { NodeSearch } from './node-search.js';\nimport { NodeResults } from './node-results.js';\nimport { MetapathResults } from './metapath-results.js';\nimport { PathResults } from './path-results.js';\nimport { PathGraph } from './path-graph.js';\nimport { getMetagraph } from './backend-query.js';\nimport { getHetioDefinitions } from './backend-query.js';\nimport { getHetioStyles } from './backend-query.js';\nimport { getHetmechDefinitions } from './backend-query.js';\nimport { lookupNodeById } from './backend-query.js';\nimport { searchMetapaths } from './backend-query.js';\nimport { searchPaths } from './backend-query.js';\nimport { setDefinitions } from './actions.js';\nimport { updateSourceTargetNodes } from './actions.js';\nimport { updateMetapaths } from './actions.js';\nimport { updatePathQueries } from './actions.js';\nimport { cutString } from './util.js';\nimport './styles.css';\n\n// main app component\nclass App extends Component {\n  // initialize component\n  constructor(props) {\n    super(props);\n\n    this.fetchDefinitions = this.fetchDefinitions.bind(this);\n    this.updateStateFromUrl = this.updateStateFromUrl.bind(this);\n    this.updateMetapaths = this.updateMetapaths.bind(this);\n    this.updatePaths = this.updatePaths.bind(this);\n\n    // fetch definitions when page first loads\n    this.fetchDefinitions();\n    // get parameters from url when page first loads\n    this.updateStateFromUrl();\n    // listen for back/forward navigation (history)\n    window.addEventListener('popstate', this.updateStateFromUrl);\n  }\n\n  // when component changes\n  componentDidUpdate(prevProps) {\n    // when source/target node change\n    if (\n      prevProps.sourceNode.id !== this.props.sourceNode.id ||\n      prevProps.targetNode.id !== this.props.targetNode.id\n    )\n      this.updateMetapaths();\n    // when metapaths change\n    else if (\n      JSON.stringify(prevProps.metapaths) !==\n      JSON.stringify(this.props.metapaths)\n    )\n      this.updatePaths();\n\n    // update document title after state change\n    this.updateTitle();\n  }\n\n  // get metagraph, hetio definitions, and hetmech definitions\n  fetchDefinitions() {\n    this.props.dispatch((dispatch) => {\n      // wait until all fetches return to update state\n      const promises = [\n        getMetagraph(),\n        getHetioDefinitions(),\n        getHetioStyles(),\n        getHetmechDefinitions()\n      ];\n      Promise.all(promises).then((results) => {\n        dispatch(\n          setDefinitions({\n            metagraph: results[0],\n            hetioDefinitions: results[1],\n            hetioStyles: results[2],\n            hetmechDefinitions: results[3]\n          })\n        );\n      });\n    });\n  }\n\n  // update source/target nodes, checked metapaths, etc from url\n  updateStateFromUrl(event) {\n    this.props.dispatch((dispatch) => {\n      const params = new URLSearchParams(window.location.search);\n      const source = params.get('source');\n      const target = params.get('target');\n      const metapaths = params.get('metapaths');\n      let checkedMetapaths;\n      if (metapaths)\n        checkedMetapaths = metapaths.split(',');\n      else\n        checkedMetapaths = [];\n\n      const promises = [\n        lookupNodeById(source),\n        lookupNodeById(target),\n        searchMetapaths(source, target)\n      ];\n\n      // once all queries have returned\n      Promise.all(promises).then(\n        ([newSourceNode, newTargetNode, newMetapaths]) => {\n          // by the time promises return, url may be different (eg if user\n          // clicks back/forward quickly). if different, exit and allow more\n          // recent call to change state\n          const params = new URLSearchParams(window.location.search);\n          if (\n            params.get('source') !== source ||\n            params.get('target') !== target ||\n            params.get('metapaths') !== metapaths\n          )\n            return;\n\n          if (!newMetapaths)\n            newMetapaths = [];\n\n          // check metapaths based on url\n          for (const newMetapath of newMetapaths) {\n            if (checkedMetapaths.includes(newMetapath.metapath_abbreviation))\n              newMetapath.checked = true;\n          }\n\n          // update global state\n          dispatch(\n            updateSourceTargetNodes({\n              sourceNode: newSourceNode,\n              targetNode: newTargetNode,\n              dontUpdateUrl: true\n            })\n          );\n          dispatch(\n            updateMetapaths({\n              metapaths: newMetapaths,\n              dontUpdateUrl: true\n            })\n          );\n        }\n      );\n    });\n  }\n\n  // update document title to reflect current state\n  updateTitle() {\n    const checkedMetapaths = [];\n    for (const metapath of this.props.metapaths) {\n      if (metapath.checked)\n        checkedMetapaths.push(metapath.metapath_abbreviation);\n    }\n\n    const title =\n      cutString(this.props.sourceNode.name || '___', 20) +\n      ' ↔ ' +\n      cutString(this.props.targetNode.name || '___', 20) +\n      ' – ' +\n      checkedMetapaths.length +\n      ' metapaths';\n    document.title = title;\n  }\n\n  // update metapaths (node pair query results) when source/target node change\n  updateMetapaths() {\n    this.props.dispatch((dispatch) =>\n      searchMetapaths(this.props.sourceNode.id, this.props.targetNode.id).then(\n        (results) =>\n          dispatch(\n            updateMetapaths({\n              metapaths: results,\n              preserveChecks: true\n            })\n          )\n      )\n    );\n  }\n\n  // update paths when checked metapaths change\n  updatePaths() {\n    this.props.dispatch((dispatch) => {\n      // fetch paths for all checked metapaths\n      const promises = [];\n      for (const metapath of this.props.metapaths) {\n        if (metapath.checked) {\n          promises.push(\n            searchPaths(\n              this.props.sourceNode.id,\n              this.props.targetNode.id,\n              metapath.metapath_abbreviation\n            )\n          );\n        }\n      }\n\n      // update path queries when all queries have returned\n      Promise.all(promises).then((results) => {\n        dispatch(\n          updatePathQueries({\n            pathQueries: results,\n            preserveChecks: true\n          })\n        );\n      });\n    });\n  }\n\n  // display component\n  render() {\n    return (\n      <>\n        <Header />\n        <NodeSearch />\n        <NodeResults />\n        <MetapathResults />\n        <PathResults />\n        <PathGraph />\n      </>\n    );\n  }\n}\n// connect component to global state\nApp = connect((state) => ({\n  sourceNode: state.sourceNode,\n  targetNode: state.targetNode,\n  metapaths: state.metapaths\n}))(App);\n\nexport { App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport { Reducer } from './reducers.js';\nimport { App } from './app.js';\n\n// create global state store\nconst store = createStore(Reducer, applyMiddleware(thunk));\n\n// render/run app\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { transferObjectProps } from './util';\nimport { transferQueryProps } from './util';\nimport { copyObject } from './util';\n\n// map previous global state to new global state based on action\nexport function Reducer(prevState, action) {\n  // start with previous state\n  let newState;\n  if (prevState === undefined)\n    newState = {};\n  else\n    newState = { ...prevState };\n\n  // detect action type and set new state accordingly\n  switch (action.type) {\n    // set definitions\n    case 'set_definitions':\n      if (action.payload.metagraph !== undefined)\n        newState.metagraph = copyObject(action.payload.metagraph);\n      if (action.payload.hetioDefinitions !== undefined)\n        newState.hetioDefinitions = copyObject(action.payload.hetioDefinitions);\n      if (action.payload.hetioStyles !== undefined)\n        newState.hetioStyles = copyObject(action.payload.hetioStyles);\n      if (action.payload.hetmechDefinitions !== undefined) {\n        newState.hetmechDefinitions = copyObject(\n          action.payload.hetmechDefinitions\n        );\n      }\n      break;\n\n    // update source and/or target node\n    case 'update_source_target_nodes':\n      if (action.payload.sourceNode !== undefined)\n        newState.sourceNode = copyObject(action.payload.sourceNode);\n      if (action.payload.targetNode !== undefined)\n        newState.targetNode = copyObject(action.payload.targetNode);\n      break;\n\n    // swap source/target nodes\n    case 'swap_source_target_nodes':\n      if (prevState.sourceNode && prevState.targetNode) {\n        newState.sourceNode = copyObject(prevState.targetNode);\n        newState.targetNode = copyObject(prevState.sourceNode);\n      }\n      break;\n\n    // update metapaths\n    case 'update_metapaths':\n      if (action.payload.metapaths !== undefined) {\n        newState.metapaths = copyObject(action.payload.metapaths);\n        if (action.preserveChecks === true) {\n          transferObjectProps(\n            prevState.metapaths,\n            newState.metapaths,\n            ['id'],\n            ['checked']\n          );\n        }\n      }\n      break;\n\n    // update path queries\n    case 'update_path_queries':\n      if (action.payload.pathQueries !== undefined) {\n        newState.pathQueries = copyObject(action.payload.pathQueries);\n        if (action.preserveChecks === true) {\n          transferQueryProps(\n            prevState.pathQueries,\n            newState.pathQueries,\n            'paths',\n            ['node_ids', 'rel_ids'],\n            ['checked', 'highlighted']\n          );\n        }\n      }\n      break;\n\n    default:\n      break;\n  }\n\n  // make sure critical variables defined\n  if (!newState.metagraph)\n    newState.metagraph = {};\n  if (!newState.hetioDefinitions)\n    newState.hetioDefinitions = {};\n  if (!newState.hetioStyles)\n    newState.hetioStyles = {};\n  if (!newState.hetmechDefinitions)\n    newState.hetmechDefinitions = {};\n  if (!newState.sourceNode)\n    newState.sourceNode = {};\n  if (!newState.targetNode)\n    newState.targetNode = {};\n  if (!newState.metapaths)\n    newState.metapaths = [];\n  if (!newState.pathQueries)\n    newState.pathQueries = [];\n\n  // update url after state change unless on redux initialization or\n  // explicitly bypassed\n  if (action.updateUrl === true && prevState !== undefined)\n    updateUrl(newState);\n\n  // set new state\n  return newState;\n}\n\n// update url to reflect current state\nfunction updateUrl(state) {\n  // get checked metapaths\n  const checkedMetapaths = [];\n  for (const metapath of state.metapaths) {\n    if (metapath.checked)\n      checkedMetapaths.push(metapath.metapath_abbreviation);\n  }\n\n  checkedMetapaths.sort();\n\n  // new url\n  const newParams = new URLSearchParams();\n\n  // set url parameters\n  if (state.sourceNode.id !== undefined)\n    newParams.set('source', state.sourceNode.id);\n  if (state.targetNode.id !== undefined)\n    newParams.set('target', state.targetNode.id);\n  if (checkedMetapaths.length > 0)\n    newParams.set('metapaths', checkedMetapaths.join(','));\n\n  // make search string\n  let search = newParams.toString();\n  if (search.length > 0)\n    search = '?' + search;\n\n  // if url already matches state, dont push another history entry\n  if (search === window.location.search)\n    return;\n\n  // navigate to new url\n  const url = window.location.origin + window.location.pathname + search;\n  window.history.pushState({}, '', url);\n}\n"],"sourceRoot":""}